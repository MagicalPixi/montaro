{"version":3,"sources":["webpack:///dist.js","webpack:///webpack/bootstrap 31a8fd47127da6dfecf3","webpack:///./src/index.js","webpack:///./~/pixi-lib/index.js","webpack:///./~/pixi-lib/lib/appendStage.js","webpack:///./~/pixi-lib/lib/createRender.js","webpack:///./~/lodash/lodash.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/pixi-lib/lib/audioControl.js","webpack:///./~/pixi-lib/lib/createAction.js","webpack:///./~/pubsub-js/src/pubsub.js","webpack:///./~/pixi-lib/lib/createLoader.js","webpack:///./~/pixi-lib/lib/distance.js","webpack:///./~/pixi-lib/lib/fixSpriteProperties.js","webpack:///./~/pixi-lib/lib/getIm.js","webpack:///./~/pixi-lib/lib/setConfig.js","webpack:///./~/pixi-lib/lib/getMc.js","webpack:///./~/pixi-lib/lib/getSp.js","webpack:///./~/pixi-lib/lib/getTextures.js","webpack:///./~/pixi-lib/lib/loadResource.js","webpack:///./~/pixi-lib/lib/loadSprite.js","webpack:///./~/pixi-lib/lib/types.js","webpack:///./~/pixi-lib/lib/makeIdentity.js","webpack:///./~/pixi-lib/lib/math.js","webpack:///./~/pixi-lib/lib/utils/addStyle.js","webpack:///./~/pixi-lib/lib/utils/basicLoading.js","webpack:///./~/pixi-lib/lib/utils/matrixManager.js","webpack:///./~/pixi-lib/lib/utils/mpLoading.js","webpack:///./~/pixi-lib/lib/utils/repeat.js","webpack:///./~/pixi-lib/lib/utils/resizeImageData.js","webpack:///./~/pixi-lib/lib/utils/shareGuide.js","webpack:///./~/pixi-lib/lib/utils/unfoldArray.js","webpack:///./~/pixi-lib/lib/audio/loadAudio.js","webpack:///./src/game/index.js","webpack:///./src/loader.js","webpack:///./src/game/world.js","webpack:///./src/game/physics/index.js","webpack:///./src/game/physics/block.js","webpack:///./src/game/physics/world.js","webpack:///./src/game/physics/observer.js","webpack:///./src/game/physics/collision.js","webpack:///./src/game/physics/player.js","webpack:///./images/road/index.js","webpack:///./src/game/block/index.js","webpack:///./images/car/index.js","webpack:///./images/car/sprite.js","webpack:///./images/block/index.js","webpack:///./images/star/index.js","webpack:///./src/game/road/index.js","webpack:///./images/bg/index.js","webpack:///./images/bg/sprite.js","webpack:///./images/bg2/index.js","webpack:///./images/bg2/sprite.js","webpack:///./src/game/background/group.js","webpack:///./src/game/background/fn.js","webpack:///./images/building0/index.js","webpack:///./images/building0/sprite.js","webpack:///./images/building1/index.js","webpack:///./images/building1/sprite.js","webpack:///./images/building2/index.js","webpack:///./images/building2/sprite.js","webpack:///./images/building3/index.js","webpack:///./images/building3/sprite.js","webpack:///./images/building4/index.js","webpack:///./images/building4/sprite.js","webpack:///./images/bush/index.js","webpack:///./images/bush/sprite.js","webpack:///./images/cloud/index.js","webpack:///./images/cloud/sprite.js","webpack:///./images/cloudSun/index.js","webpack:///./images/cloudSun/sprite.js","webpack:///./images/tree/index.js","webpack:///./images/tree/sprite.js","webpack:///./src/game/background/group2.js","webpack:///./images/greenHill/index.js","webpack:///./images/greenHill/sprite.js","webpack:///./images/greenMountains/index.js","webpack:///./images/greenMountains/sprite.js","webpack:///./images/westLakeLantern/index.js","webpack:///./images/westLakeLantern/sprite.js","webpack:///./images/westLakeHydrant/index.js","webpack:///./images/westLakeHydrant/sprite.js","webpack:///./images/groupBuildings/index.js","webpack:///./images/groupBuildings/sprite.js","webpack:///./images/smokeShop/index.js","webpack:///./images/smokeShop/sprite.js","webpack:///./images/platformChair/index.js","webpack:///./images/platformChair/sprite.js","webpack:///./images/westLakeBridgeWave/index.js","webpack:///./images/westLakeBridgeWave/sprite.js","webpack:///./images/westLakeBridgeApproache/index.js","webpack:///./images/westLakeBridgeApproache/sprite.js","webpack:///./images/westLakeBridge/index.js","webpack:///./images/westLakeBridge/sprite.js","webpack:///./images/westLakeMansion/index.js","webpack:///./images/westLakeMansion/sprite.js","webpack:///./images/building5/index.js","webpack:///./images/building5/sprite.js","webpack:///./images/building6/index.js","webpack:///./images/building6/sprite.js","webpack:///./src/game/background/group3.js","webpack:///./src/game/background/group4.js","webpack:///./src/game/background/group5.js","webpack:///./images/game_background/index.js","webpack:///./images/game_background/sprite.js","webpack:///./images/goldCoin/index.js","webpack:///./images/goldCoin/sprite.js","webpack:///./src/game/dog/index.js","webpack:///./images/cat/index.js","webpack:///./images/cat/sprite.js","webpack:///./src/end/index.js","webpack:///./src/lib/ajax.js","webpack:///./images/game_over_background/index.js","webpack:///./images/game_over_background/sprite.js","webpack:///./images/play_again_button/index.js","webpack:///./images/play_again_button/sprite.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","pixiLib","render","createRender","document","body","game","appendStage","audioControl","createAction","createLoader","distance","fixSpriteProperties","getIm","getMc","getSp","getTextures","loadResource","loadSprite","makeIdentity","math","setConfig","types","utils","addStyle","basicLoading","matrixManager","mpLoading","repeat","resizeImageData","shareGuide","unfoldArray","audio","loadAudio","window","container","config","apply","this","arguments","stage","PIXI","Container","cancelAnimate","clearRender","cancel","w","DEFAULT_WIDTH","h","DEFAULT_HEIGHT","renderer","bg","autoDetectRenderer","transparent","appendChild","view","raf","animate","_","isFunction","cancelAnimationFrame","s","cb","requestAnimationFrame","children","forEach","child","startDuration","duration","setTimeout","startCount","count","i","__WEBPACK_AMD_DEFINE_RESULT__","global","addMapEntry","map","pair","set","addSetEntry","value","add","func","thisArg","args","length","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","key","baseFindIndex","fromIndex","fromRight","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","object","undefined","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","isHostObject","toString","e","iteratorToArray","iterator","data","next","done","push","mapToArray","size","overArg","transform","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","test","reComplexSymbol","lastIndex","stringToArray","match","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","type","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isString","isArguments","String","skipIndexes","isIndex","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","source","copyObject","keys","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseConformsTo","Object","baseCreate","proto","objectCreate","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","path","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArrayBuffer","arrayBufferTag","baseIsDate","dateTag","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","mapTag","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseIsRegExp","regexpTag","baseIsSet","setTag","baseIsTypedArray","isLength","typedArrayTags","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseRest","otherArgs","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","slice","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","root","Ctor","isBind","BIND_FLAG","createCtor","createCaseFirst","methodName","charAt","trailing","join","createCompounder","callback","words","deburr","replace","reApos","thisBinding","prototype","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","setWrapToString","createRound","Math","precision","split","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","boolTag","numberTag","errorTag","name","message","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getAllKeysIn","keysIn","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","transforms","getWrapDetails","reWrapDetails","reSplitDetails","hasPath","hasFunc","input","getPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","insertWrapDetails","details","reWrapComment","spreadableSymbol","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","funcToString","updateWrapDetails","wrapFlags","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","rand","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","propertyIsEnumerable","isBoolean","isElement","nodeType","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","objectCtorString","isSafeInteger","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","deburrLetter","reComboMark","endsWith","target","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","parseInt","radix","nativeParseInt","reHasHexPrefix","nativeReplace","limit","isRegExp","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","unescapeHtmlChar","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Symbol","getPrototypeOf","isConcatSpreadable","ctxClearTimeout","ctxNow","Date","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","defineProperty","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","reference","configurable","enumerable","reLeadingDot","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","isArrayBuffer","nodeIsArrayBuffer","isDate","nodeIsDate","isMap","nodeIsMap","nodeIsRegExp","isSet","nodeIsSet","nodeIsTypedArray","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","htmlEscapes","&","<",">","\"","'","`","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","parseFloat","freeGlobal","freeSelf","self","freeExports","freeModule","freeProcess","process","nodeUtil","binding","webpackPolyfill","deprecate","mp3Url","audioEle","querySelector","createElement","src","play","stop","isEnd","actionStates","PubSub","publish","progress","on","extra","subscribe","topic","dispatch","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","factory","hasKeys","obj","throwException","ex","callSubscriberWithDelayedExceptions","subscriber","callSubscriberWithImmediateExceptions","deliverMessage","originalMessage","matchedMessage","immediateExceptions","subscribers","messages","callSubscriber","createDeliveryFunction","substr","messageHasSubscribers","found","Boolean","sync","deliver","hasSubscribers","lastUid","publishSync","token","clearAllSubscriptions","clearSubscriptions","unsubscribe","t","isTopic","isToken","mySpriteNames","load","spriteResourceOne","loader","loadedResources","loadedResourceCache","spriteNames","postFix","spriteNameOne","spriteDir","publicPath","addMulti","spriteName","nameFormats","spriteObjOne","getResources","x1","y1","x2","y2","console","log","pow","settingProperties","finalProperties","finalKeys","settingKeys","textures","sp","Sprite","renderCount","setValue","k0","shift","k","texturesArr","mc","extras","MovieClip","_render","onAction","playAction","loop","isKeepEnd","backTo","gotoAndPlay","cf","currentFrame","gotoAndStop","ele","resources","texture","resourceUrl","resourceKey","spriteFnMap","SPRITE_IM","SPRITE_MC","SPRITE_SP","spriteType","actionFrames","resource","spriteDisplayObj","a","b","rotateWithCentral","x","y","radians","targetX","cos","sin","targetY","boomerangTrace","maxValue","doubleV","boomrangeTraceThunk","circleTrace","r","sqrt","circleTraceThunk","rr","styleObj","style","cw","ch","containerStyle","backgroundColor","width","height","top","left","blackBgStyle","opacity","iconContainerStyle","overflow","topCoverStyleFn","topW","topH","border","borderWidth","borderColor","zIndex","bottomCoverStyleFn","lOrR","bh","bw","l","bottom","fillStyleFn","warn","containerBox","containerBg","topCover","blCover","brCover","allProgress","el","autoLoad","si","setInterval","clearInterval","blockStyle","bgc","float","transition","webkitTransition","blockRotateStyle","matrixContainerStyle","webkitTransform","rotateAnimation","element","color","task","from","pre","to","hasColor","dataArr","containerDiv","elementsArr","cell","toBeColor","ri","repeate","cgrey","cyellow","cred","cgreen","cblack","corange","cpurple","cblue","colorArr","num","resizeX","resizeY","gap","lines","finalResizedData","lineOne","init","dataOne","resizedLineOne","sharedPng","div","right","img","Image","onclick","fromArr","arr","v","unV","AudioPlayer","playing","addEventListener","beginHead","currentTime","playObj","idleAp","ap","jsonResource","pngResource","pivot","Point","rotation","PI","W","H","world","addBlock","block","blockFactory","addChildAt","addStar","randomy","star","starFactory","addChild","counter","reset","removeChildren","road","gameBackground","goldCoinFn","goldCoin","dog","finishCb","getScore","interactive","jump","event","gameFail","reward","sprite","dismiss","upScore","gameOver","isGameEnd","gogogo","screenHeight","World","roadFn","gravity","land","roadBaseHeight","speed","getY","Block","Player","BlockType","Reward","Enemy","option","Oberver","collision","players","blocks","addPlayerEvent","player","addBlockEvent","removeBlockEvent","enemyCollisionEvent","enemy","rewardCollisionEvent","addPlayer","sendEvent","removeBlock","dt","inland","origin","dx","dy","checkEnemyCollision","topBlock","bottomBlock","checkBottomCollision","checkTopCollision","Ob","events","handler","odx","ody","abs","roadBaseFn","base","grass","Graphics","beginFill","drawRect","roadBaseWidth","grassHeight","endFill","grass1","grassHeight2","rect","roadLightLine","line","roadDarkLine","ignoreLine","roadHeight","blockFnWrapper","blockFn","empty","blockManager","unzipRoadArr","error","carFn","roadArr","mySpriteFn","scale","anchor","initX","initY","myBlock","removeChild","animationSpeed","mySprite","getCoordinateByPosition","middle","anchor.x","anchor.y","scale.x","scale.y","audioPlayObj","hit","repeatBackground","spriteFn","build","sideX","fns","getBg","bgFn","groupFn","groupFn2","groupFn3","groupFn4","groupFn5","gameEnd","bgs","buildingsArr","buildings","setSpeed","setGameEnd","newBuildings","removed","newBg","cloudFn","argArr","cloud","cloudSun","bushesFn","bush","treesFn","tree","buildingFn","building0","building2","building3","building4","building1","addChildren","arrFn","maxY","argsFn","fnArr","childrenFn","platformChairFn","platformChair","building6Fn","building6","greenHillFn","greenHill","descrorateFn","building5","westLakeHydrant","maxYAddChildren","arrFnWrapper","westLakeMansionFn","westLakeMansion","bridgeFn","westLakeBridge","lanternFn","westLakeLantern","waveFn","westLakeBridgeWave","smokeShopFn","smokeShop","scoreTextFn","Text","font","align","setText","text","score","scoreObj","dogFn","alive","finish","flyoutSpeed","g","moveSpeed","moveX","endX","upY","downY","mask","up","down","png","textForScore","ajax","user","post","then","response","background","button","Ajax","url","$public","$private","XHRConnection","objectToQueryString","put","createMethods","always","methods","xhr","XMLHttpRequest","open","FormData","setRequestHeader","ready","send","promises","DONE","readyState","parseResponse","status","JSON","parse","responseText","allPromises","promise","getQueryString","item","stringify","encodeURIComponent"],"mappings":"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A24B,SACA34B,EAAAwG,QACAxG,EAAAgf,UACAhf,EAAAxG,OACAwG,EAAAgsB,WACAhsB,EAAAisB,aACAjsB,EAAAmyB,WACAnyB,EAAAoyB,mBACApyB,EAAA+nB,WACA/nB,EAAA66B,SACA76B,EAAAy6B,aACAz6B,EAAA47B,UACA57B,EAAA67B,YACA77B,EAAAqyB,SACAryB,EAAA4lB,UACA5lB,EAAA0yB,UACA1yB,EAAA86B,QACA96B,EAAAksB,UACAlsB,EAAAmoB,QACAnoB,EAAAwlB,WACAxlB,EAAA87B,QACA97B,EAAAk5B,YACAl5B,EAAA+7B,aACA/7B,EAAAg8B,YACAh8B,EAAAyoB,WACAzoB,EAAAo5B,gBACAp5B,EAAA44B,aACA54B,EAAA+zB,QACA/zB,EAAAmsB,UACAnsB,EAAAkP,YACAlP,EAAA2yB,cACA3yB,EAAAy3B,QACAz3B,EAAA2iB,WACA3iB,EAAA4iB,aACA5iB,EAAA6iB,eACA7iB,EAAA03B,UACA13B,EAAAi8B,SACAj8B,EAAAk8B,cACAl8B,EAAAq5B,SACAr5B,EAAA2lB,UACA3lB,EAAA8iB,UACA9iB,EAAAooB,QACApoB,EAAAoa,WACApa,EAAA8lB,cACA9lB,EAAAtG,OACAsG,EAAAosB,WACApsB,EAAAgmB,WACAhmB,EAAA6U,SACA7U,EAAA64B,UACA74B,EAAAsjB,cACAtjB,EAAAujB,gBACAvjB,EAAAud,SACAvd,EAAAqoB,UACAroB,EAAAwjB,QACAxjB,EAAAyjB,QACAzjB,EAAA0jB,aACA1jB,EAAA2jB,kBACA3jB,EAAA4jB,aACA5jB,EAAAskB,OACAtkB,EAAAsoB,YACAtoB,EAAAma,QACAna,EAAA2kB,WACA3kB,EAAA+6B,WACA/6B,EAAAg7B,aACAh7B,EAAAkzB,UACAlzB,EAAAuQ,iBACAvQ,EAAAhB,aACAgB,EAAAuoB,SACAvoB,EAAA23B,SACA33B,EAAA43B,WACA53B,EAAA63B,aACA73B,EAAA6jB,QACA7jB,EAAA8jB,UACA9jB,EAAA+jB,YACA/jB,EAAAqsB,SACArsB,EAAAgkB,SACAhkB,EAAA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","file":"dist.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1)\n\tvar render = pixiLib.createRender(document.body)\n\tvar game = __webpack_require__(31)\n\t\n\tgame(render)\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = {appendStage:__webpack_require__(2),audioControl:__webpack_require__(6),createAction:__webpack_require__(7),createLoader:__webpack_require__(9),createRender:__webpack_require__(3),distance:__webpack_require__(10),fixSpriteProperties:__webpack_require__(11),getIm:__webpack_require__(12),getMc:__webpack_require__(14),getSp:__webpack_require__(15),getTextures:__webpack_require__(16),loadResource:__webpack_require__(17),loadSprite:__webpack_require__(18),makeIdentity:__webpack_require__(20),math:__webpack_require__(21),setConfig:__webpack_require__(13),types:__webpack_require__(19),utils:{addStyle:__webpack_require__(22),basicLoading:__webpack_require__(23),matrixManager:__webpack_require__(24),mpLoading:__webpack_require__(25),repeat:__webpack_require__(26),resizeImageData:__webpack_require__(27),shareGuide:__webpack_require__(28),unfoldArray:__webpack_require__(29),},audio:{loadAudio:__webpack_require__(30),},};if( typeof window !== \"undefined\" ){ \n\twindow.pixiLib=pixiLib; \n\t} \n\tif(true ){  \n\tmodule.exports= pixiLib; \n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 快速生成一个stage，并插入到容器种\n\t * @param container\n\t * @param config\n\t * @returns {module.exports.Container}\n\t */\n\tvar createRender = __webpack_require__(3);\n\t\n\tmodule.exports = function (container,config) {\n\t\n\t  var render = createRender.apply(this,arguments);\n\t\n\t  var stage = new PIXI.Container();\n\t\n\t  var cancelAnimate = render(stage);\n\t\n\t  stage.clearRender = cancelAnimate.cancel;\n\t\n\t  return stage;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _ = __webpack_require__(4)\n\tvar DEFAULT_WIDTH = 640;\n\t\n\tvar DEFAULT_HEIGHT = 1004;\n\t/**\n\t * 创建一个渲染器\n\t * @param container\n\t * @param config\n\t * @returns {Function}\n\t */\n\tfunction createRender(container,config) {\n\t\n\t  if(!config){\n\t    config = {};\n\t  }\n\t\n\t  var w = config.w || DEFAULT_WIDTH;\n\t  var h = config.h || DEFAULT_HEIGHT;\n\t  var bg = config.bg || '#fff';\n\t\n\t  var renderer = new PIXI.autoDetectRenderer(w, h, {\n\t      transparent:true\n\t    }\n\t  );\n\t\n\t  container.appendChild(renderer.view);\n\t\n\t  var raf = null;\n\t\n\t  return function animate(stage) {\n\t\n\t    if(_.isFunction(stage)){\n\t      stage = stage()\n\t    }\n\t\n\t    cancelAnimationFrame(raf);\n\t\n\t    var animate = function (s,cb) {\n\t\n\t      raf = requestAnimationFrame(function(){\n\t        animate(s,cb);\n\t      });\n\t\n\t      if(s.render){\n\t        s.render();\n\t      }\n\t\n\t      s.children.forEach((function(child){\n\t        if(child.render){\n\t          child.render();\n\t        }\n\t      }));\n\t      renderer.render(s);\n\t\n\t      cb && cb();\n\t    };\n\t\n\t    animate(stage);\n\t\n\t    return {\n\t      cancel:function animateCancel(){\n\t        cancelAnimationFrame(raf);\n\t      },\n\t      startDuration:function start(duration){\n\t        animate(stage);\n\t        if(duration>0){\n\t          setTimeout(function () {\n\t            cancelAnimationFrame(raf);\n\t          },duration)\n\t        }\n\t      },\n\t      startCount:function start(count){\n\t        var i = 0;\n\t        animate(stage,function(){\n\t          i++;\n\t          if(i > count){\n\t            cancelAnimationFrame(raf);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tcreateRender.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\tcreateRender.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\n\t\n\tmodule.exports = createRender;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.14.2';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', ARY_FLAG],\n\t    ['bind', BIND_FLAG],\n\t    ['bindKey', BIND_KEY_FLAG],\n\t    ['curry', CURRY_FLAG],\n\t    ['curryRight', CURRY_RIGHT_FLAG],\n\t    ['flip', FLIP_FLAG],\n\t    ['partial', PARTIAL_FLAG],\n\t    ['partialRight', PARTIAL_RIGHT_FLAG],\n\t    ['rearg', REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout',\n\t    'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array ? array.length : 0;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array ? array.length : 0;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return baseFindIndex(array, baseIsNaN, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a unary function that invokes `func` with its argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to stub `Date#getTime` use in `_.now`.\n\t   * var stubbed = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': stubGetTime };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        getPrototype = overArg(Object.getPrototypeOf, Object),\n\t        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n\t        objectCreate = context.Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\t\n\t    /** Mocked built-ins. */\n\t    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n\t        ctxNow = context.Date && context.Date.now !== root.Date.now && context.Date.now,\n\t        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = overArg(Object.keys, Object),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(context.Object, 'create');\n\t\n\t    /* Used to set `toString` methods. */\n\t    var defineProperty = (function() {\n\t      var func = getNative(context.Object, 'defineProperty'),\n\t          name = getNative.name;\n\t\n\t      return (name && name.length > 2) ? func : undefined;\n\t    }());\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache) {\n\t        var pairs = cache.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          return this;\n\t        }\n\t        cache = this.__data__ = new MapCache(pairs);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of the enumerable property names of the array-like `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @param {boolean} inherited Specify returning inherited property names.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function arrayLikeKeys(value, inherited) {\n\t      var result = (isArray(value) || isString(value) || isArguments(value))\n\t        ? baseTimes(value.length, String)\n\t        : [];\n\t\n\t      var length = result.length,\n\t          skipIndexes = !!length;\n\t\n\t      for (var key in value) {\n\t        if ((inherited || hasOwnProperty.call(value, key)) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (length--) {\n\t        var key = props[length],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined && !(key in object)) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      return object != null && hasOwnProperty.call(object, key);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      if (!isPrototype(object)) {\n\t        return nativeKeys(object);\n\t      }\n\t      var result = [];\n\t      for (var key in Object(object)) {\n\t        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      if (!isObject(object)) {\n\t        return nativeKeysIn(object);\n\t      }\n\t      var isProto = isPrototype(object),\n\t          result = [];\n\t\n\t      for (var key in object) {\n\t        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = baseKeysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return basePickBy(object, props, function(value, key) {\n\t        return key in object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick from.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, props, predicate) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]),\n\t            newValue = value;\n\t\n\t        if (index != lastIndex) {\n\t          var objValue = nested[key];\n\t          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = isObject(objValue)\n\t              ? objValue\n\t              : (isIndex(path[index + 1]) ? [] : {});\n\t          }\n\t        }\n\t        assignValue(nested, key, newValue);\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n\t     *\n\t     * @private\n\t     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n\t     */\n\t    var clearTimeout = ctxClearTimeout || function(id) {\n\t      return root.clearTimeout(id);\n\t    };\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return baseRest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return baseRest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\t\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length,\n\t          lastIndex = length - 1;\n\t\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like\n\t     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * except that it includes inherited enumerable properties.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function nativeKeysIn(object) {\n\t      var result = [];\n\t      if (object != null) {\n\t        for (var key in Object(object)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    var setTimeout = ctxSetTimeout || function(func, wait) {\n\t      return root.setTimeout(func, wait);\n\t    };\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return defineProperty(wrapper, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      string = toString(string);\n\t\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseSlice(array, 0, -1) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return baseFindIndex(array, baseIsNaN, index - 1, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = baseRest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseSlice(array, 1, length) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = baseRest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** This method returns `true` for\n\t     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n\t     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n\t     * elements of empty collections.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return baseKeys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    var now = ctxNow || function() {\n\t      return root.Date.now();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = baseRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = baseRest(function(func, indexes) {\n\t      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(value.length) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      var isProto = isPrototype(value);\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key) &&\n\t            !(isProto && key == 'constructor')) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && nativeKeys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method is equivalent to `_.matches` when `source` is\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = baseRest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = baseRest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = baseRest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = baseRest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** Partial comparisons will match empty array and empty object\n\t     * `srcValue` values against any array or object value, respectively. See\n\t     * `_.isEqual` for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(5)(module)))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by zyg on 16/6/5.\n\t */\n\t\n\tmodule.exports = function (mp3Url,config) {\n\t  var body = document.querySelector('body')\n\t\n\t  var audioEle = document.createElement('audio')\n\t\n\t\n\t\n\t  audioEle.src = mp3Url\n\t\n\t\n\t\n\t  return {\n\t    play: function () {\n\t      audioEle.play()\n\t    },\n\t    stop: function () {\n\t      audioEle.stop()\n\t    },\n\t    remove: function () {\n\t      audioEle.stop()\n\t      audioEle.remove();\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/2/4.\n\t */\n\tvar PubSub = __webpack_require__(8);\n\t\n\tfunction createAction(name,action) {\n\t\n\t  var isStart = false;\n\t  var isEnd = false;\n\t\n\t  var actionStates = {\n\t    start: function (data) {\n\t      isEnd = false;\n\t      PubSub.publish(name+'Start',data)\n\t    },\n\t    progress: function (data) {\n\t      PubSub.publish(name+'Progress',data);\n\t    },\n\t    end: function (data) {\n\t      if(!isEnd){\n\t        isEnd= true;\n\t        PubSub.publish(name+'End',data)\n\t      }\n\t    },\n\t    on: function (name,callback,extra) {\n\t      PubSub.subscribe(name,function(topic,data){\n\t        callback(data)\n\t      });\n\t    }\n\t  };\n\t\n\t  return function () {\n\t    action.apply(actionStates,arguments);\n\t  }\n\t}\n\t\n\tcreateAction.dispatch = PubSub.publish.bind(PubSub);\n\t\n\tmodule.exports = createAction;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\tCopyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n\tLicense: MIT - http://mrgnrdrck.mit-license.org\n\t\n\thttps://github.com/mroderick/PubSubJS\n\t*/\n\t(function (root, factory){\n\t\t'use strict';\n\t\n\t    if (true){\n\t        // AMD. Register as an anonymous module.\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t    } else if (typeof exports === 'object'){\n\t        // CommonJS\n\t        factory(exports);\n\t\n\t    }\n\t\n\t    // Browser globals\n\t    var PubSub = {};\n\t    root.PubSub = PubSub;\n\t    factory(PubSub);\n\t    \n\t}(( typeof window === 'object' && window ) || this, function (PubSub){\n\t\t'use strict';\n\t\n\t\tvar messages = {},\n\t\t\tlastUid = -1;\n\t\n\t\tfunction hasKeys(obj){\n\t\t\tvar key;\n\t\n\t\t\tfor (key in obj){\n\t\t\t\tif ( obj.hasOwnProperty(key) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\n\t\t/**\n\t\t *\tReturns a function that throws the passed exception, for use as argument for setTimeout\n\t\t *\t@param { Object } ex An Error object\n\t\t */\n\t\tfunction throwException( ex ){\n\t\t\treturn function reThrowException(){\n\t\t\t\tthrow ex;\n\t\t\t};\n\t\t}\n\t\n\t\tfunction callSubscriberWithDelayedExceptions( subscriber, message, data ){\n\t\t\ttry {\n\t\t\t\tsubscriber( message, data );\n\t\t\t} catch( ex ){\n\t\t\t\tsetTimeout( throwException( ex ), 0);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction callSubscriberWithImmediateExceptions( subscriber, message, data ){\n\t\t\tsubscriber( message, data );\n\t\t}\n\t\n\t\tfunction deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n\t\t\tvar subscribers = messages[matchedMessage],\n\t\t\t\tcallSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n\t\t\t\ts;\n\t\n\t\t\tif ( !messages.hasOwnProperty( matchedMessage ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfor (s in subscribers){\n\t\t\t\tif ( subscribers.hasOwnProperty(s)){\n\t\t\t\t\tcallSubscriber( subscribers[s], originalMessage, data );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction createDeliveryFunction( message, data, immediateExceptions ){\n\t\t\treturn function deliverNamespaced(){\n\t\t\t\tvar topic = String( message ),\n\t\t\t\t\tposition = topic.lastIndexOf( '.' );\n\t\n\t\t\t\t// deliver the message as it is now\n\t\t\t\tdeliverMessage(message, message, data, immediateExceptions);\n\t\n\t\t\t\t// trim the hierarchy and deliver message to each level\n\t\t\t\twhile( position !== -1 ){\n\t\t\t\t\ttopic = topic.substr( 0, position );\n\t\t\t\t\tposition = topic.lastIndexOf('.');\n\t\t\t\t\tdeliverMessage( message, topic, data, immediateExceptions );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\tfunction messageHasSubscribers( message ){\n\t\t\tvar topic = String( message ),\n\t\t\t\tfound = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic])),\n\t\t\t\tposition = topic.lastIndexOf( '.' );\n\t\n\t\t\twhile ( !found && position !== -1 ){\n\t\t\t\ttopic = topic.substr( 0, position );\n\t\t\t\tposition = topic.lastIndexOf( '.' );\n\t\t\t\tfound = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic]));\n\t\t\t}\n\t\n\t\t\treturn found;\n\t\t}\n\t\n\t\tfunction publish( message, data, sync, immediateExceptions ){\n\t\t\tvar deliver = createDeliveryFunction( message, data, immediateExceptions ),\n\t\t\t\thasSubscribers = messageHasSubscribers( message );\n\t\n\t\t\tif ( !hasSubscribers ){\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif ( sync === true ){\n\t\t\t\tdeliver();\n\t\t\t} else {\n\t\t\t\tsetTimeout( deliver, 0 );\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\n\t\t/**\n\t\t *\tPubSub.publish( message[, data] ) -> Boolean\n\t\t *\t- message (String): The message to publish\n\t\t *\t- data: The data to pass to subscribers\n\t\t *\tPublishes the the message, passing the data to it's subscribers\n\t\t**/\n\t\tPubSub.publish = function( message, data ){\n\t\t\treturn publish( message, data, false, PubSub.immediateExceptions );\n\t\t};\n\t\n\t\t/**\n\t\t *\tPubSub.publishSync( message[, data] ) -> Boolean\n\t\t *\t- message (String): The message to publish\n\t\t *\t- data: The data to pass to subscribers\n\t\t *\tPublishes the the message synchronously, passing the data to it's subscribers\n\t\t**/\n\t\tPubSub.publishSync = function( message, data ){\n\t\t\treturn publish( message, data, true, PubSub.immediateExceptions );\n\t\t};\n\t\n\t\t/**\n\t\t *\tPubSub.subscribe( message, func ) -> String\n\t\t *\t- message (String): The message to subscribe to\n\t\t *\t- func (Function): The function to call when a new message is published\n\t\t *\tSubscribes the passed function to the passed message. Every returned token is unique and should be stored if\n\t\t *\tyou need to unsubscribe\n\t\t**/\n\t\tPubSub.subscribe = function( message, func ){\n\t\t\tif ( typeof func !== 'function'){\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// message is not registered yet\n\t\t\tif ( !messages.hasOwnProperty( message ) ){\n\t\t\t\tmessages[message] = {};\n\t\t\t}\n\t\n\t\t\t// forcing token as String, to allow for future expansions without breaking usage\n\t\t\t// and allow for easy use as key names for the 'messages' object\n\t\t\tvar token = 'uid_' + String(++lastUid);\n\t\t\tmessages[message][token] = func;\n\t\n\t\t\t// return token for unsubscribing\n\t\t\treturn token;\n\t\t};\n\t\n\t\t/* Public: Clears all subscriptions\n\t\t */\n\t\tPubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n\t\t\tmessages = {};\n\t\t};\n\t\n\t\t/*Public: Clear subscriptions by the topic\n\t\t*/\n\t\tPubSub.clearSubscriptions = function clearSubscriptions(topic){\n\t\t\tvar m; \n\t\t\tfor (m in messages){\n\t\t\t\tif (messages.hasOwnProperty(m) && m.indexOf(topic) === 0){\n\t\t\t\t\tdelete messages[m];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/* Public: removes subscriptions.\n\t\t * When passed a token, removes a specific subscription.\n\t\t * When passed a function, removes all subscriptions for that function\n\t\t * When passed a topic, removes all subscriptions for that topic (hierarchy)\n\t\t *\n\t\t * value - A token, function or topic to unsubscribe.\n\t\t *\n\t\t * Examples\n\t\t *\n\t\t *\t\t// Example 1 - unsubscribing with a token\n\t\t *\t\tvar token = PubSub.subscribe('mytopic', myFunc);\n\t\t *\t\tPubSub.unsubscribe(token);\n\t\t *\n\t\t *\t\t// Example 2 - unsubscribing with a function\n\t\t *\t\tPubSub.unsubscribe(myFunc);\n\t\t *\n\t\t *\t\t// Example 3 - unsubscribing a topic\n\t\t *\t\tPubSub.unsubscribe('mytopic');\n\t\t */\n\t\tPubSub.unsubscribe = function(value){\n\t\t\tvar isTopic    = typeof value === 'string' && messages.hasOwnProperty(value),\n\t\t\t\tisToken    = !isTopic && typeof value === 'string',\n\t\t\t\tisFunction = typeof value === 'function',\n\t\t\t\tresult = false,\n\t\t\t\tm, message, t;\n\t\n\t\t\tif (isTopic){\n\t\t\t\tdelete messages[value];\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfor ( m in messages ){\n\t\t\t\tif ( messages.hasOwnProperty( m ) ){\n\t\t\t\t\tmessage = messages[m];\n\t\n\t\t\t\t\tif ( isToken && message[value] ){\n\t\t\t\t\t\tdelete message[value];\n\t\t\t\t\t\tresult = value;\n\t\t\t\t\t\t// tokens are unique, so we can just stop here\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (isFunction) {\n\t\t\t\t\t\tfor ( t in message ){\n\t\t\t\t\t\t\tif (message.hasOwnProperty(t) && message[t] === value){\n\t\t\t\t\t\t\t\tdelete message[t];\n\t\t\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t};\n\t}));\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _ = __webpack_require__(4)\n\t\n\tvar loadedResourceCache = {};\n\t/**\n\t *\n\t * @param config\n\t *\n\t * publicPath:'资源加载路径',以/结尾\n\t *\n\t * @returns {{load: Function}}\n\t */\n\tfunction createLoader(config) {\n\t\n\t  var mySpriteNames = [];\n\t\n\t  return {\n\t\n\t    load: function load(cb) {\n\t\n\t      mySpriteNames.forEach(function (spriteResourceOne) {\n\t        PIXI.loader.add(\n\t          spriteResourceOne.key,\n\t          spriteResourceOne.value\n\t        );\n\t      });\n\t\n\t      if(mySpriteNames.length > 0){\n\t\n\t        mySpriteNames = [];\n\t\n\t        PIXI.loader.load(function (loader,loadedResources) {\n\t\n\t          loadedResourceCache = _.assign(loadedResourceCache,loadedResources);\n\t\n\t          cb(loader,loadedResourceCache);\n\t        });\n\t      }else{\n\t        cb(PIXI.loader,loadedResourceCache);\n\t      }\n\t\n\t      return this;\n\t    },\n\t    add: function add(spriteNames,postFix,dir) {\n\t      if (!postFix) {\n\t        postFix = 'json'\n\t      }\n\t      if(!dir){\n\t        dir = '';\n\t      }\n\t      spriteNames = [].concat(spriteNames).filter(function (spriteNameOne) {\n\t\n\t        return !loadedResourceCache[spriteNameOne]\n\t\n\t      }).map(function (spriteNameOne) {\n\t\n\t        var spriteDir = config.publicPath;\n\t\n\t        if(dir){\n\t          spriteDir += dir + '/';\n\t        }\n\t\n\t        return {\n\t          key: spriteNameOne,\n\t          value: spriteDir + spriteNameOne + '/' + spriteNameOne + '.' + postFix\n\t        }\n\t      });\n\t\n\t      mySpriteNames = mySpriteNames.concat(spriteNames);\n\t\n\t      return this;\n\t    },\n\t    addMulti : function addMulti(spriteName,nameFormats,postFix){\n\t      if (!postFix) {\n\t        postFix = 'json'\n\t      }\n\t\n\t\n\t      if(typeof nameFormats === 'number'){\n\t        nameFormats = _.range(nameFormats);\n\t      }\n\t\n\t      mySpriteNames = mySpriteNames.concat(nameFormats.map(function (i) {\n\t\n\t        var spriteNameOne = spriteName + i;\n\t\n\t        return {\n\t          key:spriteNameOne,\n\t          value: config.publicPath + spriteName + '/' + spriteNameOne + '.' + postFix\n\t        }\n\t      }).filter(function (spriteObjOne) {\n\t        return !loadedResourceCache[spriteObjOne.key]\n\t      }));\n\t\n\t      return this;\n\t    }\n\t  }\n\t}\n\t\n\tcreateLoader.getResources = function getResources() {\n\t  return loadedResourceCache;\n\t};\n\t\n\tmodule.exports = createLoader;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 计算两点间距\n\t * @param x1\n\t * @param y1\n\t * @param x2\n\t * @param y2\n\t * @returns {number}\n\t */\n\tmodule.exports = function(x1, y1, x2, y2) {\n\t  console.log('deprecated:use .math.distance')\n\t  return Math.pow((Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2)), 0.5);\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 修正精灵属性，比如play和stop不能同时存在，容易毫无意思。\n\t * @param settingProperties\n\t * @param finalProperties\n\t * @returns {*}\n\t */\n\t\n\tmodule.exports = function fixProperties(settingProperties,finalProperties){\n\t\n\t  if(settingProperties.play !== undefined){\n\t    delete finalProperties.stop;\n\t  }\n\t  if(settingProperties.stop !== undefined){\n\t    delete finalProperties.play;\n\t  }\n\t\n\t  var finalKeys = Object.keys(finalProperties).filter(function(key){\n\t    return /playAction/.test(key)\n\t  });\n\t\n\t  var settingKeys = Object.keys(settingProperties).filter(function(key){\n\t    return /playAction/.test(key)\n\t  });\n\t\n\t  finalKeys.map(function(key){\n\t    if(settingKeys.indexOf(key) === -1){\n\t      delete finalProperties[key];\n\t    }\n\t  });\n\t\n\t  if(settingKeys.length > 0){\n\t    delete finalProperties.stop;\n\t  }\n\t\n\t  return finalProperties;\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/1/31.\n\t */\n\t\n\tvar setConfig = __webpack_require__(13);\n\t\n\tmodule.exports = function getIm(config) {\n\t  config = Object.assign({},config);\n\t\n\t  var textures = config.textures;\n\t\n\t  delete config.textures;\n\t\n\t  var sp = new PIXI.Sprite(textures);\n\t\n\t  sp.renderCount = 0;\n\t\n\t  return setConfig(sp,config);\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 设置PIXI对象的属性。\n\t */\n\tvar setValue = function(obj,key,value){\n\t  if(key.length === 1){\n\t    var k0 = key[0];\n\t    if(typeof obj[k0] === 'function'){\n\t      obj[k0].apply(obj,[].concat(value));\n\t    }else{\n\t      obj[k0] = value;\n\t    }\n\t  }else{\n\t    setValue(obj[key.shift()],key,value);\n\t  }\n\t  return obj;\n\t};\n\t\n\tmodule.exports = function(object,config){\n\t  for(var k in config){\n\t    setValue(object, k.split('.'),config[k]);\n\t  }\n\t\n\t  return object;\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/1/31.\n\t */\n\tvar setConfig = __webpack_require__(13);\n\t\n\tmodule.exports = function getMc(config) {\n\t\n\t  config = Object.assign({},config);\n\t  \n\t  var textures = config.textures;\n\t  delete config.textures;\n\t\n\t  var texturesArr = Object.keys(textures).map(function (key) {\n\t    return textures[key];\n\t  });\n\t  //for(var key in textures){\n\t  //  texturesArr.push(textures[key]);\n\t  //}\n\t\n\t  var mc = new PIXI.extras.MovieClip(texturesArr);\n\t\n\t  mc.renderCount = 0;\n\t\n\t  return setConfig(mc,config);\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/2/29.\n\t */\n\tvar getMc = __webpack_require__(14);\n\t\n\t/**\n\t *\n\t * @param config\n\t * @param actions 截止frame帧数\n\t *  [4,7,10]\n\t * @returns {*}\n\t */\n\tmodule.exports = function getSp(config,actions) {\n\t  if(!actions){\n\t    actions = []\n\t  }\n\t\n\t  var obj = getMc(config);\n\t\n\t  var _render = function(){};\n\t\n\t  var onAction = false;\n\t  /**\n\t   * 0~4-0\n\t   * 0-5~7-0\n\t   * 0-8~10-0\n\t   * \n\t   * isKeepEnd 是否停在最后\n\t   */\n\t  obj.playAction = function playAction(index,loop,isKeepEnd) {\n\t    if(!index){\n\t      index = 0;\n\t    }\n\t\n\t    if(index < 0 || index > actions.length){\n\t      return false;\n\t    }\n\t\n\t    var min = (actions[index - 1]+1) || 0;\n\t    var max = actions[index];\n\t\n\t    var backTo = isKeepEnd ? max : 0\n\t    \n\t    this.gotoAndPlay(min);\n\t\n\t    _render = onAction ? _render : this.render;\n\t\n\t    onAction = true;\n\t\n\t    this.render = function copyRender() {\n\t      var cf = this.currentFrame;\n\t\n\t      if(cf >= max){\n\t\n\t        if(loop){\n\t          this.gotoAndPlay(min);\n\t        }else{\n\t          this.gotoAndStop(backTo);\n\t          this.render = _render;\n\t          onAction = false;\n\t        }\n\t      }\n\t\n\t      _render.call(this);\n\t    }\n\t  };\n\t\n\t  actions.map(function (ele, i) {\n\t    obj['playAction'+i] = obj.playAction.bind(obj,i);\n\t  });\n\t\n\t\n\t  return obj;\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar createLoader = __webpack_require__(9);\n\t\n\t/**\n\t * 设定资源或取出资源\n\t *\n\t * @param spriteName\n\t * @returns {*}\n\t */\n\tmodule.exports = function(spriteName){\n\t  var resources = createLoader.getResources();\n\t\n\t  var textures = false;\n\t\n\t  if (resources[spriteName]) {\n\t\n\t    textures = resources[spriteName].texture || resources[spriteName].textures;\n\t  }\n\t\n\t  return textures;\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/**\n\t * 加载对应的资源链接，png或json\n\t * @param resourceUrl\n\t * @param cb resourceObject\n\t */\n\tvar count = 0;\n\t\n\tmodule.exports = function loadResource(resourceUrl, cb) {\n\t  var resourceKey = 'img' + Date.now() + '' + (count++);\n\t\n\t  PIXI.loader.add(resourceKey, resourceUrl)\n\t    .load(function (loader, resources) {\n\t\n\t      cb(resources[resourceKey]);\n\t    });\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _ = __webpack_require__(4)\n\tvar loadResource = __webpack_require__(17);\n\tvar types = __webpack_require__(19);\n\tvar getMc = __webpack_require__(14);\n\tvar getIm = __webpack_require__(12);\n\tvar getSp = __webpack_require__(15);\n\t\n\tvar spriteFnMap = {};\n\t\n\tspriteFnMap[types.SPRITE_IM] = getIm;\n\tspriteFnMap[types.SPRITE_MC] = getMc;\n\tspriteFnMap[types.SPRITE_SP] = getSp;\n\t//为了兼容\n\tspriteFnMap['image'] = getIm;\n\tspriteFnMap['movieClip'] = getMc;\n\t/**\n\t * 加载资源，生成精灵\n\t *\n\t * @param resourceUrl  资源\n\t * @param spriteType  类型\n\t * @param properties 属性\n\t * @param actionFrames 帧 仅用于sp类型\n\t * @param cb\n\t */\n\tmodule.exports = function (resourceUrl,spriteType,properties,actionFrames,cb) {\n\t\n\t  if(typeof actionFrames === 'function'){\n\t    cb = actionFrames;\n\t    actionFrames = [];\n\t  }\n\t  properties = _.assign({},properties);\n\t\n\t  loadResource(resourceUrl, function (resource) {\n\t    //同时兼容到im和mc\n\t    properties.textures = resource.texture || resource.textures;\n\t\n\t    var spriteDisplayObj = spriteFnMap[spriteType](properties,actionFrames);\n\t\n\t    cb(spriteDisplayObj);\n\t  });\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t  SPRITE_MC:'mc',\n\t  SPRITE_IM:'im',\n\t  SPRITE_SP:'sp',\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * 计算单位向量\n\t * @param [a,b]\n\t * @returns [c,d]\n\t */\n\tvar distance = __webpack_require__(10);\n\t\n\tmodule.exports = function(a) {\n\t  console.log('deprecated:use .math.makeIdentity')\n\t\n\t  if(!a || a[0] === 0 && a[1] === 0) {\n\t    return [0, 0]\n\t  }\n\t  var b = distance(0,0,a[0],a[1]);\n\t  //Math.pow((Math.pow(a[0], 2) + Math.pow(a[1], 2)), 0.5);\n\t  return [a[0] / b , a[1] / b]\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by zyg on 16/5/24.\n\t */\n\tmodule.exports = {\n\t\n\t  rotateWithCentral: function (x,y,radians) {\n\t\n\t    var targetX = x*Math.cos(radians) - y*Math.sin(radians);\n\t    var targetY = x*Math.sin(radians) + y*Math.cos(radians);\n\t\n\t    return [\n\t      targetX - x,\n\t      targetY - y,\n\t    ]\n\t  },\n\t  distance: function (x1, y1, x2, y2) {\n\t    return Math.pow((Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2)), 0.5);\n\t  },\n\t  makeIdentity : function (a) {\n\t    if(!a || a[0] === 0 && a[1] === 0) {\n\t      return [0, 0]\n\t    }\n\t    var b = this.distance(0,0,a[0],a[1]);\n\t    //Math.pow((Math.pow(a[0], 2) + Math.pow(a[1], 2)), 0.5);\n\t    return [a[0] / b , a[1] / b]\n\t  },\n\t  //从0开始\n\t  boomerangTrace:function(x,maxValue){\n\t    var doubleV = maxValue * 2\n\t\n\t    x = x%doubleV\n\t    \n\t    if(x > maxValue){\n\t      x = doubleV - x\n\t    }\n\t    \n\t    return x\n\t  },\n\t  boomrangeTraceThunk:function (maxValue) {\n\t    var doubleV = maxValue * 2\n\t\n\t    return function () {\n\t      x = x%doubleV\n\t\n\t      if(x > maxValue){\n\t        x = doubleV - x\n\t      }\n\t\n\t      return x\n\t    }\n\t  },\n\t  circleTrace:function (r, x) {\n\t    if(x>r){\n\t      return 0\n\t    }\n\t    return Math.sqrt(Math.pow(r,2) - Math.pow(x,2));\n\t  },\n\t  circleTraceThunk:function (r) {\n\t    var rr = Math.pow(r,2)\n\t    return function(x){\n\t      if(x>r){\n\t        return 0\n\t      }\n\t      return Math.sqrt(rr - Math.pow(x,2))\n\t    }\n\t  },\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by zyg on 16/7/20.\n\t */\n\tmodule.exports = function addStyle(ele, styleObj) {\n\t  Object.keys(styleObj).map(function(key){\n\t    ele.style[key] = styleObj[key]\n\t  })\n\t}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/7/5.\n\t */\n\t\n\tvar addStyle = __webpack_require__(22)\n\t\n\tvar cw = 100;\n\tvar ch = 100;\n\t\n\tvar containerStyle=  {\n\t  backgroundColor:'#f0f0f0',\n\t  width:'100%',\n\t  height:'100%',\n\t  position:'fixed',\n\t  top:0,\n\t  left:0,\n\t}\n\t\n\tvar blackBgStyle = {\n\t  backgroundColor:'#000',\n\t  opacity:0.7,\n\t  width:'100%',\n\t  height:'100%',\n\t  position:'absolute',\n\t  top:0,\n\t  left:0,\n\t}\n\t\n\t\n\tvar iconContainerStyle = {\n\t  backgroundColor:'#fff',\n\t  width:cw+'px',\n\t  height:ch+'px',\n\t  position:'absolute',\n\t  top:'50%',\n\t  left:'50%',\n\t  transform:'translate(-50%,-50%)',\n\t  overflow:'hidden',\n\t}\n\t\n\t\n\tvar topCoverStyleFn = function () {\n\t\n\t  var topW = 50\n\t  var topH = 40\n\t\n\t  var c = containerStyle.backgroundColor\n\t\n\t  return {\n\t    width:0,\n\t    height:0,\n\t    border:'solid',\n\t    borderWidth:topH + 'px ' + topW + 'px ' + topH + 'px ' + topW + 'px ',\n\t    borderColor:c + ' transparent transparent transparent',\n\t    position:'absolute',\n\t    top:0,\n\t    left:0,\n\t    zIndex:1,\n\t  }\n\t}\n\t\n\tvar bottomCoverStyleFn = function(lOrR){\n\t\n\t  var bh = 32\n\t  var bw = 50\n\t\n\t  var l = 15\n\t\n\t  var c = containerStyle.backgroundColor\n\t\n\t  return {\n\t    width:0,\n\t    height:0,\n\t    border:'50px solid',\n\t    borderWidth:bh + 'px ' + bw + 'px ' + bh + 'px ' + bw + 'px ',\n\t    borderColor: lOrR ? 'transparent transparent ' + c + ' '  + c:  'transparent '+c+' ' +c+' transparent',\n\t    position:'absolute',\n\t    bottom:0,\n\t    left: (lOrR ? l : cw - l - bw*2)+'px',\n\t    zIndex:1,\n\t  }\n\t}\n\t\n\tvar fillStyleFn = function(){\n\t\n\t  return {\n\t    backgroundColor:'#000',\n\t    width:'100%',\n\t    height:'100%',\n\t    position:'absolute',\n\t    left:'-100%',\n\t    top:0,\n\t  }\n\t}\n\t\n\t\n\t\n\tmodule.exports = function(){\n\t\n\t  console.warn('to be deprecated.suggest to use loading.basicLoading')\n\t\n\t  var containerBox = document.createElement('div')\n\t\n\t  var container = document.createElement('div')\n\t  var containerBg = document.createElement('div')\n\t\n\t  var topCover = document.createElement('div')\n\t\n\t  var blCover = document.createElement('div')\n\t\n\t  var brCover = document.createElement('div')\n\t\n\t  var fill = document.createElement('div')\n\t\n\t  addStyle(containerBox,containerStyle)\n\t  addStyle(containerBg,blackBgStyle)\n\t\n\t  addStyle(container,iconContainerStyle)\n\t\n\t  addStyle(fill,fillStyleFn())\n\t\n\t  addStyle(topCover,topCoverStyleFn())\n\t  addStyle(blCover,bottomCoverStyleFn(true))\n\t  addStyle(brCover,bottomCoverStyleFn())\n\t\n\t\n\t//  containerBox.appendChild(containerBg)\n\t  containerBox.appendChild(container)\n\t\n\t  container.appendChild(topCover)\n\t  container.appendChild(blCover)\n\t  container.appendChild(brCover)\n\t  container.appendChild(fill)\n\t  \n\t  var allProgress = 0;\n\t  \n\t  return {\n\t    el:function(){\n\t      \n\t      return containerBox\n\t    },\n\t    load:function(progress){\n\t      if(progress < 100){\n\t        allProgress = progress\n\t        fill.style.transform = 'translate('+allProgress+'%,0%)'\n\t      }\n\t    },\n\t    autoLoad:function(cb){\n\t      \n\t      var si=setInterval(function(){\n\t        \n\t        allProgress++;\n\t        \n\t        fill.style.transform = 'translate('+allProgress+'%,0%)'\n\t\n\t        cb && cb(allProgress)\n\t        \n\t      },200)\n\t      \n\t      return function(){\n\t        clearInterval(si)\n\t      }\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/7/20.\n\t */\n\t\n\tvar addStyle = __webpack_require__(22)\n\t\n\tfunction blockStyle(bgc) {\n\t  return {\n\t    backgroundColor:bgc ? bgc : '#fff',\n\t    width:'12px',\n\t    height:'12px',\n\t    float:'left',\n\t    transition:'all 0.5',\n\t    webkitTransition:'all 0.5',\n\t  }\n\t}\n\tfunction blockRotateStyle(bgc) {\n\t  return {\n\t    backgroundColor:bgc ? bgc : '#000',\n\t  }\n\t}\n\t\n\tfunction matrixContainerStyle() {\n\t  return {\n\t    width:'132px',\n\t    height:'132px',\n\t    position:'absolute',\n\t    left:'50%',\n\t    top:'50%',\n\t    overflow:'hidden',\n\t    transform:'translate(-50%,-50%)',\n\t    webkitTransform:'translate(-50%,-50%)',\n\t  }\n\t}\n\t\n\t\n\tfunction rotateAnimation(element,color) {\n\t\n\t  var from = 0,to = 180;\n\t\n\t  var pre = 1 ? 'rotateY' : 'rotateX'\n\t\n\t  function task(){\n\t\n\t    from += 5\n\t\n\t    var styleObj = {\n\t      backgroundColor:color\n\t    }\n\t    styleObj.transform = pre + '('+from+'deg)'\n\t\n\t    addStyle(element,styleObj)\n\t\n\t    if(from < to){\n\t      requestAnimationFrame(task)\n\t    }\n\t  }\n\t\n\t  task()\n\t}\n\t\n\tfunction hasColor(c){\n\t  return ['transparent','#000','#000000'].indexOf(c) === -1\n\t}\n\t\n\tmodule.exports = function(dataArr){\n\t  \n\t\n\t  var containerDiv = document.createElement('div')\n\t\n\t  addStyle(containerDiv,matrixContainerStyle())\n\t\n\t  var elementsArr = dataArr.map(function(c,i){\n\t    var cell = document.createElement('span')\n\t\n\t    cell.toBeColor = c;\n\t\n\t    if(hasColor(c)){\n\t      c = '#fff'\n\t    }\n\t\n\t    addStyle(cell,blockStyle(c))\n\t\n\t    containerDiv.appendChild(cell)\n\t\n\t\n\t    return cell\n\t  }).filter(function(ele){\n\t\n\t    return hasColor(ele.toBeColor)\n\t  })\n\t\n\t\n\t\n\t\n\t  return {\n\t    el:function(styleObj){\n\t      if(styleObj){\n\t        addStyle(containerDiv,styleObj)\n\t      }\n\t      return containerDiv\n\t    },\n\t    progress:function(random){\n\t      if(elementsArr.length > 0) {\n\t\n\t        var ri =  random ? parseInt(Math.random() * elementsArr.length) : 0\n\t\n\t        addStyle(elementsArr[ri], blockRotateStyle())\n\t\n\t        rotateAnimation(elementsArr[ri],elementsArr[ri].toBeColor)\n\t\n\t        elementsArr.splice(ri,1)\n\t        \n\t        return true\n\t      }\n\t      return false\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/7/20.\n\t */\n\t\n\tvar matrixManager = __webpack_require__(24)\n\tvar repeate = __webpack_require__(26)\n\t\n\tvar cgrey = 'rgb(169,197,202)',\n\t  cyellow = 'rgb(245,207,56)',\n\t  cred = 'rgb(234, 108, 95)',\n\t  cgreen = 'rgb(49, 210, 76)',\n\t  cblack = 'rgb(66,91,112)',\n\t  corange = 'rgb(208,127,52)',\n\t  cpurple = 'rgb(95,100,136)',\n\t  cblue = 'rgb(34,189,250)';\n\t\n\tvar colorArr = []\n\t  .concat(repeate('transparent',3)).concat(repeate('#000',5)).concat(repeate('transparent',3))\n\t  .concat(repeate('transparent',1)).concat(repeate('#000',9)).concat(repeate('transparent',1))\n\t  .concat(['transparent','#000',cgrey,cyellow]).concat(repeate('#000',3)).concat(['transparent','#000',cred,cyellow].reverse())\n\t  .concat(repeate('#000',2)).concat([cgreen,cred]).concat(repeate('#000',3)).concat([cblack,corange]).concat(repeate('#000',2))\n\t  .concat(repeate('#000',2)).concat([cpurple,cblack,cyellow,'#000',cgreen,cyellow,cblack]).concat(repeate('#000',2))\n\t  .concat(repeate('#000',2)).concat([corange,cred,cblack,cgreen,corange,cblack,cgreen]).concat(repeate('#000',2))\n\t  .concat(repeate('#000',2)).concat([cblack,cgreen,'#000',cred,'#000',corange,cred]).concat(repeate('#000',2))\n\t  .concat(repeate('#000',2)).concat([cred,cblack]).concat(repeate('#000',3)).concat([cyellow,cblack]).concat(repeate('#000',2))\n\t  .concat(['transparent','#000']).concat([cblue,cgreen]).concat(repeate('#000',3)).concat([cred,cgreen]).concat(['#000','transparent'])\n\t  .concat(repeate('transparent',1)).concat(repeate('#000',9)).concat(repeate('transparent',1))\n\t  .concat(repeate('transparent',3)).concat(repeate('#000',5)).concat(repeate('transparent',3))\n\t\n\tmodule.exports = function(){\n\t\n\t  console.warn('to be deprecated.suggest to use loading.mpLoading')\n\t\n\t  var m = matrixManager(colorArr)\n\t\n\t  return {\n\t    el:function () {\n\t      return m.el()\n\t    },\n\t    progress:function(){\n\t      return m.progress(1)\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/7/20.\n\t */\n\tvar _ = __webpack_require__(4)\n\t\n\tmodule.exports = function(value,num){\n\t\n\t  return _.range(num).map(function(){\n\t    return value\n\t  })\n\t}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/7/25.\n\t */\n\tvar repeat = __webpack_require__(26)\n\t\n\t/**\n\t *\n\t * 放大canvas的ImageData\n\t *\n\t * @param data ImageData.data数组\n\t * @param width 原canvas宽度\n\t * @param resizeX 横坐标放大倍数\n\t * @param resizeY 纵坐标放大倍数,默认为resizeX\n\t * @param gap 默认为4, ImageData中默认 rgba4位 为一个颜色单元\n\t * @returns {*}\n\t */\n\t\n\t\n\t\n\tmodule.exports = function resizeImageData(data,width,resizeX,resizeY,gap){\n\t  resizeX = parseInt(resizeX)\n\t  resizeY = resizeY ? parseInt(resizeY) : resizeX\n\t  width = parseInt(width)\n\t  gap = gap ? gap : 4\n\t\n\t  if(!isNaN(resizeX) && !isNaN(resizeY) && !isNaN(width)){\n\t\n\t    var lines = parseInt(data.length / width)\n\t    var i=0;\n\t\n\t    var finalResizedData = [];\n\t\n\t    while(i<=lines){\n\t      var lineOne = data.slice(i * width,(i+1)*width);\n\t      i++\n\t\n\t      //递归\n\t      if(gap === 1){\n\t        lineOne = lineOne.reduce(function (init,dataOne) {\n\t          return init.concat(repeat(dataOne,resizeX))\n\t        },[])\n\t      }else{\n\t        lineOne = resizeImageData(lineOne,gap,1,resizeX,1)\n\t      }\n\t\n\t\n\t      var resizedLineOne = repeat(lineOne,resizeY).reduce(function (p, n) {\n\t        return p.concat(n)\n\t      },[])\n\t\n\t      finalResizedData = finalResizedData.concat(resizedLineOne)\n\t    }\n\t\n\t    return finalResizedData\n\t  }else{\n\t    return false;\n\t  }\n\t}\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by zyg on 16/7/5.\n\t */\n\tvar sharedPng =\"\"\n\t\n\tmodule.exports = function () {\n\t  var div = document.createElement('div')\n\t  div.style.zIndex = 9999\n\t  div.style.position = 'fixed'\n\t  div.style.left = 0\n\t  div.style.top = 0\n\t  div.style.right = 0\n\t  div.style.bottom = 0\n\t\n\t  var bg = document.createElement('div');\n\t  bg.style.backgroundColor = '#000'\n\t  bg.style.opacity = 0.7\n\t  bg.style.width = '100%'\n\t  bg.style.height = '100%'\n\t  bg.style.position = 'absolute'\n\t  bg.style.left = 0\n\t  bg.style.top = 0\n\t\n\t  var img = new Image()\n\t  img.src=\"data:image/png;base64,\"+sharedPng\n\t  img.style.zIndex = 1;\n\t  img.style.position = 'absolute'\n\t  img.style.top = '20px'\n\t  img.style.right = '20px'\n\t\n\t  var body = document.querySelector('body')\n\t\n\t  div.appendChild(bg)\n\t  div.appendChild(img)\n\t  body.appendChild(div)\n\t\n\t  div.onclick = function () {\n\t    div.remove()\n\t    div = null;\n\t  }\n\t\n\t  return function () {\n\t    div && div.remove()\n\t  }\n\t}\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by zyg on 16/8/28.\n\t */\n\tfunction unfoldArray(fromArr,arr) {\n\t  if(fromArr.length > 0){\n\t    var v = fromArr[0];\n\t\n\t    if(_.isArray(v)){\n\t      var unV = unfoldArray(v,[]);\n\t      arr = arr.concat(unV);\n\t    }else{\n\t      arr = arr.concat(v);\n\t    }\n\t    return unfoldArray(fromArr.slice(1),arr);\n\t  }else{\n\t    return arr;\n\t  }\n\t}\n\t\n\t\n\tmodule.exports = unfoldArray;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/8/17.\n\t */\n\t\n\tvar _ = __webpack_require__(4);\n\t\n\t\n\tfunction AudioPlayer(src) {\n\t  this.el = document.createElement('audio');\n\t  this.el.src = src;\n\t  this.playing = false;\n\t\n\t  var self = this;\n\t\n\t  this.el.addEventListener('pause',function () {\n\t    self.playing = false;\n\t  });\n\t  this.el.addEventListener('ended',function () {\n\t    self.playing = false;\n\t  })\n\t  \n\t}\n\tAudioPlayer.prototype.play = function (beginHead) {\n\t  if(beginHead){\n\t    this.el.currentTime=0;\n\t  }\n\t  this.el.play();\n\t  this.playing = true;\n\t};\n\tAudioPlayer.prototype.stop = function () {\n\t  this.el.stop();\n\t  this.playing = false;\n\t};\n\t/**\n\t * 音频加载和播放相关的库\n\t * @param Object config {\n\t *    key:<url>\n\t * }\n\t */\n\tmodule.exports = function (config) {\n\t\n\t  var cache = [];\n\t\n\t  var playObj = Object.keys(config).map(function(key){\n\t\n\t    var playObj = {};\n\t    playObj[key] = function () {\n\t\n\t      var  idleAp = cache.filter(function (ap) {\n\t        return !ap.playing;\n\t      })[0];\n\t\n\t      if(!idleAp){\n\t        idleAp = new AudioPlayer(config[key]);\n\t        cache.push(idleAp);\n\t      }\n\t\n\t      idleAp.play(true);\n\t\n\t      return idleAp;\n\t    };\n\t    return playObj;\n\t  }).reduce(function (i,next) {\n\t    return _.assign(i,next);\n\t  },{});\n\t\n\t\n\t  return playObj;\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jsonResource = [\n\t    'default',\n\t    'dog',\n\t    'car',\n\t    'cat'\n\t  ],\n\t  pngResource = [\n\t    'star',\n\t    'bg',\n\t    'bg2',\n\t    'block',\n\t    'building0',\n\t    'building1',\n\t    'building2',\n\t    'building3',\n\t    'building4',\n\t    'bush',\n\t    'tree',\n\t    'cloud',\n\t    'cloudSun',\n\t    'game_background',\n\t    \"greenHill\",\n\t    \"greenMountains\",\n\t    \"westLakeLantern\",\n\t    \"westLakeHydrant\",\n\t    \"groupBuildings\",\n\t    \"smokeShop\",\n\t    \"platformChair\",\n\t    \"westLakeBridgeWave\",\n\t    \"westLakeBridgeApproache\",\n\t    \"westLakeBridge\",\n\t    \"westLakeMansion\",\n\t    \"building5\",\n\t    \"building6\",\n\t    \"goldCoin\",\n\t  ]\n\tvar stage = new PIXI.Container()\n\tstage.pivot = new PIXI.Point(502, 320)\n\tstage.x = 320\n\tstage.y = 502\n\tstage.rotation = Math.PI / 2\n\t\n\twindow.W = 1004;\n\twindow.H = 640;\n\t\n\tvar loader = __webpack_require__(32)\n\tvar world = __webpack_require__(33).world\n\t\n\t/**\n\t *  --> Public Method\n\t **/\n\tvar render = function (renderer) {\n\t  \n\t  loader.add(jsonResource, 'json')\n\t    .add(pngResource, 'png')\n\t    .load(function () {\n\t      var counter = 0;\n\t      world.reset();\n\t\n\t      stage.removeChildren();\n\t      /**\n\t       * direction button\n\t       */\n\t\n\t      var blockFactory = __webpack_require__(41);\n\t      var starFactory = __webpack_require__(45)\n\t      var road = __webpack_require__(46);\n\t      var gameBackground = __webpack_require__(101)();\n\t      var goldCoinFn = __webpack_require__(103)\n\t\n\t      /**\n\t       * --> Private Method\n\t       **/\n\t      function addBlock(count) {\n\t        var block = blockFactory();\n\t        if (block ) {\n\t          stage.addChildAt(block, 3);\n\t        }else{\n\t        }\n\t\n\t        return !!block;\n\t      }\n\t\n\t      function addStar() {\n\t        var randomy = Math.random() * 200 + 300\n\t        var star = starFactory({position: {x: 1004, y: randomy}})\n\t        if (star) {\n\t          stage.addChild(star)\n\t        }\n\t      }\n\t\n\t      stage.addChild(gameBackground);\n\t      stage.addChild(road);\n\t\n\t\n\t      var goldCoin = goldCoinFn();\n\t\n\t      stage.addChild(goldCoin)\n\t\n\t\n\t      var dog = __webpack_require__(105)\n\t      dog.finishCb = function () {\n\t        var end = __webpack_require__(108);\n\t        console.log('结束');\n\t        \n\t        end(renderer, goldCoin.getScore(), false)\n\t      }\n\t      dog.reset()\n\t      stage.addChild(dog)\n\t      stage.interactive = true;\n\t      stage.on('touchstart', function () {\n\t        dog.jump()\n\t      })\n\t\n\t      world.on('enemyCollision', function (event) {\n\t\n\t        gameFail = true;\n\t\n\t        dog.end()\n\t      })\n\t      world.on('rewardCollision', function (event) {\n\t        event.reward.sprite.dismiss()\n\t        goldCoin.upScore()\n\t      })\n\t\n\t      //游戏失败,游戏结束\n\t      var gameFail = false,\n\t        gameOver = false;\n\t      \n\t      stage.render = function () {\n\t        counter++;\n\t        world.step(1 / 60)\n\t        \n\t        gameOver = road.isGameEnd();\n\t        if(gameOver){\n\t          dog.gogogo();\n\t        }\n\t        \n\t        if (counter % 60 === 0 && !(gameOver && gameFail)) {\n\t          var i = counter / 25;\n\t          addBlock(counter);\n\t        }\n\t        if (counter % 30 === 0) {\n\t          addStar(counter)\n\t        }\n\t        stage.children.forEach(function (child) {\n\t          if (child.render) {\n\t            child.render()\n\t          }\n\t        })\n\t      };\n\t      renderer(stage)\n\t    })\n\t}\n\t\n\t\n\tmodule.exports = render\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tmodule.exports = pixiLib.createLoader({\n\t  // publicPath:'../images/'\n\t  publicPath:'http://o8c60jr2y.bkt.clouddn.com/'\n\t});\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar screenHeight = 640\n\tvar World = __webpack_require__(34).World\n\t\n\tvar roadFn = __webpack_require__(40)\n\t\n\tvar world = new World({\n\t  gravity: -4000,\n\t  land:roadFn.roadBaseHeight,\n\t})\n\tmodule.exports = {\n\t  speed: 2,\n\t  world: world,\n\t  getY: function(y) {\n\t    return screenHeight - y\n\t  }\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t  Block: __webpack_require__(35),\n\t  World: __webpack_require__(36),\n\t  Player: __webpack_require__(39)\n\t}\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tvar BlockType = {\n\t  Reward: 'Reward',\n\t  Enemy: 'Enemy',\n\t  Block: 'Block'\n\t}\n\t\n\tvar Block = function(option) {\n\t  this.width = option.width || 10\n\t  this.height = option.height || 10\n\t  this.position = option.position || {x: 0, y: 0},\n\t  this.block = option.block || true\n\t  this.type = option.type || BlockType.Block\n\t}\n\t\n\tBlock.BlockType = BlockType\n\t\n\tmodule.exports = Block\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Oberver = __webpack_require__(37)\n\tvar collision = __webpack_require__(38)\n\tvar Block = __webpack_require__(35)\n\t\n\tvar World = function(option) {\n\t  option = option || {}\n\t  this.players = []\n\t  this.blocks = []\n\t  this.gravity = option.gravity || -10\n\t  this.land = option.land || 0\n\t}\n\t\n\t\n\tvar addPlayerEvent = function(player) {\n\t  return {\n\t    key: 'addPlayer',\n\t    player: player\n\t  }\n\t}\n\t\n\tvar removePlayerEvent = function(player) {\n\t  return {\n\t    key: 'removePlayer',\n\t    player: player\n\t  }\n\t}\n\t\n\tvar addBlockEvent = function (block) {\n\t  return {\n\t    key: 'addBlock',\n\t    block: block\n\t  }\n\t}\n\t\n\tvar removeBlockEvent = function(block) {\n\t  return {\n\t    key: 'removeBlock',\n\t    block: block\n\t  }\n\t}\n\t\n\tvar enemyCollisionEvent = function(player, enemy) {\n\t  return {\n\t    key: 'enemyCollision',\n\t    player: player,\n\t    enemy: enemy\n\t  }\n\t}\n\t\n\tvar rewardCollisionEvent = function(player, reward) {\n\t  return {\n\t    key: 'rewardCollision',\n\t    player: player,\n\t    reward: reward\n\t  }\n\t}\n\t\n\tWorld.prototype = new Object(Oberver.prototype)\n\t\n\tWorld.prototype.constructor = World\n\t\n\tWorld.prototype.addPlayer = function(player) {\n\t  this.players.push(player)\n\t  this.sendEvent(addPlayerEvent(player))\n\t}\n\t\n\tWorld.prototype.addBlock = function(block) {\n\t  block.world = this\n\t  this.blocks.push(block)\n\t  this.sendEvent(addBlockEvent(block))\n\t}\n\t\n\tWorld.prototype.removeBlock = function(block) {\n\t  block.world = null\n\t  var i = this.blocks.indexOf(block)\n\t  if (i != -1) {\n\t    this.blocks.splice(i, 1)\n\t  }\n\t  this.sendEvent(removeBlockEvent(block))\n\t}\n\t\n\tWorld.prototype.reset = function() {\n\t  this.players = []\n\t  this.blocks = []\n\t}\n\t\n\tWorld.prototype.step = function(dt) {\n\t  for (var index in this.players) {\n\t    var player = this.players[index]\n\t    player.inland = false\n\t    player.origin = player.position\n\t    var dx = player.v.x * dt + 0.5 * player.a.x * dt * dt\n\t    var dy = player.v.y * dt + 0.5 * (player.a.y + this.gravity) * dt * dt\n\t    var position = {x: player.position.x + dx, y: player.position.y + dy}\n\t    player.position = position\n\t    if (player.position.y < player.height / 2 + this.land) {\n\t      player.position.y  = player.height / 2 + this.land;\n\t      player.inland = true\n\t    }\n\t    player.v.x = player.v.x + player.a.x * dt\n\t    player.v.y = player.v.y + (player.a.y + this.gravity) * dt\n\t    var result = checkEnemyCollision(this, this.blocks, player)\n\t    if (result.enemy) {\n\t      if (result.enemy.type != Block.BlockType.Reward) {\n\t        this.sendEvent(enemyCollisionEvent(player, result.enemy))\n\t      }\n\t    } else {\n\t      if (result.topBlock && result.bottomBlock){\n\t        if (collision.checkBottomCollision(player, result.topBlock)) {\n\t          player.position.y = result.topBlock.position.y + (result.topBlock.height + player.height) / 2\n\t          player.inland = true\n\t          player.v.y = 0\n\t        } else if (collision.checkTopCollision(player, result.bottomBlock)) {\n\t          player.position.y = result.bottomBlock.position.y - (result.bottomBlock.height + player.height) / 2\n\t          player.v.y = 0\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar checkEnemyCollision = function(world, blocks, player) {\n\t  var enemy = null\n\t  var topBlock = null\n\t  var bottomBlock = null\n\t  for (var i in blocks) {\n\t    var current = blocks[i]\n\t    if (current.type == Block.BlockType.Block && current.position.x < player.position.x + player.width && current.position.x >= player.position.x - current.width) {\n\t      if (!topBlock || current.position.y >= topBlock.position.y) topBlock = current\n\t      if (!bottomBlock || current.position.y <= bottomBlock.position.y) bottomBlock = current\n\t    }\n\t    if (current.type == Block.BlockType.Reward) {\n\t      if (collision.checkEnemyCollision(player, current)) {\n\t        world.sendEvent(rewardCollisionEvent(player, current))\n\t        if (!enemy) enemy = current\n\t      }\n\t    } else {\n\t      if (collision.checkEnemyCollision(player, current)) {\n\t        enemy = current\n\t        break\n\t      }\n\t    }\n\t  }\n\t  return {\n\t    enemy: enemy,\n\t    topBlock: topBlock,\n\t    bottomBlock: bottomBlock\n\t  }\n\t}\n\t\n\tmodule.exports = World\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\tvar Ob = function() {}\n\t\n\tOb.prototype.events = {\n\t}\n\t\n\tOb.prototype.on = function(key, handler) {\n\t  this.events[key] = handler\n\t}\n\t\n\tOb.prototype.sendEvent = function(event, key) {\n\t  key = event.key || key\n\t  if (key && this.events[key]) {\n\t    var handler = this.events[key]\n\t    handler(event)\n\t  }\n\t}\n\t\n\tmodule.exports = Ob\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Block = __webpack_require__(35)\n\t\n\tvar checkBottomCollision = function(player, block) {\n\t  var dx = player.position.x - block.position.x\n\t  var dy = player.position.y - block.position.y\n\t  var odx = player.origin.x - block.position.x\n\t  var ody = player.origin.y - block.position.y\n\t  return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2) && (Math.abs(odx) <= (player.width + block.width) / 2 && Math.abs(ody) >= (player.height + block.height) / 2) && dy >= 0\n\t}\n\tvar checkTopCollision = function(player, block) {\n\t  var dx = player.position.x - block.position.x\n\t  var dy = player.position.y - block.position.y\n\t  var odx = player.origin.x - block.position.x\n\t  var ody = player.origin.y - block.position.y\n\t  return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2) && (Math.abs(odx) <= (player.width + block.width) / 2 && Math.abs(ody) >= (player.height + block.height) / 2) && dy < 0\n\t}\n\t\n\t\n\tvar checkEnemyCollision = function(player, block) {\n\t  var dx = player.position.x - block.position.x\n\t  var dy = player.position.y - block.position.y\n\t  var odx = player.origin.x - block.position.x\n\t  var ody = player.origin.y - block.position.y\n\t  if (block.type == Block.BlockType.Block) {\n\t    return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2) && Math.abs(ody) < Math.abs(odx) && odx < 0\n\t  } else {\n\t    return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2)\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  checkEnemyCollision: checkEnemyCollision,\n\t  checkTopCollision: checkTopCollision,\n\t  checkBottomCollision: checkBottomCollision,\n\t}\n\t\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t\n\tvar Player = function(option) {\n\t  this.width = option.width || 10\n\t  this.height = option.height || 10\n\t  this.position = option.position || {x: 0, y: 0},\n\t  this.v = option.v || {x: 0, y: 0}\n\t  this.a = option.a || {x: 0, y: 0}\n\t  this.inland = false\n\t}\n\t\n\tmodule.exports = Player\n\t\n\t\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by zyg on 16/8/27.\n\t */\n\t\n\tvar roadBaseWidth = 1004;\n\t\n\tvar grassHeight = 15;\n\tvar grassHeight2 = 30;\n\tvar roadBaseHeight = 96;\n\t\n\t\n\tfunction roadBaseFn() {\n\t\n\t  var base = new PIXI.Container();\n\t\n\t  var grass = new PIXI.Graphics();\n\t  grass.beginFill(0x86b952)\n\t  grass.drawRect(0,0,roadBaseWidth,grassHeight);\n\t  grass.endFill()\n\t\n\t  var grass1 = new PIXI.Graphics();\n\t  grass1.beginFill(0xafe771)\n\t  grass1.drawRect(0,grassHeight,roadBaseWidth,grassHeight2);\n\t  grass1.endFill()\n\t\n\t\n\t  var rect = new PIXI.Graphics();\n\t  rect.beginFill(0x696969)\n\t  rect.drawRect(0,grassHeight + grassHeight2,roadBaseWidth,roadBaseHeight)\n\t  rect.endFill()\n\t\n\t  base.addChild(rect)\n\t  base.addChild(grass1)\n\t  base.addChild(grass)\n\t\n\t  return base;\n\t}\n\t\n\tfunction roadLightLine() {\n\t\n\t  var line = new PIXI.Graphics();\n\t\n\t  line.beginFill(0xf0f0f0)\n\t  line.drawRect(0,grassHeight + grassHeight2 + roadBaseHeight/2 - 6 ,70,12)\n\t  line.endFill();\n\t\n\t  return line;\n\t}\n\t\n\tfunction roadDarkLine() {\n\t  var line = new PIXI.Graphics()\n\t\n\t  line.beginFill(0xaaaaaa)\n\t  line.drawRect(0,grassHeight + grassHeight2 + roadBaseHeight/2 - 1,70,2)\n\t  line.endFill()\n\t\n\t  return line;\n\t}\n\t\n\tfunction roadFn(ignoreLine) {\n\t\n\t  var container = new PIXI.Container();\n\t\n\t  container.addChild(roadBaseFn())\n\t\n\t  if(ignoreLine) {\n\t    var i = 0;\n\t    var lines = [roadLightLine, roadDarkLine];\n\t\n\t    while ((i * 70) < roadBaseWidth) {\n\t\n\t      var line = lines[i % 2]();\n\t      line.x = (i * 70);\n\t\n\t      container.addChild(line);\n\t\n\t      i++;\n\t    }\n\t  }\n\t\n\t  return container;\n\t}\n\t\n\troadFn.grassHeight = grassHeight;\n\troadFn.grassHeight2 = grassHeight2;\n\troadFn.roadBaseHeight = roadBaseHeight;\n\t\n\troadFn.roadHeight = roadBaseHeight + grassHeight + grassHeight2;\n\t\n\tmodule.exports = roadFn;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/8/26.\n\t */\n\tvar _ = __webpack_require__(4);\n\tvar repeat = __webpack_require__(1).utils.repeat;\n\tvar unfoldArray = __webpack_require__(1).utils.unfoldArray;\n\t\n\tvar carFn = __webpack_require__(42);\n\tvar blockFn = __webpack_require__(44);\n\t\n\tfunction blockFnWrapper(p) {\n\t  return function () {\n\t    return blockFn({\n\t      position:p\n\t    });\n\t  }\n\t}\n\t\n\tfunction empty() {\n\t  return false;\n\t}\n\t\n\tvar roadArr = repeat([\n\t  repeat(empty,2),\n\t  [\n\t    blockFnWrapper('l'),\n\t    blockFnWrapper('m'),\n\t    blockFnWrapper('h')\n\t  ].concat(repeat(empty,2)),\n\t  carFn,\n\t],10);\n\t\n\t\n\tvar unzipRoadArr = unfoldArray(roadArr,[]);\n\tvar index = 0;\n\t\n\tfunction blockManager() {\n\t\n\t  var func = unzipRoadArr[index++];\n\t\n\t  return  func ? func() : console.error('到终点了');\n\t}\n\t\n\tmodule.exports = blockManager;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(43);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\tvar world = __webpack_require__(33)\n\tvar Block = __webpack_require__(34).Block\n\t\n\tvar roadFn = __webpack_require__(40);\n\t\n\tmodule.exports = function (arg) {\n\t\n\t  var sp = mySpriteFn({})\n\t\n\t  sp.scale.x = sp.scale.y = 0.4;\n\t\n\t  sp.anchor.x = sp.anchor.y = 0.5;\n\t\n\t  var x = 1004,y = roadFn.roadBaseHeight + sp.height * sp.anchor.y;\n\t\n\t  sp.x = sp.initX = x;\n\t  sp.y = sp.initY = world.getY(y);\n\t\n\t  var myBlock = new Block({\n\t    width:sp.width,\n\t    height:sp.height,\n\t    position:{\n\t      x:x,\n\t      y:y\n\t    },\n\t    type: Block.BlockType.Enemy\n\t  })\n\t  \n\t  world.world.addBlock(myBlock);\n\t\n\t  sp.render = function () {\n\t    myBlock.position.x -= world.speed * 2.5\n\t    sp.x = myBlock.position.x\n\t    sp.y = world.getY(myBlock.position.y);\n\t\n\t    if (sp.x < 0) {\n\t      sp.parent.removeChild(sp)\n\t      myBlock.world.removeBlock(myBlock)\n\t    }\n\t\n\t  };\n\t\n\t  return sp;\n\t};\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('car'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"car\" ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"animationSpeed\" :  0.6 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"loop\" :  1 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"play\" :  1 ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getMc.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1)\n\tvar world = __webpack_require__(33)\n\tvar Block = __webpack_require__(34).Block\n\t\n\tvar roadFn = __webpack_require__(40)\n\t\n\tfunction getCoordinateByPosition(p) {\n\t\n\t\n\t  var h = 35; //anchor.y = 0.5 折算高度\n\t\n\t  var  m = {\n\t    low:{\n\t      x:1004,\n\t      y:roadFn.roadBaseHeight + h\n\t    },\n\t    middle:{\n\t      x:1004,\n\t      y:roadFn.roadBaseHeight + h\n\t    },\n\t    high:{\n\t      x:1004,\n\t      y:roadFn.roadBaseHeight + h\n\t    },\n\t  };\n\t\n\t  //别名\n\t  m.l = m.low;\n\t  m.m = m.middle;\n\t  m.h = m.high;\n\t\n\t  return m[p];\n\t}\n\t\n\t/**\n\t * @param arg\n\t *   i 调用个数\n\t *   position 障碍物位置\n\t *      low 最低处\n\t * @returns {*}\n\t */\n\tvar blockFactory = function(arg) {\n\t\n\t  var i = arg.i,\n\t    position = arg.position || 'l';\n\t\n\t  position = getCoordinateByPosition(position);\n\t\n\t  if(!position){\n\t    throw new Error('no po')\n\t  }\n\t\n\t  var x = position.x;\n\t    y = position.y;\n\t\n\t  var sprite = pixiLib.getIm({\n\t    textures: pixiLib.getTextures('block'),\n\t    \"anchor.x\": 0.5,\n\t    \"anchor.y\": 0.5,\n\t    \"scale.x\" : 0.5,\n\t    \"scale.y\" : 0.5,\n\t    x: x,\n\t    y: world.getY(y),\n\t  });\n\t\n\t  var block = new Block({\n\t    width: sprite.width,\n\t    height: sprite.height,\n\t    position: {\n\t      x: x,\n\t      y: y\n\t    }\n\t  });\n\t\n\t  world.world.addBlock(block);\n\t\n\t  sprite.render = function() {\n\t    block.position.x -= world.speed\n\t    sprite.x = block.position.x\n\t    sprite.y = world.getY(block.position.y);\n\t\n\t    if (sprite.x < 0) {\n\t      sprite.parent.removeChild(sprite)\n\t      block.world.removeBlock(block)\n\t    }\n\t  }\n\t  return sprite\n\t}\n\t\n\tmodule.exports = blockFactory\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1)\n\tvar world = __webpack_require__(33)\n\tvar Block = __webpack_require__(34).Block\n\t\n\tvar starFactory = function(arg) {\n\t  var position = arg.position || {x: 0, y: 0};\n\t\n\t  if(!position){\n\t    throw new Error('no po')\n\t  }\n\t\n\t  var x = position.x,\n\t    y = position.y;\n\t\n\t  var sprite = pixiLib.getIm({\n\t    textures: pixiLib.getTextures('star'),\n\t    \"anchor.x\": 0.5,\n\t    \"anchor.y\": 0.5,\n\t    \"scale.x\" : 1,\n\t    \"scale.y\" : 1,\n\t    x: x,\n\t    y: world.getY(y),\n\t  });\n\t\n\t  var block = new Block({\n\t    type: Block.BlockType.Reward,\n\t    width: sprite.width,\n\t    height: sprite.height,\n\t    position: {\n\t      x: x,\n\t      y: y\n\t    }\n\t  });\n\t  world.world.addBlock(block);\n\t  block.sprite = sprite\n\t  sprite.render = function() {\n\t    block.position.x -= world.speed\n\t    sprite.x = block.position.x\n\t    sprite.y = world.getY(block.position.y);\n\t    if (sprite.x < 0) {\n\t      sprite.parent.removeChild(sprite)\n\t      block.world.removeBlock(block)\n\t    }\n\t  }\n\t\n\t  var audioPlayObj = pixiLib.audio.loadAudio({\n\t    hit:'http://o8c60jr2y.bkt.clouddn.com/ding.mp3'\n\t  });\n\t\n\t\n\t  sprite.dismiss = function() {\n\t    sprite.parent.removeChild(sprite)\n\t    block.sprite = null\n\t    block.world.removeBlock(block)\n\t\n\t    audioPlayObj.hit();\n\t\n\t  }\n\t  return sprite\n\t}\n\t\n\tmodule.exports = starFactory\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar bgFn = __webpack_require__(47);\n\tvar bgFn2 = __webpack_require__(49);\n\t\n\tvar roadFn = __webpack_require__(40)\n\t\n\tvar groupFn = __webpack_require__(51)\n\tvar groupFn2 = __webpack_require__(71)\n\tvar groupFn3 = __webpack_require__(98)\n\tvar groupFn4 = __webpack_require__(99)\n\tvar groupFn5 = __webpack_require__(100)\n\t\n\t//生成背景\n\tfunction repeatBackground(spriteFn) {\n\t  var arr = [];\n\t\n\t\n\t  var fns = [].slice.call(arguments, 0, arguments.length);\n\t\n\t  var num = fns.length;\n\t\n\t  function build(fn, i) {\n\t\n\t    var bg = fn();\n\t\n\t    bg.x = bg.initX = i * 1004;\n\t    bg.y = 640 - bg.height;\n\t    bg.sideX = -(num - i) * 1004;\n\t\n\t    return bg;\n\t  }\n\t\n\t  for (var i = 0; i < num; i++) {\n\t\n\t    var fn = fns[i];\n\t\n\t    var bg = build(fn, i);\n\t\n\t    arr.push(bg);\n\t  }\n\t  //补尾部\n\t  // arr.push(build(fns[0],num));\n\t\n\t\n\t  return arr;\n\t}\n\t\n\t\n\tfunction getBg(bgFn, i) {\n\t\n\t  if (i === undefined) {\n\t    i = 1;\n\t  }\n\t\n\t  var bg = bgFn();\n\t\n\t  bg.x = bg.initX = i * 1004;\n\t  bg.sideX = -1 * 1004;\n\t\n\t  return bg;\n\t}\n\t\n\t\n\tvar stage = new PIXI.Container();\n\tstage.speed = 2;\n\tstage.gameEnd = false;\n\t\n\tvar bgs = repeatBackground(roadFn)\n\t\n\tbgs.map(function (bg) {\n\t  stage.addChild(bg);\n\t});\n\t\n\tvar buildingsArr = [\n\t  groupFn,\n\t  groupFn2,\n\t  groupFn4,\n\t  groupFn,\n\t  groupFn2,\n\t  groupFn3,\n\t  groupFn,\n\t  groupFn2,\n\t  groupFn5\n\t];\n\t\n\t\n\tstage.buildings = [\n\t  getBg(buildingsArr[0], 0),\n\t  getBg(buildingsArr[1]),\n\t];\n\t\n\tstage.addChild(stage.buildings[0])\n\tstage.addChild(stage.buildings[1])\n\t\n\tbuildingsArr = buildingsArr.slice(2);\n\t\n\tstage.setSpeed = function (s) {\n\t  stage.speed = s;\n\t}\n\t\n\tstage.setGameEnd = function () {\n\t  stage.gameEnd = true;\n\t}\n\t\n\tstage.isGameEnd = function () {\n\t  return stage.gameEnd;\n\t}\n\t\n\tstage.render = function () {\n\t\n\t  if(stage.gameEnd){\n\t    return true;\n\t  }\n\t\n\t  var newBuildings = [];\n\t\n\t  stage.buildings.map(function (bg) {\n\t\n\t    if (bg.removed) {\n\t      return;\n\t    }\n\t\n\t    bg.x -= stage.speed;\n\t\n\t    if (bg.x <= bg.sideX) {\n\t\n\t      bg.removed = true;\n\t      stage.removeChild(bg);\n\t\n\t      //倒数第二个已经到达最边界,此时显示的是倒数最后一块。游戏结束\n\t      if(buildingsArr.length === 0){\n\t        stage.setGameEnd();\n\t      }\n\t\n\t    } else {\n\t      newBuildings.push(bg);\n\t    }\n\t  });\n\t\n\t  if (newBuildings.length < 2 && buildingsArr.length > 0) {\n\t\n\t    var newBg = getBg(buildingsArr[0]);\n\t\n\t    newBuildings.push(newBg)\n\t\n\t    stage.addChild(newBg);\n\t\n\t    buildingsArr = buildingsArr.slice(1);\n\t\n\t    stage.buildings = newBuildings.slice();\n\t  }\n\t\n\t};\n\t\n\t\n\t\n\tmodule.exports = stage;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(48);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('bg'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"bg\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(50);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('bg2'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"bg2\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/8/29.\n\t */\n\tvar _ = __webpack_require__(4);\n\tvar repeat = __webpack_require__(1).utils.repeat;\n\tvar unfoldArray = __webpack_require__(1).utils.unfoldArray;\n\t\n\tvar fn = __webpack_require__(52);\n\tvar addChildren = fn.addChildren;\n\tvar arrFn = fn.arrFn;\n\t\n\tvar building0 = __webpack_require__(53);\n\tvar building1 = __webpack_require__(55);\n\tvar building2 = __webpack_require__(57);\n\tvar building3 = __webpack_require__(59);\n\tvar building4 = __webpack_require__(61);\n\tvar bush = __webpack_require__(63);\n\tvar cloud = __webpack_require__(65);\n\tvar cloudSun = __webpack_require__(67);\n\tvar tree = __webpack_require__(69);\n\t\n\t\n\tvar roadFn = __webpack_require__(40);\n\t\n\tvar maxY = 640 - roadFn.roadHeight;\n\t\n\t\n\t\n\tfunction cloudFn() {\n\t\n\t  var argArr = [{\n\t    \"scale.x\": 0.25,\n\t    \"scale.y\": 0.25,\n\t    x: 50,\n\t    y: 180\n\t  }, {\n\t    \"scale.x\": 0.25,\n\t    \"scale.y\": 0.25,\n\t    x: 700,\n\t    y: 70\n\t  }];\n\t\n\t\n\t  return [argArr, [\n\t    cloud,\n\t    cloudSun\n\t  ]]\n\t}\n\t\n\tfunction bushesFn() {\n\t  var argArr = [\n\t    {\n\t      \"scale.x\": 0.15,\n\t      \"scale.y\": 0.15,\n\t      x: 10,\n\t    },\n\t    {\n\t      \"scale.x\": 0.05,\n\t      \"scale.y\": 0.05,\n\t      x: 160,\n\t    },\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 520,\n\t    },\n\t    {\n\t      \"scale.x\": 0.10,\n\t      \"scale.y\": 0.10,\n\t      x: 675,\n\t    },\n\t  ]\n\t\n\t  return [argArr, bush]\n\t}\n\t\n\tfunction treesFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      \"scale.x\": 0.15,\n\t      \"scale.y\": 0.15,\n\t      x: 120,\n\t    },\n\t    {\n\t      \"scale.x\": 0.20,\n\t      \"scale.y\": 0.20,\n\t      x: 175,\n\t    },\n\t    {\n\t      \"scale.x\": 0.20,\n\t      \"scale.y\": 0.20,\n\t      x: 730,\n\t    },\n\t  ]\n\t\n\t  return [argArr, tree]\n\t}\n\t\n\t\n\tfunction buildingFn() {\n\t\n\t\n\t  var argArr = [\n\t    {\n\t      \"scale.x\": 0.5,\n\t      \"scale.y\": 0.5,\n\t      x: 330,\n\t    },\n\t    {\n\t      \"scale.x\": 0.3,\n\t      \"scale.y\": 0.3,\n\t      x: 280,\n\t    },\n\t    {\n\t      \"scale.x\": 0.20,\n\t      \"scale.y\": 0.20,\n\t      x: 570,\n\t    },\n\t    {\n\t      \"scale.x\": 0.25,\n\t      \"scale.y\": 0.25,\n\t      x: 615,\n\t    },\n\t    {\n\t      \"scale.x\": 0.25,\n\t      \"scale.y\": 0.25,\n\t      x: 860,\n\t    },\n\t  ]\n\t\n\t  return [argArr, [\n\t    building0,\n\t    building2,\n\t    building3,\n\t    building4,\n\t    building1,\n\t  ]]\n\t}\n\t\n\tmodule.exports = function () {\n\t  var stage = new PIXI.Container();\n\t\n\t  addChildren(stage, arrFn(cloudFn),maxY)\n\t  addChildren(stage, arrFn(buildingFn),maxY)\n\t  addChildren(stage, arrFn(bushesFn),maxY)\n\t  addChildren(stage, arrFn(treesFn),maxY)\n\t\n\t  return stage;\n\t};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by zyg on 16/9/8.\n\t */\n\tfunction arrFn(argsFn) {\n\t\n\t  return function () {\n\t\n\t    var args = argsFn();\n\t\n\t    var arr = args[0], fn = args[1];\n\t\n\t    var fnArr = [].concat(fn);\n\t\n\t    return arr.map(function (arg, i) {\n\t\n\t\n\t      return fnArr[i % fnArr.length](arg);\n\t    })\n\t  }\n\t}\n\t\n\tfunction addChildren(stage, childrenFn,maxY) {\n\t  childrenFn().map(function (c) {\n\t\n\t    if (!c.y) {\n\t      c.y = maxY;\n\t    }\n\t    c.anchor.y = 1;\n\t\n\t    stage.addChild(c);\n\t  })\n\t}\n\t\n\t\n\tmodule.exports = {\n\t  arrFn:arrFn,\n\t  addChildren:addChildren,\n\t}\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(54);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('building0'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"building0\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(56);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('building1'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"building1\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(58);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('building2'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"building2\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(60);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('building3'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"building3\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(62);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('building4'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"building4\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(64);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('bush'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"bush\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(66);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('cloud'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"cloud\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(68);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('cloudSun'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"cloudSun\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(70);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('tree'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"tree\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/8/29.\n\t */\n\tvar _ = __webpack_require__(4);\n\tvar repeat = __webpack_require__(1).utils.repeat;\n\tvar unfoldArray = __webpack_require__(1).utils.unfoldArray;\n\t\n\tvar fn = __webpack_require__(52);\n\tvar addChildren = fn.addChildren;\n\tvar arrFn = fn.arrFn;\n\t\n\tvar greenHill = __webpack_require__(72);\n\tvar greenMountains = __webpack_require__(74);\n\tvar westLakeLantern = __webpack_require__(76);\n\tvar westLakeHydrant = __webpack_require__(78);\n\tvar groupBuildings = __webpack_require__(80);\n\tvar smokeShop = __webpack_require__(82);\n\tvar platformChair = __webpack_require__(84);\n\tvar westLakeBridgeWave = __webpack_require__(86);\n\tvar westLakeBridgeApproache = __webpack_require__(88);\n\tvar westLakeBridge = __webpack_require__(90);\n\tvar westLakeMansion = __webpack_require__(92);\n\t\n\tvar roadFn = __webpack_require__(40);\n\t\n\tvar tree = __webpack_require__(69);\n\t\n\tvar bush = __webpack_require__(63);\n\tvar building5 = __webpack_require__(94);\n\tvar building6 = __webpack_require__(96);\n\t\n\tvar maxY = 640 - roadFn.roadHeight;\n\t\n\t\n\tfunction treesFn() {\n\t  var argArr = [\n\t    {\n\t      'scale.x':0.2,\n\t      'scale.y':0.2,\n\t      x:120,\n\t    },\n\t    {\n\t      'scale.x':0.2,\n\t      'scale.y':0.2,\n\t      x:600,\n\t    },\n\t    {\n\t      'scale.x':0.14,\n\t      'scale.y':0.14,\n\t      x:680\n\t    }\n\t  ];\n\t\n\t  return [argArr,tree];\n\t}\n\t\n\tfunction bushesFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 170,\n\t    },\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 420,\n\t    },\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 750,\n\t    },\n\t    {\n\t      \"scale.x\": 0.10,\n\t      \"scale.y\": 0.10,\n\t      x: 925,\n\t    },\n\t  ]\n\t\n\t  return [argArr, bush]\n\t}\n\t\n\tfunction platformChairFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      'scale.x':0.07,\n\t      'scale.y':0.07,\n\t      x:250\n\t    },\n\t    // {\n\t    //   'scale.x':0.07,\n\t    //   'scale.y':0.07,\n\t    //   x:800\n\t    // }\n\t  ]\n\t\n\t  return [argArr,platformChair];\n\t}\n\t\n\tfunction westLakeHydrantFn() {\n\t  var arg = [\n\t    {\n\t      'scale.x':0.5,\n\t      'scale.y':0.5,\n\t      x:400\n\t    },\n\t    {\n\t      'scale.x':0.5,\n\t      'scale.y':0.5,\n\t      x:700\n\t    }\n\t  ]\n\t\n\t  return [arg,westLakeHydrant]\n\t}\n\t\n\tfunction building6Fn() {\n\t  var arg = [\n\t    {\n\t      'scale.x':0.3,\n\t      'scale.y':0.3,\n\t      x:830\n\t    }\n\t  ]\n\t  return [arg,building6];\n\t}\n\t\n\tfunction greenHillFn() {\n\t  var args = [\n\t    {\n\t      'scale.x':0.35,\n\t      'scale.y':0.35,\n\t      x:350\n\t    }\n\t  ]\n\t\n\t  return [args,greenHill]\n\t}\n\t\n\tfunction descrorateFn() {\n\t  var arg = [\n\t    {\n\t      'scale.x':0.10,\n\t      'scale.y':0.1,\n\t      x:500\n\t    },\n\t    {\n\t      'scale.x':0.08,\n\t      'scale.y':0.08,\n\t      x:555\n\t    }\n\t  ]\n\t  return [arg,[\n\t    building5,\n\t    westLakeHydrant,\n\t  ]]\n\t}\n\t\n\tfunction maxYAddChildren(stage,arrFnWrapper) {\n\t  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n\t}\n\t\n\tmodule.exports = function () {\n\t  var stage = new PIXI.Container();\n\t\n\t  maxYAddChildren(stage,greenHillFn)\n\t  maxYAddChildren(stage,building6Fn)\n\t  maxYAddChildren(stage,platformChairFn)\n\t  maxYAddChildren(stage,bushesFn)\n\t  maxYAddChildren(stage,descrorateFn)\n\t  maxYAddChildren(stage,treesFn)\n\t\n\t  return stage;\n\t};\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(73);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('greenHill'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"greenHill\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(75);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('greenMountains'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"greenMountains\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(77);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('westLakeLantern'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"westLakeLantern\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(79);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('westLakeHydrant'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"westLakeHydrant\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(81);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('groupBuildings'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"groupBuildings\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(83);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('smokeShop'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"smokeShop\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(85);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('platformChair'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"platformChair\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(87);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  var args = [{\n\t\n\t    textures:pixiLib.getTextures('westLakeBridgeWave'),\n\t\n\t\n\t\n\t\n\t\n\t    \"spriteName\" :  \"westLakeBridgeWave\" ,\n\t\n\t\n\t\n\t\n\t  }]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t\n\t  ]);\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  console.log('yy:',args[0].y,arg.y)\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(89);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('westLakeBridgeApproache'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"westLakeBridgeApproache\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(91);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('westLakeBridge'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"westLakeBridge\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(93);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('westLakeMansion'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"westLakeMansion\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(95);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('building5'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"building5\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(97);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('building6'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"building6\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/8/29.\n\t */\n\tvar _ = __webpack_require__(4);\n\tvar repeat = __webpack_require__(1).utils.repeat;\n\tvar unfoldArray = __webpack_require__(1).utils.unfoldArray;\n\t\n\tvar fn = __webpack_require__(52);\n\tvar addChildren = fn.addChildren;\n\tvar arrFn = fn.arrFn;\n\t\n\tvar greenHill = __webpack_require__(72);\n\tvar greenMountains = __webpack_require__(74);\n\tvar westLakeLantern = __webpack_require__(76);\n\tvar westLakeHydrant = __webpack_require__(78);\n\tvar groupBuildings = __webpack_require__(80);\n\tvar platformChair = __webpack_require__(84);\n\tvar westLakeMansion = __webpack_require__(92);\n\t\n\tvar roadFn = __webpack_require__(40);\n\t\n\tvar tree = __webpack_require__(69);\n\t\n\tvar bush = __webpack_require__(63);\n\tvar building5 = __webpack_require__(94);\n\t\n\tvar maxY = 640 - roadFn.roadHeight;\n\t\n\t\n\tfunction treesFn() {\n\t  var argArr = [\n\t    {\n\t      'scale.x':0.2,\n\t      'scale.y':0.2,\n\t      x:170,\n\t    },\n\t    {\n\t      'scale.x':0.15,\n\t      'scale.y':0.15,\n\t      x:750,\n\t    },\n\t  ];\n\t\n\t  return [argArr,tree];\n\t}\n\t\n\tfunction bushesFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 150,\n\t    },\n\t  ]\n\t\n\t  return [argArr, bush]\n\t}\n\t\n\tfunction platformChairFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      'scale.x':0.07,\n\t      'scale.y':0.07,\n\t      x:00\n\t    },\n\t  ]\n\t\n\t  return [argArr,platformChair];\n\t}\n\t\n\tfunction greenHillFn() {\n\t  var args = [\n\t    {\n\t      'scale.x':0.25,\n\t      'scale.y':0.25,\n\t      x:50\n\t    },\n\t    {\n\t      'scale.x':0.35,\n\t      'scale.y':0.35,\n\t      x:500\n\t    }\n\t  ]\n\t\n\t  return [args,greenHill]\n\t}\n\t\n\tfunction westLakeMansionFn() {\n\t  var argArr = [\n\t    {\n\t      'scale.x':0.5,\n\t      'scale.y':0.5,\n\t      'x':350,\n\t    },\n\t  ]\n\t\n\t  return [argArr,westLakeMansion]\n\t}\n\t\n\t\n\tfunction maxYAddChildren(stage,arrFnWrapper) {\n\t  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n\t}\n\t\n\tmodule.exports = function () {\n\t  var stage = new PIXI.Container();\n\t\n\t  maxYAddChildren(stage,greenHillFn)\n\t\n\t  maxYAddChildren(stage,platformChairFn)\n\t  maxYAddChildren(stage,westLakeMansionFn)\n\t\n\t  maxYAddChildren(stage,bushesFn)\n\t  maxYAddChildren(stage,treesFn)\n\t\n\t\n\t  console.log('!!!')\n\t\n\t  return stage;\n\t};\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/8/29.\n\t */\n\tvar _ = __webpack_require__(4);\n\tvar repeat = __webpack_require__(1).utils.repeat;\n\tvar unfoldArray = __webpack_require__(1).utils.unfoldArray;\n\t\n\tvar fn = __webpack_require__(52);\n\tvar addChildren = fn.addChildren;\n\tvar arrFn = fn.arrFn;\n\t\n\tvar greenHill = __webpack_require__(72);\n\tvar greenMountains = __webpack_require__(74);\n\tvar westLakeLantern = __webpack_require__(76);\n\tvar westLakeHydrant = __webpack_require__(78);\n\tvar groupBuildings = __webpack_require__(80);\n\tvar smokeShop = __webpack_require__(82);\n\tvar platformChair = __webpack_require__(84);\n\tvar westLakeBridgeWave = __webpack_require__(86);\n\tvar westLakeBridgeApproache = __webpack_require__(88);\n\tvar westLakeBridge = __webpack_require__(90);\n\tvar westLakeMansion = __webpack_require__(92);\n\t\n\tvar roadFn = __webpack_require__(40);\n\t\n\tvar tree = __webpack_require__(69);\n\t\n\tvar bush = __webpack_require__(63);\n\tvar building5 = __webpack_require__(94);\n\tvar building6 = __webpack_require__(96);\n\t\n\tvar maxY = 640 - roadFn.roadHeight;\n\t\n\t\n\tfunction bushesFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 840,\n\t    },\n\t    {\n\t      \"scale.x\": 0.10,\n\t      \"scale.y\": 0.10,\n\t      x: 905,\n\t    },\n\t  ]\n\t\n\t  return [argArr, bush]\n\t}\n\t\n\t\n\tfunction greenHillFn() {\n\t  var args = [\n\t    {\n\t      'scale.x':0.15,\n\t      'scale.y':0.15,\n\t      x:50\n\t    },\n\t    {\n\t      'scale.x':0.4,\n\t      'scale.y':0.4,\n\t      x:250\n\t    },\n\t    {\n\t      'scale.x':0.25,\n\t      'scale.y':0.25,\n\t      x:670\n\t    },\n\t  ]\n\t\n\t  return [args,greenHill]\n\t}\n\t\n\tfunction bridgeFn() {\n\t\n\t  var args = [{\n\t    'scale.x':0.3,\n\t    'scale.y':0.3\n\t  }]\n\t\n\t  return [args,westLakeBridge]\n\t}\n\t\n\t\n\tfunction lanternFn(){\n\t  var args = [{\n\t    'scale.x':0.25,\n\t    'scale.y':0.25,\n\t    'x':100,\n\t  }];\n\t\n\t  return [args,westLakeLantern]\n\t}\n\t\n\tfunction waveFn() {\n\t  var args = [{\n\t    'scale.x':0.05,\n\t    'scale.y':0.05,\n\t    x:220,\n\t    y:625,\n\t  },{\n\t    'scale.x':0.05,\n\t    'scale.y':0.05,\n\t    x:400,\n\t    y:615\n\t  },{\n\t    'scale.x':0.05,\n\t    'scale.y':0.05,\n\t    x:580,\n\t    y:625,\n\t  },{\n\t    'scale.x':0.05,\n\t    'scale.y':0.05,\n\t    x:750,\n\t    y:615\n\t  },{\n\t    'scale.x':0.05,\n\t    'scale.y':0.05,\n\t    x:910,\n\t    y:625\n\t  }];\n\t\n\t  return [args,westLakeBridgeWave]\n\t}\n\t\n\tfunction maxYAddChildren(stage,arrFnWrapper) {\n\t  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n\t}\n\t\n\tmodule.exports = function () {\n\t  var stage = new PIXI.Container();\n\t\n\t  maxYAddChildren(stage,greenHillFn)\n\t  maxYAddChildren(stage,bushesFn)\n\t  addChildren(stage,arrFn(bridgeFn),675)\n\t  //maxYAddChildren(stage,lanternFn)\n\t  addChildren(stage,arrFn(lanternFn),maxY + 47)\n\t\n\t  addChildren(stage,arrFn(waveFn),620)\n\t\n\t  console.log('group4');\n\t\n\t  return stage;\n\t};\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by zyg on 16/8/29.\n\t */\n\tvar _ = __webpack_require__(4);\n\tvar repeat = __webpack_require__(1).utils.repeat;\n\tvar unfoldArray = __webpack_require__(1).utils.unfoldArray;\n\t\n\tvar fn = __webpack_require__(52);\n\tvar addChildren = fn.addChildren;\n\tvar arrFn = fn.arrFn;\n\t\n\tvar greenHill = __webpack_require__(72);\n\tvar greenMountains = __webpack_require__(74);\n\tvar westLakeLantern = __webpack_require__(76);\n\tvar westLakeHydrant = __webpack_require__(78);\n\tvar groupBuildings = __webpack_require__(80);\n\tvar smokeShop = __webpack_require__(82);\n\tvar platformChair = __webpack_require__(84);\n\tvar westLakeBridgeWave = __webpack_require__(86);\n\tvar westLakeBridgeApproache = __webpack_require__(88);\n\tvar westLakeBridge = __webpack_require__(90);\n\tvar westLakeMansion = __webpack_require__(92);\n\t\n\tvar roadFn = __webpack_require__(40);\n\t\n\tvar tree = __webpack_require__(69);\n\t\n\tvar bush = __webpack_require__(63);\n\tvar building5 = __webpack_require__(94);\n\tvar building6 = __webpack_require__(96);\n\t\n\tvar maxY = 640 - roadFn.roadHeight;\n\t\n\t\n\tfunction treesFn() {\n\t  var argArr = [\n\t    {\n\t      'scale.x':0.2,\n\t      'scale.y':0.2,\n\t      x:600,\n\t    },\n\t  ];\n\t\n\t  return [argArr,tree];\n\t}\n\t\n\tfunction bushesFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 170,\n\t    },\n\t    {\n\t      \"scale.x\": 0.08,\n\t      \"scale.y\": 0.08,\n\t      x: 420,\n\t    },\n\t  ]\n\t\n\t  return [argArr, bush]\n\t}\n\t\n\tfunction platformChairFn() {\n\t\n\t  var argArr = [\n\t    {\n\t      'scale.x':0.07,\n\t      'scale.y':0.07,\n\t      x:250\n\t    },\n\t    // {\n\t    //   'scale.x':0.07,\n\t    //   'scale.y':0.07,\n\t    //   x:800\n\t    // }\n\t  ]\n\t\n\t  return [argArr,platformChair];\n\t}\n\t\n\tfunction building6Fn() {\n\t  var arg = [\n\t    {\n\t      'scale.x':0.2,\n\t      'scale.y':0.2,\n\t      x:75\n\t    }\n\t  ]\n\t  return [arg,building6];\n\t}\n\t\n\tfunction greenHillFn() {\n\t  var args = [\n\t    {\n\t      'scale.x':0.35,\n\t      'scale.y':0.35,\n\t      x:350\n\t    }\n\t  ]\n\t\n\t  return [args,greenHill]\n\t}\n\t\n\tfunction descrorateFn() {\n\t  var arg = [\n\t    {\n\t      'scale.x':0.10,\n\t      'scale.y':0.1,\n\t      x:500\n\t    },\n\t    {\n\t      'scale.x':0.08,\n\t      'scale.y':0.08,\n\t      x:555\n\t    }\n\t  ]\n\t  return [arg,[\n\t    building5,\n\t    westLakeHydrant,\n\t  ]]\n\t}\n\tfunction smokeShopFn() {\n\t  var arg=[\n\t    {\n\t      'scale.x':0.45,\n\t      'scale.y':0.45,\n\t      x:685,\n\t    }\n\t  ]\n\t  return [arg,smokeShop]\n\t}\n\t\n\t\n\tfunction maxYAddChildren(stage,arrFnWrapper) {\n\t  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n\t}\n\t\n\tmodule.exports = function () {\n\t  var stage = new PIXI.Container();\n\t\n\t  maxYAddChildren(stage,greenHillFn)\n\t  maxYAddChildren(stage,building6Fn)\n\t  maxYAddChildren(stage,platformChairFn)\n\t  maxYAddChildren(stage,bushesFn)\n\t  maxYAddChildren(stage,descrorateFn)\n\t  maxYAddChildren(stage,treesFn)\n\t\n\t  addChildren(stage,arrFn(smokeShopFn),maxY + 45)\n\t\n\t  return stage;\n\t};\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(102);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('game_background'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"game_background\" ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"anchor.x\" :  0.5 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"anchor.y\" :  0.5 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"scale.x\" :  1 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"scale.y\" :  1 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"x\" :  502 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"y\" :  320 ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(104);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tfunction scoreTextFn() {\n\t\n\t  var t = new PIXI.Text('0 ',{\n\t    font: 'bold 60px Arvo',\n\t    fill: '#ffffff',\n\t    align: 'center',\n\t  })\n\t\n\t  t.x = 95;\n\t  t.y = 30;\n\t\n\t  return {\n\t    el:function () {\n\t      return t;\n\t    },\n\t    setText:function (v) {\n\t      v = parseInt(v)\n\t      if(isNaN(v)){\n\t        v = 0\n\t      }\n\t      t.text = v + ' ';\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = function (arg) {\n\t\n\t  var stage = new PIXI.Container();\n\t  var score = 0;\n\t\n\t  var scoreObj = scoreTextFn();\n\t\n\t  var sp = mySpriteFn(arg)\n\t\n\t  sp.render = function () {\n\t\n\t  };\n\t\n\t\n\t  stage.addChild(scoreObj.el())\n\t  stage.addChild(sp);\n\t\n\t\n\t  stage.upScore = function () {\n\t    scoreObj.setText(++score)\n\t  }\n\t\n\t  stage.getScore = function () {\n\t    return score;\n\t  }\n\t  \n\t  return stage;\n\t};\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('goldCoin'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"goldCoin\" ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"scale.x\" :  0.25 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"scale.y\" :  0.25 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"anchor.x\" :  0 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"x\" :  20 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"y\" :  20 ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1)\n\tvar world = __webpack_require__(33)\n\tvar Player = __webpack_require__(39)\n\t\n\tvar dogFn = __webpack_require__(106);\n\tvar roadFn = __webpack_require__(40)\n\t\n\tvar sprite = dogFn({\n\t  \"anchor.x\": 0.5,\n\t  \"anchor.y\": 0.5,\n\t  x: 320,\n\t  y: 0,\n\t})\n\tsprite.alive = true\n\tsprite.finish = false\n\t/**\n\t *  --> physics\n\t **/\n\t\n\tvar player = new Player({\n\t  width: sprite.width,\n\t  height: sprite.height,\n\t  position: {x: 320, y: 0}\n\t})\n\t\n\t/**\n\t *  --> public method\n\t **/\n\tvar flyoutSpeed = {x: 2, y: 8}\n\tvar position = {x: 0, y: 0}\n\tvar g = 0.1 \n\t\n\t//水平移动数值\n\tsprite.moveSpeed = 0;\n\tsprite.moveX = 0;\n\t\n\t//狗到达终点的x值.\n\tvar endX = 650;\n\t\n\tsprite.render = function() {\n\t  if (!sprite.finish) {\n\t\n\t    if (sprite.alive) {\n\t      sprite.moveX += sprite.moveSpeed;\n\t\n\t      sprite.x = player.position.x + sprite.moveX;\n\t      sprite.y = world.getY(player.position.y);\n\t\n\t      if(sprite.x > endX + 250){\n\t        sprite.finish = true\n\t        container.finishCb();\n\t      }\n\t\n\t    } else {\n\t      sprite.rotation += 0.2\n\t      position.x += flyoutSpeed.x\n\t      position.y += flyoutSpeed.y\n\t      flyoutSpeed.y -= g\n\t      sprite.x = position.x\n\t      sprite.y = world.getY(position.y)\n\t      if (position.y < -150) {\n\t        sprite.finish = true\n\t        if (container.finishCb) {\n\t          container.finishCb()\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tsprite.gogogo = function(){\n\t  sprite.moveSpeed = 1;\n\t}\n\t\n\tsprite.play();\n\t\n\tvar upY = -55;\n\tvar downY = 55;\n\tvar distance = 55;\n\t\n\tvar container = new PIXI.Container();\n\tcontainer.y = 0;\n\t\n\tvar g = new PIXI.Graphics();\n\t\n\tg.beginFill(0x000000);\n\tg.drawRect(0,0,640,700);\n\tg.endFill();\n\t\n\tcontainer.mask = g;\n\t\n\tcontainer.jump = function () {\n\t  if (player.inland){\n\t    player.v.y = 1500\n\t  }\n\t};\n\t\n\tcontainer.end = function() {\n\t  if (sprite.alive) {\n\t    sprite.alive = false\n\t    sprite.stop()\n\t    position = player.position\n\t  }\n\t}\n\t\n\tcontainer.up = function () {\n\t  if(this.y > upY){\n\t    this.y -= distance;\n\t  }\n\t}\n\tcontainer.down = function () {\n\t  if(this.y <  downY){\n\t    this.y += distance\n\t  }\n\t}\n\t\n\tcontainer.addChild(sprite)\n\t\n\tcontainer.reset = function() {\n\t  player = new Player({\n\t    width: sprite.width,\n\t    height: sprite.height,\n\t    position: {x: 320, y: 0}\n\t  })\n\t  world.world.addPlayer(player)\n\t  sprite.alive = true;\n\t  sprite.finish = false;\n\t  sprite.rotation = 0\n\t  sprite.play()\n\t  flyoutSpeed = {x: 2, y: 8}\n\t  position = {x: 0, y: 0}\n\t  g = 0.1 \n\t}\n\t\n\tcontainer.render = sprite.render.bind(sprite);\n\tcontainer.gogogo = sprite.gogogo;\n\t\n\t\n\t\n\t\n\tmodule.exports = container\n\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(107);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('cat'),\n\t\n\t  \n\t  \"scale.x\" : 0.5,\n\t  \n\t  \"scale.y\": 0.5,\n\t    \n\t\n\t    \"spriteName\" :  \"cat\" ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"animationSpeed\" :  0.4 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"play\" :  1 ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getMc.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar png = ['game_over_background', 'play_again_button']\n\tvar stage = new PIXI.Container()\n\tvar loader = __webpack_require__(32)\n\t\n\tvar textForScore = function(score, finish) {\n\t  if (finish) {\n\t    return '你获得了' + score + '的好成绩'\n\t  } else {\n\t    return '太差了，居然就这么被撞飞了'\n\t  }\n\t};\n\t\n\tvar ajax = __webpack_require__(109);\n\t\n\t/**\n\t *  --> Public Method\n\t **/\n\tvar render = function (renderer, score, finish) {\n\t  score = score || 0\n\t  if (!finish) {\n\t    var user = 'owuWAwWD7-YBp4Dl77zZcXmdQBnw'\n\t\n\t    ajax('/api/game/57d64d81300869c24a825bfd/user/' + user + '/score')\n\t      .post({\n\t      score: score\n\t    }).then(function(response) {\n\t      console.log(response)\n\t    });\n\t\n\t  }\n\t  loader.add(png, 'png').load(function () {\n\t    var background = __webpack_require__(110)()\n\t    var button = __webpack_require__(112)({\"scale.y\": 0.8})\n\t    var text = new PIXI.Text(\n\t      textForScore(score, finish),\n\t      {font: '30px Helvetica-Light', \n\t        fill: 'white'})\n\t    text.anchor.x = text.anchor.y = 0.5\n\t    text.x = 320\n\t    text.y = 600\n\t    stage.addChild(background)\n\t    stage.addChild(button)\n\t    stage.addChild(text)\n\t    button.interactive = true\n\t    button.on('touchstart', function() {\n\t      var game = __webpack_require__(31)\n\t      game(renderer)\n\t    })\n\t    renderer(stage)\n\t  })\n\t}\n\t\n\t\n\tmodule.exports = render\n\t\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;;\n\t(function (root, factory) {\n\t  'use strict';\n\t  /* istanbul ignore next */\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  else if (typeof exports === 'object') {\n\t    exports = module.exports = factory();\n\t  }\n\t  else {\n\t    root.Ajax = factory();\n\t  }\n\t})(this, function () {\n\t  'use strict';\n\t  var $private = {};\n\t\n\t  var createMethods = function createMethods() {\n\t    return {\n\t      then: function () {\n\t      },\n\t      done: function () {\n\t      },\n\t      error: function () {\n\t      },\n\t      always: function () {\n\t      }\n\t    }\n\t  }\n\t  $private.XHRConnection = function XHRConnection(type, url, data) {\n\t    var methods = createMethods();\n\t\n\t    var xhr = new XMLHttpRequest();\n\t\n\t    xhr.open(type, url || '', true);\n\t\n\t    if(!(data instanceof FormData)){\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.addEventListener('readystatechange', $private.ready(methods), false);\n\t    xhr.send($private.objectToQueryString(data));\n\t\n\t    return $private.promises(methods);\n\t  };\n\t  $private.ready = function ready(methods) {\n\t\n\t    return function () {\n\t      var xhr = this;\n\t      var DONE = 4;\n\t      if (xhr.readyState === DONE) {\n\t        methods.always\n\t          .apply(methods, $private.parseResponse(xhr));\n\t        if (xhr.status >= 200 && xhr.status < 300) {\n\t          methods.done.apply(methods, $private.parseResponse(xhr));\n\t          methods.then.apply(methods, $private.parseResponse(xhr));\n\t        }\n\t        methods.error.apply(methods, $private.parseResponse(xhr));\n\t      }\n\t    }\n\t  };\n\t  $private.parseResponse = function parseResponse(xhr) {\n\t    var result;\n\t    try {\n\t      result = JSON.parse(xhr.responseText);\n\t    }\n\t    catch (e) {\n\t      result = xhr.responseText;\n\t    }\n\t    return [result, xhr];\n\t  };\n\t\n\t  $private.promises = function promises(methods) {\n\t    var allPromises = {};\n\t    Object.keys(methods).forEach(function (promise) {\n\t      allPromises[promise] = function (callback) {\n\t        return methods[promise] = callback\n\t      }\n\t    }, this);\n\t    return allPromises;\n\t  };\n\t\n\t  $private.objectToQueryString = function objectToQueryString(data) {\n\t    //console.log(data,typeof data,$private.isObject(data),data instanceof FormData);\n\t    return (data instanceof FormData) ? data:\n\t      $private.isObject(data) ? $private.getQueryString(data):data;\n\t  };\n\t\n\t  $private.getQueryString = function getQueryString(object) {\n\t    return Object.keys(object).filter(function (key) {\n\t      return object[key] !== undefined || object[key] !== null;\n\t    }).map(function (item) {\n\t      var value = object[item];\n\t      if($private.isObject(value)){\n\t        value = JSON.stringify(value);\n\t      }\n\t\n\t      return encodeURIComponent(item)\n\t        + '=' + encodeURIComponent(value);\n\t    }).join('&');\n\t  };\n\t\n\t  $private.isObject = function isObject(data) {\n\t    return '[object Object]' === Object.prototype.toString.call(data);\n\t  };\n\t\n\t\n\t  function Ajax(url) {\n\t    var $public = {};\n\t\n\t    $public.get = function get(data) {\n\t\n\t      return $private.XHRConnection('GET', url + '?' + $private.objectToQueryString(data));\n\t    };\n\t\n\t    $public.post = function post(data) {\n\t      return $private.XHRConnection('POST', url, data);\n\t    };\n\t\n\t    $public.put = function put(data) {\n\t      return $private.XHRConnection('PUT', url, data);\n\t    };\n\t\n\t    $public.delete = function del(data) {\n\t      return $private.XHRConnection('DELETE', url, data);\n\t    };\n\t\n\t    return $public;\n\t  }\n\t\n\t  window.ajax = Ajax;\n\t\n\t  return Ajax;\n\t});\n\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(111);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('game_over_background'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"game_over_background\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mySpriteFn = __webpack_require__(113);\n\tvar pixiLib = __webpack_require__(1)\n\t\n\t\n\tmodule.exports = function (arg) {\n\t\n\t   var sp = mySpriteFn(arg)\n\t\n\t    sp.render = function(){\n\t\n\t    }\n\t\n\t   return sp;\n\t};\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pixiLib = __webpack_require__(1);\n\t\n\tvar args = [{\n\t\n\t  textures:pixiLib.getTextures('play_again_button'),\n\t\n\t  \n\t\n\t    \n\t\n\t    \"anchor.x\" :  0.5 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"anchor.y\" :  0.5 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"x\" :  320 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"y\" :  800 ,\n\t\n\t    \n\t\n\t  \n\t\n\t    \n\t\n\t    \"spriteName\" :  \"play_again_button\" ,\n\t\n\t    \n\t\n\t  \n\t}]\n\t\n\t\n\t\n\t  args.push([\n\t\n\t    \n\t  ]);\n\t\n\t\n\t\n\tmodule.exports = function spriteFn(arg){\n\t\n\t  if(!arg){\n\t     arg = {}\n\t  }\n\t\n\t  for(var k in arg){\n\t   args[0][k] = arg[k]\n\t  }\n\t\n\t  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\t\n\t  return mySprite;\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** dist.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 31a8fd47127da6dfecf3\n **/","var pixiLib = require('pixi-lib')\nvar render = pixiLib.createRender(document.body)\nvar game = require('./game')\n\ngame(render)\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var pixiLib = {appendStage:require(\"./lib/appendStage.js\"),audioControl:require(\"./lib/audioControl.js\"),createAction:require(\"./lib/createAction.js\"),createLoader:require(\"./lib/createLoader.js\"),createRender:require(\"./lib/createRender.js\"),distance:require(\"./lib/distance.js\"),fixSpriteProperties:require(\"./lib/fixSpriteProperties.js\"),getIm:require(\"./lib/getIm.js\"),getMc:require(\"./lib/getMc.js\"),getSp:require(\"./lib/getSp.js\"),getTextures:require(\"./lib/getTextures.js\"),loadResource:require(\"./lib/loadResource.js\"),loadSprite:require(\"./lib/loadSprite.js\"),makeIdentity:require(\"./lib/makeIdentity.js\"),math:require(\"./lib/math.js\"),setConfig:require(\"./lib/setConfig.js\"),types:require(\"./lib/types.js\"),utils:{addStyle:require(\"./lib/utils/addStyle.js\"),basicLoading:require(\"./lib/utils/basicLoading.js\"),matrixManager:require(\"./lib/utils/matrixManager.js\"),mpLoading:require(\"./lib/utils/mpLoading.js\"),repeat:require(\"./lib/utils/repeat.js\"),resizeImageData:require(\"./lib/utils/resizeImageData.js\"),shareGuide:require(\"./lib/utils/shareGuide.js\"),unfoldArray:require(\"./lib/utils/unfoldArray.js\"),},audio:{loadAudio:require(\"./lib/audio/loadAudio.js\"),},};if( typeof window !== \"undefined\" ){ \nwindow.pixiLib=pixiLib; \n} \nif(typeof module !== \"undefined\" ){  \nmodule.exports= pixiLib; \n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * 快速生成一个stage，并插入到容器种\n * @param container\n * @param config\n * @returns {module.exports.Container}\n */\nvar createRender = require('./createRender');\n\nmodule.exports = function (container,config) {\n\n  var render = createRender.apply(this,arguments);\n\n  var stage = new PIXI.Container();\n\n  var cancelAnimate = render(stage);\n\n  stage.clearRender = cancelAnimate.cancel;\n\n  return stage;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/appendStage.js\n ** module id = 2\n ** module chunks = 0\n **/","var _ = require('lodash')\nvar DEFAULT_WIDTH = 640;\n\nvar DEFAULT_HEIGHT = 1004;\n/**\n * 创建一个渲染器\n * @param container\n * @param config\n * @returns {Function}\n */\nfunction createRender(container,config) {\n\n  if(!config){\n    config = {};\n  }\n\n  var w = config.w || DEFAULT_WIDTH;\n  var h = config.h || DEFAULT_HEIGHT;\n  var bg = config.bg || '#fff';\n\n  var renderer = new PIXI.autoDetectRenderer(w, h, {\n      transparent:true\n    }\n  );\n\n  container.appendChild(renderer.view);\n\n  var raf = null;\n\n  return function animate(stage) {\n\n    if(_.isFunction(stage)){\n      stage = stage()\n    }\n\n    cancelAnimationFrame(raf);\n\n    var animate = function (s,cb) {\n\n      raf = requestAnimationFrame(function(){\n        animate(s,cb);\n      });\n\n      if(s.render){\n        s.render();\n      }\n\n      s.children.forEach((function(child){\n        if(child.render){\n          child.render();\n        }\n      }));\n      renderer.render(s);\n\n      cb && cb();\n    };\n\n    animate(stage);\n\n    return {\n      cancel:function animateCancel(){\n        cancelAnimationFrame(raf);\n      },\n      startDuration:function start(duration){\n        animate(stage);\n        if(duration>0){\n          setTimeout(function () {\n            cancelAnimationFrame(raf);\n          },duration)\n        }\n      },\n      startCount:function start(count){\n        var i = 0;\n        animate(stage,function(){\n          i++;\n          if(i > count){\n            cancelAnimationFrame(raf);\n          }\n        });\n      }\n    }\n  }\n}\n\ncreateRender.DEFAULT_WIDTH = DEFAULT_WIDTH;\ncreateRender.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\n\nmodule.exports = createRender;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/createRender.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.14.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', ARY_FLAG],\n    ['bind', BIND_FLAG],\n    ['bindKey', BIND_KEY_FLAG],\n    ['curry', CURRY_FLAG],\n    ['curryRight', CURRY_RIGHT_FLAG],\n    ['flip', FLIP_FLAG],\n    ['partial', PARTIAL_FLAG],\n    ['partialRight', PARTIAL_RIGHT_FLAG],\n    ['rearg', REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout',\n    'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return baseFindIndex(array, baseIsNaN, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n        objectCreate = context.Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = context.Date && context.Date.now !== root.Date.now && context.Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(context.Object, 'create');\n\n    /* Used to set `toString` methods. */\n    var defineProperty = (function() {\n      var func = getNative(context.Object, 'defineProperty'),\n          name = getNative.name;\n\n      return (name && name.length > 2) ? func : undefined;\n    }());\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache) {\n        var pairs = cache.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          return this;\n        }\n        cache = this.__data__ = new MapCache(pairs);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var result = (isArray(value) || isString(value) || isArguments(value))\n        ? baseTimes(value.length, String)\n        : [];\n\n      var length = result.length,\n          skipIndexes = !!length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      return objectToString.call(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = baseKeysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return basePickBy(object, props, function(value, key) {\n        return key in object;\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick from.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, props, predicate) {\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return baseRest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return baseRest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1), baseUnary(getIteratee()));\n\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length,\n          lastIndex = length - 1;\n\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    var setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return defineProperty(wrapper, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n      });\n    };\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      string = toString(string);\n\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return baseFindIndex(array, baseIsNaN, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = baseRest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array ? array.length : 0;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = baseRest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = baseRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = baseRest(function(func, indexes) {\n      return createWrap(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      var isProto = isPrototype(value);\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key) &&\n            !(isProto && key == 'constructor')) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && nativeKeys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with core-js. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = baseRest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = baseRest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = baseRest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getAllKeysIn(object), getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = baseRest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/6/5.\n */\n\nmodule.exports = function (mp3Url,config) {\n  var body = document.querySelector('body')\n\n  var audioEle = document.createElement('audio')\n\n\n\n  audioEle.src = mp3Url\n\n\n\n  return {\n    play: function () {\n      audioEle.play()\n    },\n    stop: function () {\n      audioEle.stop()\n    },\n    remove: function () {\n      audioEle.stop()\n      audioEle.remove();\n    }\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/audioControl.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/2/4.\n */\nvar PubSub = require('pubsub-js');\n\nfunction createAction(name,action) {\n\n  var isStart = false;\n  var isEnd = false;\n\n  var actionStates = {\n    start: function (data) {\n      isEnd = false;\n      PubSub.publish(name+'Start',data)\n    },\n    progress: function (data) {\n      PubSub.publish(name+'Progress',data);\n    },\n    end: function (data) {\n      if(!isEnd){\n        isEnd= true;\n        PubSub.publish(name+'End',data)\n      }\n    },\n    on: function (name,callback,extra) {\n      PubSub.subscribe(name,function(topic,data){\n        callback(data)\n      });\n    }\n  };\n\n  return function () {\n    action.apply(actionStates,arguments);\n  }\n}\n\ncreateAction.dispatch = PubSub.publish.bind(PubSub);\n\nmodule.exports = createAction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/createAction.js\n ** module id = 7\n ** module chunks = 0\n **/","/*\nCopyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\nLicense: MIT - http://mrgnrdrck.mit-license.org\n\nhttps://github.com/mroderick/PubSubJS\n*/\n(function (root, factory){\n\t'use strict';\n\n    if (typeof define === 'function' && define.amd){\n        // AMD. Register as an anonymous module.\n        define(['exports'], factory);\n\n    } else if (typeof exports === 'object'){\n        // CommonJS\n        factory(exports);\n\n    }\n\n    // Browser globals\n    var PubSub = {};\n    root.PubSub = PubSub;\n    factory(PubSub);\n    \n}(( typeof window === 'object' && window ) || this, function (PubSub){\n\t'use strict';\n\n\tvar messages = {},\n\t\tlastUid = -1;\n\n\tfunction hasKeys(obj){\n\t\tvar key;\n\n\t\tfor (key in obj){\n\t\t\tif ( obj.hasOwnProperty(key) ){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\tReturns a function that throws the passed exception, for use as argument for setTimeout\n\t *\t@param { Object } ex An Error object\n\t */\n\tfunction throwException( ex ){\n\t\treturn function reThrowException(){\n\t\t\tthrow ex;\n\t\t};\n\t}\n\n\tfunction callSubscriberWithDelayedExceptions( subscriber, message, data ){\n\t\ttry {\n\t\t\tsubscriber( message, data );\n\t\t} catch( ex ){\n\t\t\tsetTimeout( throwException( ex ), 0);\n\t\t}\n\t}\n\n\tfunction callSubscriberWithImmediateExceptions( subscriber, message, data ){\n\t\tsubscriber( message, data );\n\t}\n\n\tfunction deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n\t\tvar subscribers = messages[matchedMessage],\n\t\t\tcallSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n\t\t\ts;\n\n\t\tif ( !messages.hasOwnProperty( matchedMessage ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (s in subscribers){\n\t\t\tif ( subscribers.hasOwnProperty(s)){\n\t\t\t\tcallSubscriber( subscribers[s], originalMessage, data );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction createDeliveryFunction( message, data, immediateExceptions ){\n\t\treturn function deliverNamespaced(){\n\t\t\tvar topic = String( message ),\n\t\t\t\tposition = topic.lastIndexOf( '.' );\n\n\t\t\t// deliver the message as it is now\n\t\t\tdeliverMessage(message, message, data, immediateExceptions);\n\n\t\t\t// trim the hierarchy and deliver message to each level\n\t\t\twhile( position !== -1 ){\n\t\t\t\ttopic = topic.substr( 0, position );\n\t\t\t\tposition = topic.lastIndexOf('.');\n\t\t\t\tdeliverMessage( message, topic, data, immediateExceptions );\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction messageHasSubscribers( message ){\n\t\tvar topic = String( message ),\n\t\t\tfound = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic])),\n\t\t\tposition = topic.lastIndexOf( '.' );\n\n\t\twhile ( !found && position !== -1 ){\n\t\t\ttopic = topic.substr( 0, position );\n\t\t\tposition = topic.lastIndexOf( '.' );\n\t\t\tfound = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic]));\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tfunction publish( message, data, sync, immediateExceptions ){\n\t\tvar deliver = createDeliveryFunction( message, data, immediateExceptions ),\n\t\t\thasSubscribers = messageHasSubscribers( message );\n\n\t\tif ( !hasSubscribers ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( sync === true ){\n\t\t\tdeliver();\n\t\t} else {\n\t\t\tsetTimeout( deliver, 0 );\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t *\tPubSub.publish( message[, data] ) -> Boolean\n\t *\t- message (String): The message to publish\n\t *\t- data: The data to pass to subscribers\n\t *\tPublishes the the message, passing the data to it's subscribers\n\t**/\n\tPubSub.publish = function( message, data ){\n\t\treturn publish( message, data, false, PubSub.immediateExceptions );\n\t};\n\n\t/**\n\t *\tPubSub.publishSync( message[, data] ) -> Boolean\n\t *\t- message (String): The message to publish\n\t *\t- data: The data to pass to subscribers\n\t *\tPublishes the the message synchronously, passing the data to it's subscribers\n\t**/\n\tPubSub.publishSync = function( message, data ){\n\t\treturn publish( message, data, true, PubSub.immediateExceptions );\n\t};\n\n\t/**\n\t *\tPubSub.subscribe( message, func ) -> String\n\t *\t- message (String): The message to subscribe to\n\t *\t- func (Function): The function to call when a new message is published\n\t *\tSubscribes the passed function to the passed message. Every returned token is unique and should be stored if\n\t *\tyou need to unsubscribe\n\t**/\n\tPubSub.subscribe = function( message, func ){\n\t\tif ( typeof func !== 'function'){\n\t\t\treturn false;\n\t\t}\n\n\t\t// message is not registered yet\n\t\tif ( !messages.hasOwnProperty( message ) ){\n\t\t\tmessages[message] = {};\n\t\t}\n\n\t\t// forcing token as String, to allow for future expansions without breaking usage\n\t\t// and allow for easy use as key names for the 'messages' object\n\t\tvar token = 'uid_' + String(++lastUid);\n\t\tmessages[message][token] = func;\n\n\t\t// return token for unsubscribing\n\t\treturn token;\n\t};\n\n\t/* Public: Clears all subscriptions\n\t */\n\tPubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n\t\tmessages = {};\n\t};\n\n\t/*Public: Clear subscriptions by the topic\n\t*/\n\tPubSub.clearSubscriptions = function clearSubscriptions(topic){\n\t\tvar m; \n\t\tfor (m in messages){\n\t\t\tif (messages.hasOwnProperty(m) && m.indexOf(topic) === 0){\n\t\t\t\tdelete messages[m];\n\t\t\t}\n\t\t}\n\t};\n\n\t/* Public: removes subscriptions.\n\t * When passed a token, removes a specific subscription.\n\t * When passed a function, removes all subscriptions for that function\n\t * When passed a topic, removes all subscriptions for that topic (hierarchy)\n\t *\n\t * value - A token, function or topic to unsubscribe.\n\t *\n\t * Examples\n\t *\n\t *\t\t// Example 1 - unsubscribing with a token\n\t *\t\tvar token = PubSub.subscribe('mytopic', myFunc);\n\t *\t\tPubSub.unsubscribe(token);\n\t *\n\t *\t\t// Example 2 - unsubscribing with a function\n\t *\t\tPubSub.unsubscribe(myFunc);\n\t *\n\t *\t\t// Example 3 - unsubscribing a topic\n\t *\t\tPubSub.unsubscribe('mytopic');\n\t */\n\tPubSub.unsubscribe = function(value){\n\t\tvar isTopic    = typeof value === 'string' && messages.hasOwnProperty(value),\n\t\t\tisToken    = !isTopic && typeof value === 'string',\n\t\t\tisFunction = typeof value === 'function',\n\t\t\tresult = false,\n\t\t\tm, message, t;\n\n\t\tif (isTopic){\n\t\t\tdelete messages[value];\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( m in messages ){\n\t\t\tif ( messages.hasOwnProperty( m ) ){\n\t\t\t\tmessage = messages[m];\n\n\t\t\t\tif ( isToken && message[value] ){\n\t\t\t\t\tdelete message[value];\n\t\t\t\t\tresult = value;\n\t\t\t\t\t// tokens are unique, so we can just stop here\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isFunction) {\n\t\t\t\t\tfor ( t in message ){\n\t\t\t\t\t\tif (message.hasOwnProperty(t) && message[t] === value){\n\t\t\t\t\t\t\tdelete message[t];\n\t\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pubsub-js/src/pubsub.js\n ** module id = 8\n ** module chunks = 0\n **/","var _ = require('lodash')\n\nvar loadedResourceCache = {};\n/**\n *\n * @param config\n *\n * publicPath:'资源加载路径',以/结尾\n *\n * @returns {{load: Function}}\n */\nfunction createLoader(config) {\n\n  var mySpriteNames = [];\n\n  return {\n\n    load: function load(cb) {\n\n      mySpriteNames.forEach(function (spriteResourceOne) {\n        PIXI.loader.add(\n          spriteResourceOne.key,\n          spriteResourceOne.value\n        );\n      });\n\n      if(mySpriteNames.length > 0){\n\n        mySpriteNames = [];\n\n        PIXI.loader.load(function (loader,loadedResources) {\n\n          loadedResourceCache = _.assign(loadedResourceCache,loadedResources);\n\n          cb(loader,loadedResourceCache);\n        });\n      }else{\n        cb(PIXI.loader,loadedResourceCache);\n      }\n\n      return this;\n    },\n    add: function add(spriteNames,postFix,dir) {\n      if (!postFix) {\n        postFix = 'json'\n      }\n      if(!dir){\n        dir = '';\n      }\n      spriteNames = [].concat(spriteNames).filter(function (spriteNameOne) {\n\n        return !loadedResourceCache[spriteNameOne]\n\n      }).map(function (spriteNameOne) {\n\n        var spriteDir = config.publicPath;\n\n        if(dir){\n          spriteDir += dir + '/';\n        }\n\n        return {\n          key: spriteNameOne,\n          value: spriteDir + spriteNameOne + '/' + spriteNameOne + '.' + postFix\n        }\n      });\n\n      mySpriteNames = mySpriteNames.concat(spriteNames);\n\n      return this;\n    },\n    addMulti : function addMulti(spriteName,nameFormats,postFix){\n      if (!postFix) {\n        postFix = 'json'\n      }\n\n\n      if(typeof nameFormats === 'number'){\n        nameFormats = _.range(nameFormats);\n      }\n\n      mySpriteNames = mySpriteNames.concat(nameFormats.map(function (i) {\n\n        var spriteNameOne = spriteName + i;\n\n        return {\n          key:spriteNameOne,\n          value: config.publicPath + spriteName + '/' + spriteNameOne + '.' + postFix\n        }\n      }).filter(function (spriteObjOne) {\n        return !loadedResourceCache[spriteObjOne.key]\n      }));\n\n      return this;\n    }\n  }\n}\n\ncreateLoader.getResources = function getResources() {\n  return loadedResourceCache;\n};\n\nmodule.exports = createLoader;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/createLoader.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * 计算两点间距\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @returns {number}\n */\nmodule.exports = function(x1, y1, x2, y2) {\n  console.log('deprecated:use .math.distance')\n  return Math.pow((Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2)), 0.5);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/distance.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * 修正精灵属性，比如play和stop不能同时存在，容易毫无意思。\n * @param settingProperties\n * @param finalProperties\n * @returns {*}\n */\n\nmodule.exports = function fixProperties(settingProperties,finalProperties){\n\n  if(settingProperties.play !== undefined){\n    delete finalProperties.stop;\n  }\n  if(settingProperties.stop !== undefined){\n    delete finalProperties.play;\n  }\n\n  var finalKeys = Object.keys(finalProperties).filter(function(key){\n    return /playAction/.test(key)\n  });\n\n  var settingKeys = Object.keys(settingProperties).filter(function(key){\n    return /playAction/.test(key)\n  });\n\n  finalKeys.map(function(key){\n    if(settingKeys.indexOf(key) === -1){\n      delete finalProperties[key];\n    }\n  });\n\n  if(settingKeys.length > 0){\n    delete finalProperties.stop;\n  }\n\n  return finalProperties;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/fixSpriteProperties.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/1/31.\n */\n\nvar setConfig = require('./setConfig');\n\nmodule.exports = function getIm(config) {\n  config = Object.assign({},config);\n\n  var textures = config.textures;\n\n  delete config.textures;\n\n  var sp = new PIXI.Sprite(textures);\n\n  sp.renderCount = 0;\n\n  return setConfig(sp,config);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/getIm.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * 设置PIXI对象的属性。\n */\nvar setValue = function(obj,key,value){\n  if(key.length === 1){\n    var k0 = key[0];\n    if(typeof obj[k0] === 'function'){\n      obj[k0].apply(obj,[].concat(value));\n    }else{\n      obj[k0] = value;\n    }\n  }else{\n    setValue(obj[key.shift()],key,value);\n  }\n  return obj;\n};\n\nmodule.exports = function(object,config){\n  for(var k in config){\n    setValue(object, k.split('.'),config[k]);\n  }\n\n  return object;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/setConfig.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/1/31.\n */\nvar setConfig = require('./setConfig');\n\nmodule.exports = function getMc(config) {\n\n  config = Object.assign({},config);\n  \n  var textures = config.textures;\n  delete config.textures;\n\n  var texturesArr = Object.keys(textures).map(function (key) {\n    return textures[key];\n  });\n  //for(var key in textures){\n  //  texturesArr.push(textures[key]);\n  //}\n\n  var mc = new PIXI.extras.MovieClip(texturesArr);\n\n  mc.renderCount = 0;\n\n  return setConfig(mc,config);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/getMc.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/2/29.\n */\nvar getMc = require('./getMc');\n\n/**\n *\n * @param config\n * @param actions 截止frame帧数\n *  [4,7,10]\n * @returns {*}\n */\nmodule.exports = function getSp(config,actions) {\n  if(!actions){\n    actions = []\n  }\n\n  var obj = getMc(config);\n\n  var _render = function(){};\n\n  var onAction = false;\n  /**\n   * 0~4-0\n   * 0-5~7-0\n   * 0-8~10-0\n   * \n   * isKeepEnd 是否停在最后\n   */\n  obj.playAction = function playAction(index,loop,isKeepEnd) {\n    if(!index){\n      index = 0;\n    }\n\n    if(index < 0 || index > actions.length){\n      return false;\n    }\n\n    var min = (actions[index - 1]+1) || 0;\n    var max = actions[index];\n\n    var backTo = isKeepEnd ? max : 0\n    \n    this.gotoAndPlay(min);\n\n    _render = onAction ? _render : this.render;\n\n    onAction = true;\n\n    this.render = function copyRender() {\n      var cf = this.currentFrame;\n\n      if(cf >= max){\n\n        if(loop){\n          this.gotoAndPlay(min);\n        }else{\n          this.gotoAndStop(backTo);\n          this.render = _render;\n          onAction = false;\n        }\n      }\n\n      _render.call(this);\n    }\n  };\n\n  actions.map(function (ele, i) {\n    obj['playAction'+i] = obj.playAction.bind(obj,i);\n  });\n\n\n  return obj;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/getSp.js\n ** module id = 15\n ** module chunks = 0\n **/","var createLoader = require('./createLoader');\n\n/**\n * 设定资源或取出资源\n *\n * @param spriteName\n * @returns {*}\n */\nmodule.exports = function(spriteName){\n  var resources = createLoader.getResources();\n\n  var textures = false;\n\n  if (resources[spriteName]) {\n\n    textures = resources[spriteName].texture || resources[spriteName].textures;\n  }\n\n  return textures;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/getTextures.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * 加载对应的资源链接，png或json\n * @param resourceUrl\n * @param cb resourceObject\n */\nvar count = 0;\n\nmodule.exports = function loadResource(resourceUrl, cb) {\n  var resourceKey = 'img' + Date.now() + '' + (count++);\n\n  PIXI.loader.add(resourceKey, resourceUrl)\n    .load(function (loader, resources) {\n\n      cb(resources[resourceKey]);\n    });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/loadResource.js\n ** module id = 17\n ** module chunks = 0\n **/","var _ = require('lodash')\nvar loadResource = require('./loadResource');\nvar types = require('./types');\nvar getMc = require('./getMc');\nvar getIm = require('./getIm');\nvar getSp = require('./getSp');\n\nvar spriteFnMap = {};\n\nspriteFnMap[types.SPRITE_IM] = getIm;\nspriteFnMap[types.SPRITE_MC] = getMc;\nspriteFnMap[types.SPRITE_SP] = getSp;\n//为了兼容\nspriteFnMap['image'] = getIm;\nspriteFnMap['movieClip'] = getMc;\n/**\n * 加载资源，生成精灵\n *\n * @param resourceUrl  资源\n * @param spriteType  类型\n * @param properties 属性\n * @param actionFrames 帧 仅用于sp类型\n * @param cb\n */\nmodule.exports = function (resourceUrl,spriteType,properties,actionFrames,cb) {\n\n  if(typeof actionFrames === 'function'){\n    cb = actionFrames;\n    actionFrames = [];\n  }\n  properties = _.assign({},properties);\n\n  loadResource(resourceUrl, function (resource) {\n    //同时兼容到im和mc\n    properties.textures = resource.texture || resource.textures;\n\n    var spriteDisplayObj = spriteFnMap[spriteType](properties,actionFrames);\n\n    cb(spriteDisplayObj);\n  });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/loadSprite.js\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = {\n  SPRITE_MC:'mc',\n  SPRITE_IM:'im',\n  SPRITE_SP:'sp',\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/types.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * 计算单位向量\n * @param [a,b]\n * @returns [c,d]\n */\nvar distance = require('./distance');\n\nmodule.exports = function(a) {\n  console.log('deprecated:use .math.makeIdentity')\n\n  if(!a || a[0] === 0 && a[1] === 0) {\n    return [0, 0]\n  }\n  var b = distance(0,0,a[0],a[1]);\n  //Math.pow((Math.pow(a[0], 2) + Math.pow(a[1], 2)), 0.5);\n  return [a[0] / b , a[1] / b]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/makeIdentity.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/5/24.\n */\nmodule.exports = {\n\n  rotateWithCentral: function (x,y,radians) {\n\n    var targetX = x*Math.cos(radians) - y*Math.sin(radians);\n    var targetY = x*Math.sin(radians) + y*Math.cos(radians);\n\n    return [\n      targetX - x,\n      targetY - y,\n    ]\n  },\n  distance: function (x1, y1, x2, y2) {\n    return Math.pow((Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2)), 0.5);\n  },\n  makeIdentity : function (a) {\n    if(!a || a[0] === 0 && a[1] === 0) {\n      return [0, 0]\n    }\n    var b = this.distance(0,0,a[0],a[1]);\n    //Math.pow((Math.pow(a[0], 2) + Math.pow(a[1], 2)), 0.5);\n    return [a[0] / b , a[1] / b]\n  },\n  //从0开始\n  boomerangTrace:function(x,maxValue){\n    var doubleV = maxValue * 2\n\n    x = x%doubleV\n    \n    if(x > maxValue){\n      x = doubleV - x\n    }\n    \n    return x\n  },\n  boomrangeTraceThunk:function (maxValue) {\n    var doubleV = maxValue * 2\n\n    return function () {\n      x = x%doubleV\n\n      if(x > maxValue){\n        x = doubleV - x\n      }\n\n      return x\n    }\n  },\n  circleTrace:function (r, x) {\n    if(x>r){\n      return 0\n    }\n    return Math.sqrt(Math.pow(r,2) - Math.pow(x,2));\n  },\n  circleTraceThunk:function (r) {\n    var rr = Math.pow(r,2)\n    return function(x){\n      if(x>r){\n        return 0\n      }\n      return Math.sqrt(rr - Math.pow(x,2))\n    }\n  },\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/math.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/7/20.\n */\nmodule.exports = function addStyle(ele, styleObj) {\n  Object.keys(styleObj).map(function(key){\n    ele.style[key] = styleObj[key]\n  })\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/addStyle.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/7/5.\n */\n\nvar addStyle = require('./addStyle')\n\nvar cw = 100;\nvar ch = 100;\n\nvar containerStyle=  {\n  backgroundColor:'#f0f0f0',\n  width:'100%',\n  height:'100%',\n  position:'fixed',\n  top:0,\n  left:0,\n}\n\nvar blackBgStyle = {\n  backgroundColor:'#000',\n  opacity:0.7,\n  width:'100%',\n  height:'100%',\n  position:'absolute',\n  top:0,\n  left:0,\n}\n\n\nvar iconContainerStyle = {\n  backgroundColor:'#fff',\n  width:cw+'px',\n  height:ch+'px',\n  position:'absolute',\n  top:'50%',\n  left:'50%',\n  transform:'translate(-50%,-50%)',\n  overflow:'hidden',\n}\n\n\nvar topCoverStyleFn = function () {\n\n  var topW = 50\n  var topH = 40\n\n  var c = containerStyle.backgroundColor\n\n  return {\n    width:0,\n    height:0,\n    border:'solid',\n    borderWidth:topH + 'px ' + topW + 'px ' + topH + 'px ' + topW + 'px ',\n    borderColor:c + ' transparent transparent transparent',\n    position:'absolute',\n    top:0,\n    left:0,\n    zIndex:1,\n  }\n}\n\nvar bottomCoverStyleFn = function(lOrR){\n\n  var bh = 32\n  var bw = 50\n\n  var l = 15\n\n  var c = containerStyle.backgroundColor\n\n  return {\n    width:0,\n    height:0,\n    border:'50px solid',\n    borderWidth:bh + 'px ' + bw + 'px ' + bh + 'px ' + bw + 'px ',\n    borderColor: lOrR ? 'transparent transparent ' + c + ' '  + c:  'transparent '+c+' ' +c+' transparent',\n    position:'absolute',\n    bottom:0,\n    left: (lOrR ? l : cw - l - bw*2)+'px',\n    zIndex:1,\n  }\n}\n\nvar fillStyleFn = function(){\n\n  return {\n    backgroundColor:'#000',\n    width:'100%',\n    height:'100%',\n    position:'absolute',\n    left:'-100%',\n    top:0,\n  }\n}\n\n\n\nmodule.exports = function(){\n\n  console.warn('to be deprecated.suggest to use loading.basicLoading')\n\n  var containerBox = document.createElement('div')\n\n  var container = document.createElement('div')\n  var containerBg = document.createElement('div')\n\n  var topCover = document.createElement('div')\n\n  var blCover = document.createElement('div')\n\n  var brCover = document.createElement('div')\n\n  var fill = document.createElement('div')\n\n  addStyle(containerBox,containerStyle)\n  addStyle(containerBg,blackBgStyle)\n\n  addStyle(container,iconContainerStyle)\n\n  addStyle(fill,fillStyleFn())\n\n  addStyle(topCover,topCoverStyleFn())\n  addStyle(blCover,bottomCoverStyleFn(true))\n  addStyle(brCover,bottomCoverStyleFn())\n\n\n//  containerBox.appendChild(containerBg)\n  containerBox.appendChild(container)\n\n  container.appendChild(topCover)\n  container.appendChild(blCover)\n  container.appendChild(brCover)\n  container.appendChild(fill)\n  \n  var allProgress = 0;\n  \n  return {\n    el:function(){\n      \n      return containerBox\n    },\n    load:function(progress){\n      if(progress < 100){\n        allProgress = progress\n        fill.style.transform = 'translate('+allProgress+'%,0%)'\n      }\n    },\n    autoLoad:function(cb){\n      \n      var si=setInterval(function(){\n        \n        allProgress++;\n        \n        fill.style.transform = 'translate('+allProgress+'%,0%)'\n\n        cb && cb(allProgress)\n        \n      },200)\n      \n      return function(){\n        clearInterval(si)\n      }\n    }\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/basicLoading.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/7/20.\n */\n\nvar addStyle = require('./addStyle')\n\nfunction blockStyle(bgc) {\n  return {\n    backgroundColor:bgc ? bgc : '#fff',\n    width:'12px',\n    height:'12px',\n    float:'left',\n    transition:'all 0.5',\n    webkitTransition:'all 0.5',\n  }\n}\nfunction blockRotateStyle(bgc) {\n  return {\n    backgroundColor:bgc ? bgc : '#000',\n  }\n}\n\nfunction matrixContainerStyle() {\n  return {\n    width:'132px',\n    height:'132px',\n    position:'absolute',\n    left:'50%',\n    top:'50%',\n    overflow:'hidden',\n    transform:'translate(-50%,-50%)',\n    webkitTransform:'translate(-50%,-50%)',\n  }\n}\n\n\nfunction rotateAnimation(element,color) {\n\n  var from = 0,to = 180;\n\n  var pre = 1 ? 'rotateY' : 'rotateX'\n\n  function task(){\n\n    from += 5\n\n    var styleObj = {\n      backgroundColor:color\n    }\n    styleObj.transform = pre + '('+from+'deg)'\n\n    addStyle(element,styleObj)\n\n    if(from < to){\n      requestAnimationFrame(task)\n    }\n  }\n\n  task()\n}\n\nfunction hasColor(c){\n  return ['transparent','#000','#000000'].indexOf(c) === -1\n}\n\nmodule.exports = function(dataArr){\n  \n\n  var containerDiv = document.createElement('div')\n\n  addStyle(containerDiv,matrixContainerStyle())\n\n  var elementsArr = dataArr.map(function(c,i){\n    var cell = document.createElement('span')\n\n    cell.toBeColor = c;\n\n    if(hasColor(c)){\n      c = '#fff'\n    }\n\n    addStyle(cell,blockStyle(c))\n\n    containerDiv.appendChild(cell)\n\n\n    return cell\n  }).filter(function(ele){\n\n    return hasColor(ele.toBeColor)\n  })\n\n\n\n\n  return {\n    el:function(styleObj){\n      if(styleObj){\n        addStyle(containerDiv,styleObj)\n      }\n      return containerDiv\n    },\n    progress:function(random){\n      if(elementsArr.length > 0) {\n\n        var ri =  random ? parseInt(Math.random() * elementsArr.length) : 0\n\n        addStyle(elementsArr[ri], blockRotateStyle())\n\n        rotateAnimation(elementsArr[ri],elementsArr[ri].toBeColor)\n\n        elementsArr.splice(ri,1)\n        \n        return true\n      }\n      return false\n    }\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/matrixManager.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/7/20.\n */\n\nvar matrixManager = require('./matrixManager')\nvar repeate = require('./repeat')\n\nvar cgrey = 'rgb(169,197,202)',\n  cyellow = 'rgb(245,207,56)',\n  cred = 'rgb(234, 108, 95)',\n  cgreen = 'rgb(49, 210, 76)',\n  cblack = 'rgb(66,91,112)',\n  corange = 'rgb(208,127,52)',\n  cpurple = 'rgb(95,100,136)',\n  cblue = 'rgb(34,189,250)';\n\nvar colorArr = []\n  .concat(repeate('transparent',3)).concat(repeate('#000',5)).concat(repeate('transparent',3))\n  .concat(repeate('transparent',1)).concat(repeate('#000',9)).concat(repeate('transparent',1))\n  .concat(['transparent','#000',cgrey,cyellow]).concat(repeate('#000',3)).concat(['transparent','#000',cred,cyellow].reverse())\n  .concat(repeate('#000',2)).concat([cgreen,cred]).concat(repeate('#000',3)).concat([cblack,corange]).concat(repeate('#000',2))\n  .concat(repeate('#000',2)).concat([cpurple,cblack,cyellow,'#000',cgreen,cyellow,cblack]).concat(repeate('#000',2))\n  .concat(repeate('#000',2)).concat([corange,cred,cblack,cgreen,corange,cblack,cgreen]).concat(repeate('#000',2))\n  .concat(repeate('#000',2)).concat([cblack,cgreen,'#000',cred,'#000',corange,cred]).concat(repeate('#000',2))\n  .concat(repeate('#000',2)).concat([cred,cblack]).concat(repeate('#000',3)).concat([cyellow,cblack]).concat(repeate('#000',2))\n  .concat(['transparent','#000']).concat([cblue,cgreen]).concat(repeate('#000',3)).concat([cred,cgreen]).concat(['#000','transparent'])\n  .concat(repeate('transparent',1)).concat(repeate('#000',9)).concat(repeate('transparent',1))\n  .concat(repeate('transparent',3)).concat(repeate('#000',5)).concat(repeate('transparent',3))\n\nmodule.exports = function(){\n\n  console.warn('to be deprecated.suggest to use loading.mpLoading')\n\n  var m = matrixManager(colorArr)\n\n  return {\n    el:function () {\n      return m.el()\n    },\n    progress:function(){\n      return m.progress(1)\n    }\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/mpLoading.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/7/20.\n */\nvar _ = require('lodash')\n\nmodule.exports = function(value,num){\n\n  return _.range(num).map(function(){\n    return value\n  })\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/repeat.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/7/25.\n */\nvar repeat = require('./repeat')\n\n/**\n *\n * 放大canvas的ImageData\n *\n * @param data ImageData.data数组\n * @param width 原canvas宽度\n * @param resizeX 横坐标放大倍数\n * @param resizeY 纵坐标放大倍数,默认为resizeX\n * @param gap 默认为4, ImageData中默认 rgba4位 为一个颜色单元\n * @returns {*}\n */\n\n\n\nmodule.exports = function resizeImageData(data,width,resizeX,resizeY,gap){\n  resizeX = parseInt(resizeX)\n  resizeY = resizeY ? parseInt(resizeY) : resizeX\n  width = parseInt(width)\n  gap = gap ? gap : 4\n\n  if(!isNaN(resizeX) && !isNaN(resizeY) && !isNaN(width)){\n\n    var lines = parseInt(data.length / width)\n    var i=0;\n\n    var finalResizedData = [];\n\n    while(i<=lines){\n      var lineOne = data.slice(i * width,(i+1)*width);\n      i++\n\n      //递归\n      if(gap === 1){\n        lineOne = lineOne.reduce(function (init,dataOne) {\n          return init.concat(repeat(dataOne,resizeX))\n        },[])\n      }else{\n        lineOne = resizeImageData(lineOne,gap,1,resizeX,1)\n      }\n\n\n      var resizedLineOne = repeat(lineOne,resizeY).reduce(function (p, n) {\n        return p.concat(n)\n      },[])\n\n      finalResizedData = finalResizedData.concat(resizedLineOne)\n    }\n\n    return finalResizedData\n  }else{\n    return false;\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/resizeImageData.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/7/5.\n */\nvar sharedPng =\"\"\n\nmodule.exports = function () {\n  var div = document.createElement('div')\n  div.style.zIndex = 9999\n  div.style.position = 'fixed'\n  div.style.left = 0\n  div.style.top = 0\n  div.style.right = 0\n  div.style.bottom = 0\n\n  var bg = document.createElement('div');\n  bg.style.backgroundColor = '#000'\n  bg.style.opacity = 0.7\n  bg.style.width = '100%'\n  bg.style.height = '100%'\n  bg.style.position = 'absolute'\n  bg.style.left = 0\n  bg.style.top = 0\n\n  var img = new Image()\n  img.src=\"data:image/png;base64,\"+sharedPng\n  img.style.zIndex = 1;\n  img.style.position = 'absolute'\n  img.style.top = '20px'\n  img.style.right = '20px'\n\n  var body = document.querySelector('body')\n\n  div.appendChild(bg)\n  div.appendChild(img)\n  body.appendChild(div)\n\n  div.onclick = function () {\n    div.remove()\n    div = null;\n  }\n\n  return function () {\n    div && div.remove()\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/shareGuide.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/28.\n */\nfunction unfoldArray(fromArr,arr) {\n  if(fromArr.length > 0){\n    var v = fromArr[0];\n\n    if(_.isArray(v)){\n      var unV = unfoldArray(v,[]);\n      arr = arr.concat(unV);\n    }else{\n      arr = arr.concat(v);\n    }\n    return unfoldArray(fromArr.slice(1),arr);\n  }else{\n    return arr;\n  }\n}\n\n\nmodule.exports = unfoldArray;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/utils/unfoldArray.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/17.\n */\n\nvar _ = require('lodash');\n\n\nfunction AudioPlayer(src) {\n  this.el = document.createElement('audio');\n  this.el.src = src;\n  this.playing = false;\n\n  var self = this;\n\n  this.el.addEventListener('pause',function () {\n    self.playing = false;\n  });\n  this.el.addEventListener('ended',function () {\n    self.playing = false;\n  })\n  \n}\nAudioPlayer.prototype.play = function (beginHead) {\n  if(beginHead){\n    this.el.currentTime=0;\n  }\n  this.el.play();\n  this.playing = true;\n};\nAudioPlayer.prototype.stop = function () {\n  this.el.stop();\n  this.playing = false;\n};\n/**\n * 音频加载和播放相关的库\n * @param Object config {\n *    key:<url>\n * }\n */\nmodule.exports = function (config) {\n\n  var cache = [];\n\n  var playObj = Object.keys(config).map(function(key){\n\n    var playObj = {};\n    playObj[key] = function () {\n\n      var  idleAp = cache.filter(function (ap) {\n        return !ap.playing;\n      })[0];\n\n      if(!idleAp){\n        idleAp = new AudioPlayer(config[key]);\n        cache.push(idleAp);\n      }\n\n      idleAp.play(true);\n\n      return idleAp;\n    };\n    return playObj;\n  }).reduce(function (i,next) {\n    return _.assign(i,next);\n  },{});\n\n\n  return playObj;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi-lib/lib/audio/loadAudio.js\n ** module id = 30\n ** module chunks = 0\n **/","var jsonResource = [\n    'default',\n    'dog',\n    'car',\n    'cat'\n  ],\n  pngResource = [\n    'star',\n    'bg',\n    'bg2',\n    'block',\n    'building0',\n    'building1',\n    'building2',\n    'building3',\n    'building4',\n    'bush',\n    'tree',\n    'cloud',\n    'cloudSun',\n    'game_background',\n    \"greenHill\",\n    \"greenMountains\",\n    \"westLakeLantern\",\n    \"westLakeHydrant\",\n    \"groupBuildings\",\n    \"smokeShop\",\n    \"platformChair\",\n    \"westLakeBridgeWave\",\n    \"westLakeBridgeApproache\",\n    \"westLakeBridge\",\n    \"westLakeMansion\",\n    \"building5\",\n    \"building6\",\n    \"goldCoin\",\n  ]\nvar stage = new PIXI.Container()\nstage.pivot = new PIXI.Point(502, 320)\nstage.x = 320\nstage.y = 502\nstage.rotation = Math.PI / 2\n\nwindow.W = 1004;\nwindow.H = 640;\n\nvar loader = require('../loader')\nvar world = require('./world').world\n\n/**\n *  --> Public Method\n **/\nvar render = function (renderer) {\n  \n  loader.add(jsonResource, 'json')\n    .add(pngResource, 'png')\n    .load(function () {\n      var counter = 0;\n      world.reset();\n\n      stage.removeChildren();\n      /**\n       * direction button\n       */\n\n      var blockFactory = require('./block');\n      var starFactory = require('../../images/star')\n      var road = require('./road');\n      var gameBackground = require('../../images/game_background')();\n      var goldCoinFn = require('../../images/goldCoin')\n\n      /**\n       * --> Private Method\n       **/\n      function addBlock(count) {\n        var block = blockFactory();\n        if (block ) {\n          stage.addChildAt(block, 3);\n        }else{\n        }\n\n        return !!block;\n      }\n\n      function addStar() {\n        var randomy = Math.random() * 200 + 300\n        var star = starFactory({position: {x: 1004, y: randomy}})\n        if (star) {\n          stage.addChild(star)\n        }\n      }\n\n      stage.addChild(gameBackground);\n      stage.addChild(road);\n\n\n      var goldCoin = goldCoinFn();\n\n      stage.addChild(goldCoin)\n\n\n      var dog = require('./dog')\n      dog.finishCb = function () {\n        var end = require('../end');\n        console.log('结束');\n        \n        end(renderer, goldCoin.getScore(), false)\n      }\n      dog.reset()\n      stage.addChild(dog)\n      stage.interactive = true;\n      stage.on('touchstart', function () {\n        dog.jump()\n      })\n\n      world.on('enemyCollision', function (event) {\n\n        gameFail = true;\n\n        dog.end()\n      })\n      world.on('rewardCollision', function (event) {\n        event.reward.sprite.dismiss()\n        goldCoin.upScore()\n      })\n\n      //游戏失败,游戏结束\n      var gameFail = false,\n        gameOver = false;\n      \n      stage.render = function () {\n        counter++;\n        world.step(1 / 60)\n        \n        gameOver = road.isGameEnd();\n        if(gameOver){\n          dog.gogogo();\n        }\n        \n        if (counter % 60 === 0 && !(gameOver && gameFail)) {\n          var i = counter / 25;\n          addBlock(counter);\n        }\n        if (counter % 30 === 0) {\n          addStar(counter)\n        }\n        stage.children.forEach(function (child) {\n          if (child.render) {\n            child.render()\n          }\n        })\n      };\n      renderer(stage)\n    })\n}\n\n\nmodule.exports = render\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/index.js\n ** module id = 31\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nmodule.exports = pixiLib.createLoader({\n  // publicPath:'../images/'\n  publicPath:'http://o8c60jr2y.bkt.clouddn.com/'\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/loader.js\n ** module id = 32\n ** module chunks = 0\n **/","var screenHeight = 640\nvar World = require('./physics').World\n\nvar roadFn = require('../../images/road')\n\nvar world = new World({\n  gravity: -4000,\n  land:roadFn.roadBaseHeight,\n})\nmodule.exports = {\n  speed: 2,\n  world: world,\n  getY: function(y) {\n    return screenHeight - y\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/world.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = {\n  Block: require('./block'),\n  World: require('./world'),\n  Player: require('./player')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/physics/index.js\n ** module id = 34\n ** module chunks = 0\n **/","var BlockType = {\n  Reward: 'Reward',\n  Enemy: 'Enemy',\n  Block: 'Block'\n}\n\nvar Block = function(option) {\n  this.width = option.width || 10\n  this.height = option.height || 10\n  this.position = option.position || {x: 0, y: 0},\n  this.block = option.block || true\n  this.type = option.type || BlockType.Block\n}\n\nBlock.BlockType = BlockType\n\nmodule.exports = Block\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/physics/block.js\n ** module id = 35\n ** module chunks = 0\n **/","var Oberver = require('./observer')\nvar collision = require('./collision')\nvar Block = require('./block')\n\nvar World = function(option) {\n  option = option || {}\n  this.players = []\n  this.blocks = []\n  this.gravity = option.gravity || -10\n  this.land = option.land || 0\n}\n\n\nvar addPlayerEvent = function(player) {\n  return {\n    key: 'addPlayer',\n    player: player\n  }\n}\n\nvar removePlayerEvent = function(player) {\n  return {\n    key: 'removePlayer',\n    player: player\n  }\n}\n\nvar addBlockEvent = function (block) {\n  return {\n    key: 'addBlock',\n    block: block\n  }\n}\n\nvar removeBlockEvent = function(block) {\n  return {\n    key: 'removeBlock',\n    block: block\n  }\n}\n\nvar enemyCollisionEvent = function(player, enemy) {\n  return {\n    key: 'enemyCollision',\n    player: player,\n    enemy: enemy\n  }\n}\n\nvar rewardCollisionEvent = function(player, reward) {\n  return {\n    key: 'rewardCollision',\n    player: player,\n    reward: reward\n  }\n}\n\nWorld.prototype = new Object(Oberver.prototype)\n\nWorld.prototype.constructor = World\n\nWorld.prototype.addPlayer = function(player) {\n  this.players.push(player)\n  this.sendEvent(addPlayerEvent(player))\n}\n\nWorld.prototype.addBlock = function(block) {\n  block.world = this\n  this.blocks.push(block)\n  this.sendEvent(addBlockEvent(block))\n}\n\nWorld.prototype.removeBlock = function(block) {\n  block.world = null\n  var i = this.blocks.indexOf(block)\n  if (i != -1) {\n    this.blocks.splice(i, 1)\n  }\n  this.sendEvent(removeBlockEvent(block))\n}\n\nWorld.prototype.reset = function() {\n  this.players = []\n  this.blocks = []\n}\n\nWorld.prototype.step = function(dt) {\n  for (var index in this.players) {\n    var player = this.players[index]\n    player.inland = false\n    player.origin = player.position\n    var dx = player.v.x * dt + 0.5 * player.a.x * dt * dt\n    var dy = player.v.y * dt + 0.5 * (player.a.y + this.gravity) * dt * dt\n    var position = {x: player.position.x + dx, y: player.position.y + dy}\n    player.position = position\n    if (player.position.y < player.height / 2 + this.land) {\n      player.position.y  = player.height / 2 + this.land;\n      player.inland = true\n    }\n    player.v.x = player.v.x + player.a.x * dt\n    player.v.y = player.v.y + (player.a.y + this.gravity) * dt\n    var result = checkEnemyCollision(this, this.blocks, player)\n    if (result.enemy) {\n      if (result.enemy.type != Block.BlockType.Reward) {\n        this.sendEvent(enemyCollisionEvent(player, result.enemy))\n      }\n    } else {\n      if (result.topBlock && result.bottomBlock){\n        if (collision.checkBottomCollision(player, result.topBlock)) {\n          player.position.y = result.topBlock.position.y + (result.topBlock.height + player.height) / 2\n          player.inland = true\n          player.v.y = 0\n        } else if (collision.checkTopCollision(player, result.bottomBlock)) {\n          player.position.y = result.bottomBlock.position.y - (result.bottomBlock.height + player.height) / 2\n          player.v.y = 0\n        }\n      }\n    }\n  }\n}\n\nvar checkEnemyCollision = function(world, blocks, player) {\n  var enemy = null\n  var topBlock = null\n  var bottomBlock = null\n  for (var i in blocks) {\n    var current = blocks[i]\n    if (current.type == Block.BlockType.Block && current.position.x < player.position.x + player.width && current.position.x >= player.position.x - current.width) {\n      if (!topBlock || current.position.y >= topBlock.position.y) topBlock = current\n      if (!bottomBlock || current.position.y <= bottomBlock.position.y) bottomBlock = current\n    }\n    if (current.type == Block.BlockType.Reward) {\n      if (collision.checkEnemyCollision(player, current)) {\n        world.sendEvent(rewardCollisionEvent(player, current))\n        if (!enemy) enemy = current\n      }\n    } else {\n      if (collision.checkEnemyCollision(player, current)) {\n        enemy = current\n        break\n      }\n    }\n  }\n  return {\n    enemy: enemy,\n    topBlock: topBlock,\n    bottomBlock: bottomBlock\n  }\n}\n\nmodule.exports = World\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/physics/world.js\n ** module id = 36\n ** module chunks = 0\n **/","var Ob = function() {}\n\nOb.prototype.events = {\n}\n\nOb.prototype.on = function(key, handler) {\n  this.events[key] = handler\n}\n\nOb.prototype.sendEvent = function(event, key) {\n  key = event.key || key\n  if (key && this.events[key]) {\n    var handler = this.events[key]\n    handler(event)\n  }\n}\n\nmodule.exports = Ob\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/physics/observer.js\n ** module id = 37\n ** module chunks = 0\n **/","var Block = require('./block')\n\nvar checkBottomCollision = function(player, block) {\n  var dx = player.position.x - block.position.x\n  var dy = player.position.y - block.position.y\n  var odx = player.origin.x - block.position.x\n  var ody = player.origin.y - block.position.y\n  return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2) && (Math.abs(odx) <= (player.width + block.width) / 2 && Math.abs(ody) >= (player.height + block.height) / 2) && dy >= 0\n}\nvar checkTopCollision = function(player, block) {\n  var dx = player.position.x - block.position.x\n  var dy = player.position.y - block.position.y\n  var odx = player.origin.x - block.position.x\n  var ody = player.origin.y - block.position.y\n  return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2) && (Math.abs(odx) <= (player.width + block.width) / 2 && Math.abs(ody) >= (player.height + block.height) / 2) && dy < 0\n}\n\n\nvar checkEnemyCollision = function(player, block) {\n  var dx = player.position.x - block.position.x\n  var dy = player.position.y - block.position.y\n  var odx = player.origin.x - block.position.x\n  var ody = player.origin.y - block.position.y\n  if (block.type == Block.BlockType.Block) {\n    return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2) && Math.abs(ody) < Math.abs(odx) && odx < 0\n  } else {\n    return (Math.abs(dx) < (player.width + block.width) / 2 && Math.abs(dy) < (player.height + block.height) / 2)\n  }\n}\n\nmodule.exports = {\n  checkEnemyCollision: checkEnemyCollision,\n  checkTopCollision: checkTopCollision,\n  checkBottomCollision: checkBottomCollision,\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/physics/collision.js\n ** module id = 38\n ** module chunks = 0\n **/","\nvar Player = function(option) {\n  this.width = option.width || 10\n  this.height = option.height || 10\n  this.position = option.position || {x: 0, y: 0},\n  this.v = option.v || {x: 0, y: 0}\n  this.a = option.a || {x: 0, y: 0}\n  this.inland = false\n}\n\nmodule.exports = Player\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/physics/player.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/27.\n */\n\nvar roadBaseWidth = 1004;\n\nvar grassHeight = 15;\nvar grassHeight2 = 30;\nvar roadBaseHeight = 96;\n\n\nfunction roadBaseFn() {\n\n  var base = new PIXI.Container();\n\n  var grass = new PIXI.Graphics();\n  grass.beginFill(0x86b952)\n  grass.drawRect(0,0,roadBaseWidth,grassHeight);\n  grass.endFill()\n\n  var grass1 = new PIXI.Graphics();\n  grass1.beginFill(0xafe771)\n  grass1.drawRect(0,grassHeight,roadBaseWidth,grassHeight2);\n  grass1.endFill()\n\n\n  var rect = new PIXI.Graphics();\n  rect.beginFill(0x696969)\n  rect.drawRect(0,grassHeight + grassHeight2,roadBaseWidth,roadBaseHeight)\n  rect.endFill()\n\n  base.addChild(rect)\n  base.addChild(grass1)\n  base.addChild(grass)\n\n  return base;\n}\n\nfunction roadLightLine() {\n\n  var line = new PIXI.Graphics();\n\n  line.beginFill(0xf0f0f0)\n  line.drawRect(0,grassHeight + grassHeight2 + roadBaseHeight/2 - 6 ,70,12)\n  line.endFill();\n\n  return line;\n}\n\nfunction roadDarkLine() {\n  var line = new PIXI.Graphics()\n\n  line.beginFill(0xaaaaaa)\n  line.drawRect(0,grassHeight + grassHeight2 + roadBaseHeight/2 - 1,70,2)\n  line.endFill()\n\n  return line;\n}\n\nfunction roadFn(ignoreLine) {\n\n  var container = new PIXI.Container();\n\n  container.addChild(roadBaseFn())\n\n  if(ignoreLine) {\n    var i = 0;\n    var lines = [roadLightLine, roadDarkLine];\n\n    while ((i * 70) < roadBaseWidth) {\n\n      var line = lines[i % 2]();\n      line.x = (i * 70);\n\n      container.addChild(line);\n\n      i++;\n    }\n  }\n\n  return container;\n}\n\nroadFn.grassHeight = grassHeight;\nroadFn.grassHeight2 = grassHeight2;\nroadFn.roadBaseHeight = roadBaseHeight;\n\nroadFn.roadHeight = roadBaseHeight + grassHeight + grassHeight2;\n\nmodule.exports = roadFn;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/road/index.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/26.\n */\nvar _ = require('lodash');\nvar repeat = require('pixi-lib').utils.repeat;\nvar unfoldArray = require('pixi-lib').utils.unfoldArray;\n\nvar carFn = require('../../../images/car');\nvar blockFn = require('../../../images/block');\n\nfunction blockFnWrapper(p) {\n  return function () {\n    return blockFn({\n      position:p\n    });\n  }\n}\n\nfunction empty() {\n  return false;\n}\n\nvar roadArr = repeat([\n  repeat(empty,2),\n  [\n    blockFnWrapper('l'),\n    blockFnWrapper('m'),\n    blockFnWrapper('h')\n  ].concat(repeat(empty,2)),\n  carFn,\n],10);\n\n\nvar unzipRoadArr = unfoldArray(roadArr,[]);\nvar index = 0;\n\nfunction blockManager() {\n\n  var func = unzipRoadArr[index++];\n\n  return  func ? func() : console.error('到终点了');\n}\n\nmodule.exports = blockManager;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/block/index.js\n ** module id = 41\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\nvar world = require('../../src/game/world')\nvar Block = require('../../src/game/physics/index').Block\n\nvar roadFn = require('../road');\n\nmodule.exports = function (arg) {\n\n  var sp = mySpriteFn({})\n\n  sp.scale.x = sp.scale.y = 0.4;\n\n  sp.anchor.x = sp.anchor.y = 0.5;\n\n  var x = 1004,y = roadFn.roadBaseHeight + sp.height * sp.anchor.y;\n\n  sp.x = sp.initX = x;\n  sp.y = sp.initY = world.getY(y);\n\n  var myBlock = new Block({\n    width:sp.width,\n    height:sp.height,\n    position:{\n      x:x,\n      y:y\n    },\n    type: Block.BlockType.Enemy\n  })\n  \n  world.world.addBlock(myBlock);\n\n  sp.render = function () {\n    myBlock.position.x -= world.speed * 2.5\n    sp.x = myBlock.position.x\n    sp.y = world.getY(myBlock.position.y);\n\n    if (sp.x < 0) {\n      sp.parent.removeChild(sp)\n      myBlock.world.removeBlock(myBlock)\n    }\n\n  };\n\n  return sp;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/car/index.js\n ** module id = 42\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('car'),\n\n  \n\n    \n\n    \"spriteName\" :  \"car\" ,\n\n    \n\n  \n\n    \n\n    \"animationSpeed\" :  0.6 ,\n\n    \n\n  \n\n    \n\n    \"loop\" :  1 ,\n\n    \n\n  \n\n    \n\n    \"play\" :  1 ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getMc.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/car/sprite.js\n ** module id = 43\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib')\nvar world = require('../../src/game/world')\nvar Block = require('../../src/game/physics/index').Block\n\nvar roadFn = require('../road')\n\nfunction getCoordinateByPosition(p) {\n\n\n  var h = 35; //anchor.y = 0.5 折算高度\n\n  var  m = {\n    low:{\n      x:1004,\n      y:roadFn.roadBaseHeight + h\n    },\n    middle:{\n      x:1004,\n      y:roadFn.roadBaseHeight + h\n    },\n    high:{\n      x:1004,\n      y:roadFn.roadBaseHeight + h\n    },\n  };\n\n  //别名\n  m.l = m.low;\n  m.m = m.middle;\n  m.h = m.high;\n\n  return m[p];\n}\n\n/**\n * @param arg\n *   i 调用个数\n *   position 障碍物位置\n *      low 最低处\n * @returns {*}\n */\nvar blockFactory = function(arg) {\n\n  var i = arg.i,\n    position = arg.position || 'l';\n\n  position = getCoordinateByPosition(position);\n\n  if(!position){\n    throw new Error('no po')\n  }\n\n  var x = position.x;\n    y = position.y;\n\n  var sprite = pixiLib.getIm({\n    textures: pixiLib.getTextures('block'),\n    \"anchor.x\": 0.5,\n    \"anchor.y\": 0.5,\n    \"scale.x\" : 0.5,\n    \"scale.y\" : 0.5,\n    x: x,\n    y: world.getY(y),\n  });\n\n  var block = new Block({\n    width: sprite.width,\n    height: sprite.height,\n    position: {\n      x: x,\n      y: y\n    }\n  });\n\n  world.world.addBlock(block);\n\n  sprite.render = function() {\n    block.position.x -= world.speed\n    sprite.x = block.position.x\n    sprite.y = world.getY(block.position.y);\n\n    if (sprite.x < 0) {\n      sprite.parent.removeChild(sprite)\n      block.world.removeBlock(block)\n    }\n  }\n  return sprite\n}\n\nmodule.exports = blockFactory\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/block/index.js\n ** module id = 44\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib')\nvar world = require('../../src/game/world')\nvar Block = require('../../src/game/physics/index').Block\n\nvar starFactory = function(arg) {\n  var position = arg.position || {x: 0, y: 0};\n\n  if(!position){\n    throw new Error('no po')\n  }\n\n  var x = position.x,\n    y = position.y;\n\n  var sprite = pixiLib.getIm({\n    textures: pixiLib.getTextures('star'),\n    \"anchor.x\": 0.5,\n    \"anchor.y\": 0.5,\n    \"scale.x\" : 1,\n    \"scale.y\" : 1,\n    x: x,\n    y: world.getY(y),\n  });\n\n  var block = new Block({\n    type: Block.BlockType.Reward,\n    width: sprite.width,\n    height: sprite.height,\n    position: {\n      x: x,\n      y: y\n    }\n  });\n  world.world.addBlock(block);\n  block.sprite = sprite\n  sprite.render = function() {\n    block.position.x -= world.speed\n    sprite.x = block.position.x\n    sprite.y = world.getY(block.position.y);\n    if (sprite.x < 0) {\n      sprite.parent.removeChild(sprite)\n      block.world.removeBlock(block)\n    }\n  }\n\n  var audioPlayObj = pixiLib.audio.loadAudio({\n    hit:'http://o8c60jr2y.bkt.clouddn.com/ding.mp3'\n  });\n\n\n  sprite.dismiss = function() {\n    sprite.parent.removeChild(sprite)\n    block.sprite = null\n    block.world.removeBlock(block)\n\n    audioPlayObj.hit();\n\n  }\n  return sprite\n}\n\nmodule.exports = starFactory\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/star/index.js\n ** module id = 45\n ** module chunks = 0\n **/","var bgFn = require('../../../images/bg');\nvar bgFn2 = require('../../../images/bg2');\n\nvar roadFn = require('../../../images/road')\n\nvar groupFn = require('../background/group')\nvar groupFn2 = require('../background/group2')\nvar groupFn3 = require('../background/group3')\nvar groupFn4 = require('../background/group4')\nvar groupFn5 = require('../background/group5')\n\n//生成背景\nfunction repeatBackground(spriteFn) {\n  var arr = [];\n\n\n  var fns = [].slice.call(arguments, 0, arguments.length);\n\n  var num = fns.length;\n\n  function build(fn, i) {\n\n    var bg = fn();\n\n    bg.x = bg.initX = i * 1004;\n    bg.y = 640 - bg.height;\n    bg.sideX = -(num - i) * 1004;\n\n    return bg;\n  }\n\n  for (var i = 0; i < num; i++) {\n\n    var fn = fns[i];\n\n    var bg = build(fn, i);\n\n    arr.push(bg);\n  }\n  //补尾部\n  // arr.push(build(fns[0],num));\n\n\n  return arr;\n}\n\n\nfunction getBg(bgFn, i) {\n\n  if (i === undefined) {\n    i = 1;\n  }\n\n  var bg = bgFn();\n\n  bg.x = bg.initX = i * 1004;\n  bg.sideX = -1 * 1004;\n\n  return bg;\n}\n\n\nvar stage = new PIXI.Container();\nstage.speed = 2;\nstage.gameEnd = false;\n\nvar bgs = repeatBackground(roadFn)\n\nbgs.map(function (bg) {\n  stage.addChild(bg);\n});\n\nvar buildingsArr = [\n  groupFn,\n  groupFn2,\n  groupFn4,\n  groupFn,\n  groupFn2,\n  groupFn3,\n  groupFn,\n  groupFn2,\n  groupFn5\n];\n\n\nstage.buildings = [\n  getBg(buildingsArr[0], 0),\n  getBg(buildingsArr[1]),\n];\n\nstage.addChild(stage.buildings[0])\nstage.addChild(stage.buildings[1])\n\nbuildingsArr = buildingsArr.slice(2);\n\nstage.setSpeed = function (s) {\n  stage.speed = s;\n}\n\nstage.setGameEnd = function () {\n  stage.gameEnd = true;\n}\n\nstage.isGameEnd = function () {\n  return stage.gameEnd;\n}\n\nstage.render = function () {\n\n  if(stage.gameEnd){\n    return true;\n  }\n\n  var newBuildings = [];\n\n  stage.buildings.map(function (bg) {\n\n    if (bg.removed) {\n      return;\n    }\n\n    bg.x -= stage.speed;\n\n    if (bg.x <= bg.sideX) {\n\n      bg.removed = true;\n      stage.removeChild(bg);\n\n      //倒数第二个已经到达最边界,此时显示的是倒数最后一块。游戏结束\n      if(buildingsArr.length === 0){\n        stage.setGameEnd();\n      }\n\n    } else {\n      newBuildings.push(bg);\n    }\n  });\n\n  if (newBuildings.length < 2 && buildingsArr.length > 0) {\n\n    var newBg = getBg(buildingsArr[0]);\n\n    newBuildings.push(newBg)\n\n    stage.addChild(newBg);\n\n    buildingsArr = buildingsArr.slice(1);\n\n    stage.buildings = newBuildings.slice();\n  }\n\n};\n\n\n\nmodule.exports = stage;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/road/index.js\n ** module id = 46\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/bg/index.js\n ** module id = 47\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('bg'),\n\n  \n\n    \n\n    \"spriteName\" :  \"bg\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/bg/sprite.js\n ** module id = 48\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/bg2/index.js\n ** module id = 49\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('bg2'),\n\n  \n\n    \n\n    \"spriteName\" :  \"bg2\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/bg2/sprite.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/29.\n */\nvar _ = require('lodash');\nvar repeat = require('pixi-lib').utils.repeat;\nvar unfoldArray = require('pixi-lib').utils.unfoldArray;\n\nvar fn = require('./fn');\nvar addChildren = fn.addChildren;\nvar arrFn = fn.arrFn;\n\nvar building0 = require('../../../images/building0');\nvar building1 = require('../../../images/building1');\nvar building2 = require('../../../images/building2');\nvar building3 = require('../../../images/building3');\nvar building4 = require('../../../images/building4');\nvar bush = require('../../../images/bush');\nvar cloud = require('../../../images/cloud');\nvar cloudSun = require('../../../images/cloudSun');\nvar tree = require('../../../images/tree');\n\n\nvar roadFn = require('../../../images/road');\n\nvar maxY = 640 - roadFn.roadHeight;\n\n\n\nfunction cloudFn() {\n\n  var argArr = [{\n    \"scale.x\": 0.25,\n    \"scale.y\": 0.25,\n    x: 50,\n    y: 180\n  }, {\n    \"scale.x\": 0.25,\n    \"scale.y\": 0.25,\n    x: 700,\n    y: 70\n  }];\n\n\n  return [argArr, [\n    cloud,\n    cloudSun\n  ]]\n}\n\nfunction bushesFn() {\n  var argArr = [\n    {\n      \"scale.x\": 0.15,\n      \"scale.y\": 0.15,\n      x: 10,\n    },\n    {\n      \"scale.x\": 0.05,\n      \"scale.y\": 0.05,\n      x: 160,\n    },\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 520,\n    },\n    {\n      \"scale.x\": 0.10,\n      \"scale.y\": 0.10,\n      x: 675,\n    },\n  ]\n\n  return [argArr, bush]\n}\n\nfunction treesFn() {\n\n  var argArr = [\n    {\n      \"scale.x\": 0.15,\n      \"scale.y\": 0.15,\n      x: 120,\n    },\n    {\n      \"scale.x\": 0.20,\n      \"scale.y\": 0.20,\n      x: 175,\n    },\n    {\n      \"scale.x\": 0.20,\n      \"scale.y\": 0.20,\n      x: 730,\n    },\n  ]\n\n  return [argArr, tree]\n}\n\n\nfunction buildingFn() {\n\n\n  var argArr = [\n    {\n      \"scale.x\": 0.5,\n      \"scale.y\": 0.5,\n      x: 330,\n    },\n    {\n      \"scale.x\": 0.3,\n      \"scale.y\": 0.3,\n      x: 280,\n    },\n    {\n      \"scale.x\": 0.20,\n      \"scale.y\": 0.20,\n      x: 570,\n    },\n    {\n      \"scale.x\": 0.25,\n      \"scale.y\": 0.25,\n      x: 615,\n    },\n    {\n      \"scale.x\": 0.25,\n      \"scale.y\": 0.25,\n      x: 860,\n    },\n  ]\n\n  return [argArr, [\n    building0,\n    building2,\n    building3,\n    building4,\n    building1,\n  ]]\n}\n\nmodule.exports = function () {\n  var stage = new PIXI.Container();\n\n  addChildren(stage, arrFn(cloudFn),maxY)\n  addChildren(stage, arrFn(buildingFn),maxY)\n  addChildren(stage, arrFn(bushesFn),maxY)\n  addChildren(stage, arrFn(treesFn),maxY)\n\n  return stage;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/background/group.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/9/8.\n */\nfunction arrFn(argsFn) {\n\n  return function () {\n\n    var args = argsFn();\n\n    var arr = args[0], fn = args[1];\n\n    var fnArr = [].concat(fn);\n\n    return arr.map(function (arg, i) {\n\n\n      return fnArr[i % fnArr.length](arg);\n    })\n  }\n}\n\nfunction addChildren(stage, childrenFn,maxY) {\n  childrenFn().map(function (c) {\n\n    if (!c.y) {\n      c.y = maxY;\n    }\n    c.anchor.y = 1;\n\n    stage.addChild(c);\n  })\n}\n\n\nmodule.exports = {\n  arrFn:arrFn,\n  addChildren:addChildren,\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/background/fn.js\n ** module id = 52\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building0/index.js\n ** module id = 53\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('building0'),\n\n  \n\n    \n\n    \"spriteName\" :  \"building0\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building0/sprite.js\n ** module id = 54\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building1/index.js\n ** module id = 55\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('building1'),\n\n  \n\n    \n\n    \"spriteName\" :  \"building1\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building1/sprite.js\n ** module id = 56\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building2/index.js\n ** module id = 57\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('building2'),\n\n  \n\n    \n\n    \"spriteName\" :  \"building2\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building2/sprite.js\n ** module id = 58\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building3/index.js\n ** module id = 59\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('building3'),\n\n  \n\n    \n\n    \"spriteName\" :  \"building3\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building3/sprite.js\n ** module id = 60\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building4/index.js\n ** module id = 61\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('building4'),\n\n  \n\n    \n\n    \"spriteName\" :  \"building4\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building4/sprite.js\n ** module id = 62\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/bush/index.js\n ** module id = 63\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('bush'),\n\n  \n\n    \n\n    \"spriteName\" :  \"bush\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/bush/sprite.js\n ** module id = 64\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/cloud/index.js\n ** module id = 65\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('cloud'),\n\n  \n\n    \n\n    \"spriteName\" :  \"cloud\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/cloud/sprite.js\n ** module id = 66\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/cloudSun/index.js\n ** module id = 67\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('cloudSun'),\n\n  \n\n    \n\n    \"spriteName\" :  \"cloudSun\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/cloudSun/sprite.js\n ** module id = 68\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/tree/index.js\n ** module id = 69\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('tree'),\n\n  \n\n    \n\n    \"spriteName\" :  \"tree\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/tree/sprite.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/29.\n */\nvar _ = require('lodash');\nvar repeat = require('pixi-lib').utils.repeat;\nvar unfoldArray = require('pixi-lib').utils.unfoldArray;\n\nvar fn = require('./fn');\nvar addChildren = fn.addChildren;\nvar arrFn = fn.arrFn;\n\nvar greenHill = require('../../../images/greenHill');\nvar greenMountains = require('../../../images/greenMountains');\nvar westLakeLantern = require('../../../images/westLakeLantern');\nvar westLakeHydrant = require('../../../images/westLakeHydrant');\nvar groupBuildings = require('../../../images/groupBuildings');\nvar smokeShop = require('../../../images/smokeShop');\nvar platformChair = require('../../../images/platformChair');\nvar westLakeBridgeWave = require('../../../images/westLakeBridgeWave');\nvar westLakeBridgeApproache = require('../../../images/westLakeBridgeApproache');\nvar westLakeBridge = require('../../../images/westLakeBridge');\nvar westLakeMansion = require('../../../images/westLakeMansion');\n\nvar roadFn = require('../../../images/road');\n\nvar tree = require('../../../images/tree');\n\nvar bush = require('../../../images/bush');\nvar building5 = require('../../../images/building5');\nvar building6 = require('../../../images/building6');\n\nvar maxY = 640 - roadFn.roadHeight;\n\n\nfunction treesFn() {\n  var argArr = [\n    {\n      'scale.x':0.2,\n      'scale.y':0.2,\n      x:120,\n    },\n    {\n      'scale.x':0.2,\n      'scale.y':0.2,\n      x:600,\n    },\n    {\n      'scale.x':0.14,\n      'scale.y':0.14,\n      x:680\n    }\n  ];\n\n  return [argArr,tree];\n}\n\nfunction bushesFn() {\n\n  var argArr = [\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 170,\n    },\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 420,\n    },\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 750,\n    },\n    {\n      \"scale.x\": 0.10,\n      \"scale.y\": 0.10,\n      x: 925,\n    },\n  ]\n\n  return [argArr, bush]\n}\n\nfunction platformChairFn() {\n\n  var argArr = [\n    {\n      'scale.x':0.07,\n      'scale.y':0.07,\n      x:250\n    },\n    // {\n    //   'scale.x':0.07,\n    //   'scale.y':0.07,\n    //   x:800\n    // }\n  ]\n\n  return [argArr,platformChair];\n}\n\nfunction westLakeHydrantFn() {\n  var arg = [\n    {\n      'scale.x':0.5,\n      'scale.y':0.5,\n      x:400\n    },\n    {\n      'scale.x':0.5,\n      'scale.y':0.5,\n      x:700\n    }\n  ]\n\n  return [arg,westLakeHydrant]\n}\n\nfunction building6Fn() {\n  var arg = [\n    {\n      'scale.x':0.3,\n      'scale.y':0.3,\n      x:830\n    }\n  ]\n  return [arg,building6];\n}\n\nfunction greenHillFn() {\n  var args = [\n    {\n      'scale.x':0.35,\n      'scale.y':0.35,\n      x:350\n    }\n  ]\n\n  return [args,greenHill]\n}\n\nfunction descrorateFn() {\n  var arg = [\n    {\n      'scale.x':0.10,\n      'scale.y':0.1,\n      x:500\n    },\n    {\n      'scale.x':0.08,\n      'scale.y':0.08,\n      x:555\n    }\n  ]\n  return [arg,[\n    building5,\n    westLakeHydrant,\n  ]]\n}\n\nfunction maxYAddChildren(stage,arrFnWrapper) {\n  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n}\n\nmodule.exports = function () {\n  var stage = new PIXI.Container();\n\n  maxYAddChildren(stage,greenHillFn)\n  maxYAddChildren(stage,building6Fn)\n  maxYAddChildren(stage,platformChairFn)\n  maxYAddChildren(stage,bushesFn)\n  maxYAddChildren(stage,descrorateFn)\n  maxYAddChildren(stage,treesFn)\n\n  return stage;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/background/group2.js\n ** module id = 71\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/greenHill/index.js\n ** module id = 72\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('greenHill'),\n\n  \n\n    \n\n    \"spriteName\" :  \"greenHill\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/greenHill/sprite.js\n ** module id = 73\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/greenMountains/index.js\n ** module id = 74\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('greenMountains'),\n\n  \n\n    \n\n    \"spriteName\" :  \"greenMountains\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/greenMountains/sprite.js\n ** module id = 75\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeLantern/index.js\n ** module id = 76\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('westLakeLantern'),\n\n  \n\n    \n\n    \"spriteName\" :  \"westLakeLantern\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeLantern/sprite.js\n ** module id = 77\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeHydrant/index.js\n ** module id = 78\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('westLakeHydrant'),\n\n  \n\n    \n\n    \"spriteName\" :  \"westLakeHydrant\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeHydrant/sprite.js\n ** module id = 79\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/groupBuildings/index.js\n ** module id = 80\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('groupBuildings'),\n\n  \n\n    \n\n    \"spriteName\" :  \"groupBuildings\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/groupBuildings/sprite.js\n ** module id = 81\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/smokeShop/index.js\n ** module id = 82\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('smokeShop'),\n\n  \n\n    \n\n    \"spriteName\" :  \"smokeShop\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/smokeShop/sprite.js\n ** module id = 83\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/platformChair/index.js\n ** module id = 84\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('platformChair'),\n\n  \n\n    \n\n    \"spriteName\" :  \"platformChair\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/platformChair/sprite.js\n ** module id = 85\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeBridgeWave/index.js\n ** module id = 86\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\n\nmodule.exports = function spriteFn(arg){\n\n  var args = [{\n\n    textures:pixiLib.getTextures('westLakeBridgeWave'),\n\n\n\n\n\n    \"spriteName\" :  \"westLakeBridgeWave\" ,\n\n\n\n\n  }]\n\n\n\n  args.push([\n\n\n  ]);\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  console.log('yy:',args[0].y,arg.y)\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeBridgeWave/sprite.js\n ** module id = 87\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeBridgeApproache/index.js\n ** module id = 88\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('westLakeBridgeApproache'),\n\n  \n\n    \n\n    \"spriteName\" :  \"westLakeBridgeApproache\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeBridgeApproache/sprite.js\n ** module id = 89\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeBridge/index.js\n ** module id = 90\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('westLakeBridge'),\n\n  \n\n    \n\n    \"spriteName\" :  \"westLakeBridge\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeBridge/sprite.js\n ** module id = 91\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeMansion/index.js\n ** module id = 92\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('westLakeMansion'),\n\n  \n\n    \n\n    \"spriteName\" :  \"westLakeMansion\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/westLakeMansion/sprite.js\n ** module id = 93\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building5/index.js\n ** module id = 94\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('building5'),\n\n  \n\n    \n\n    \"spriteName\" :  \"building5\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building5/sprite.js\n ** module id = 95\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building6/index.js\n ** module id = 96\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('building6'),\n\n  \n\n    \n\n    \"spriteName\" :  \"building6\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/building6/sprite.js\n ** module id = 97\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/29.\n */\nvar _ = require('lodash');\nvar repeat = require('pixi-lib').utils.repeat;\nvar unfoldArray = require('pixi-lib').utils.unfoldArray;\n\nvar fn = require('./fn');\nvar addChildren = fn.addChildren;\nvar arrFn = fn.arrFn;\n\nvar greenHill = require('../../../images/greenHill');\nvar greenMountains = require('../../../images/greenMountains');\nvar westLakeLantern = require('../../../images/westLakeLantern');\nvar westLakeHydrant = require('../../../images/westLakeHydrant');\nvar groupBuildings = require('../../../images/groupBuildings');\nvar platformChair = require('../../../images/platformChair');\nvar westLakeMansion = require('../../../images/westLakeMansion');\n\nvar roadFn = require('../../../images/road');\n\nvar tree = require('../../../images/tree');\n\nvar bush = require('../../../images/bush');\nvar building5 = require('../../../images/building5');\n\nvar maxY = 640 - roadFn.roadHeight;\n\n\nfunction treesFn() {\n  var argArr = [\n    {\n      'scale.x':0.2,\n      'scale.y':0.2,\n      x:170,\n    },\n    {\n      'scale.x':0.15,\n      'scale.y':0.15,\n      x:750,\n    },\n  ];\n\n  return [argArr,tree];\n}\n\nfunction bushesFn() {\n\n  var argArr = [\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 150,\n    },\n  ]\n\n  return [argArr, bush]\n}\n\nfunction platformChairFn() {\n\n  var argArr = [\n    {\n      'scale.x':0.07,\n      'scale.y':0.07,\n      x:00\n    },\n  ]\n\n  return [argArr,platformChair];\n}\n\nfunction greenHillFn() {\n  var args = [\n    {\n      'scale.x':0.25,\n      'scale.y':0.25,\n      x:50\n    },\n    {\n      'scale.x':0.35,\n      'scale.y':0.35,\n      x:500\n    }\n  ]\n\n  return [args,greenHill]\n}\n\nfunction westLakeMansionFn() {\n  var argArr = [\n    {\n      'scale.x':0.5,\n      'scale.y':0.5,\n      'x':350,\n    },\n  ]\n\n  return [argArr,westLakeMansion]\n}\n\n\nfunction maxYAddChildren(stage,arrFnWrapper) {\n  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n}\n\nmodule.exports = function () {\n  var stage = new PIXI.Container();\n\n  maxYAddChildren(stage,greenHillFn)\n\n  maxYAddChildren(stage,platformChairFn)\n  maxYAddChildren(stage,westLakeMansionFn)\n\n  maxYAddChildren(stage,bushesFn)\n  maxYAddChildren(stage,treesFn)\n\n\n  console.log('!!!')\n\n  return stage;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/background/group3.js\n ** module id = 98\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/29.\n */\nvar _ = require('lodash');\nvar repeat = require('pixi-lib').utils.repeat;\nvar unfoldArray = require('pixi-lib').utils.unfoldArray;\n\nvar fn = require('./fn');\nvar addChildren = fn.addChildren;\nvar arrFn = fn.arrFn;\n\nvar greenHill = require('../../../images/greenHill');\nvar greenMountains = require('../../../images/greenMountains');\nvar westLakeLantern = require('../../../images/westLakeLantern');\nvar westLakeHydrant = require('../../../images/westLakeHydrant');\nvar groupBuildings = require('../../../images/groupBuildings');\nvar smokeShop = require('../../../images/smokeShop');\nvar platformChair = require('../../../images/platformChair');\nvar westLakeBridgeWave = require('../../../images/westLakeBridgeWave');\nvar westLakeBridgeApproache = require('../../../images/westLakeBridgeApproache');\nvar westLakeBridge = require('../../../images/westLakeBridge');\nvar westLakeMansion = require('../../../images/westLakeMansion');\n\nvar roadFn = require('../../../images/road');\n\nvar tree = require('../../../images/tree');\n\nvar bush = require('../../../images/bush');\nvar building5 = require('../../../images/building5');\nvar building6 = require('../../../images/building6');\n\nvar maxY = 640 - roadFn.roadHeight;\n\n\nfunction bushesFn() {\n\n  var argArr = [\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 840,\n    },\n    {\n      \"scale.x\": 0.10,\n      \"scale.y\": 0.10,\n      x: 905,\n    },\n  ]\n\n  return [argArr, bush]\n}\n\n\nfunction greenHillFn() {\n  var args = [\n    {\n      'scale.x':0.15,\n      'scale.y':0.15,\n      x:50\n    },\n    {\n      'scale.x':0.4,\n      'scale.y':0.4,\n      x:250\n    },\n    {\n      'scale.x':0.25,\n      'scale.y':0.25,\n      x:670\n    },\n  ]\n\n  return [args,greenHill]\n}\n\nfunction bridgeFn() {\n\n  var args = [{\n    'scale.x':0.3,\n    'scale.y':0.3\n  }]\n\n  return [args,westLakeBridge]\n}\n\n\nfunction lanternFn(){\n  var args = [{\n    'scale.x':0.25,\n    'scale.y':0.25,\n    'x':100,\n  }];\n\n  return [args,westLakeLantern]\n}\n\nfunction waveFn() {\n  var args = [{\n    'scale.x':0.05,\n    'scale.y':0.05,\n    x:220,\n    y:625,\n  },{\n    'scale.x':0.05,\n    'scale.y':0.05,\n    x:400,\n    y:615\n  },{\n    'scale.x':0.05,\n    'scale.y':0.05,\n    x:580,\n    y:625,\n  },{\n    'scale.x':0.05,\n    'scale.y':0.05,\n    x:750,\n    y:615\n  },{\n    'scale.x':0.05,\n    'scale.y':0.05,\n    x:910,\n    y:625\n  }];\n\n  return [args,westLakeBridgeWave]\n}\n\nfunction maxYAddChildren(stage,arrFnWrapper) {\n  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n}\n\nmodule.exports = function () {\n  var stage = new PIXI.Container();\n\n  maxYAddChildren(stage,greenHillFn)\n  maxYAddChildren(stage,bushesFn)\n  addChildren(stage,arrFn(bridgeFn),675)\n  //maxYAddChildren(stage,lanternFn)\n  addChildren(stage,arrFn(lanternFn),maxY + 47)\n\n  addChildren(stage,arrFn(waveFn),620)\n\n  console.log('group4');\n\n  return stage;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/background/group4.js\n ** module id = 99\n ** module chunks = 0\n **/","/**\n * Created by zyg on 16/8/29.\n */\nvar _ = require('lodash');\nvar repeat = require('pixi-lib').utils.repeat;\nvar unfoldArray = require('pixi-lib').utils.unfoldArray;\n\nvar fn = require('./fn');\nvar addChildren = fn.addChildren;\nvar arrFn = fn.arrFn;\n\nvar greenHill = require('../../../images/greenHill');\nvar greenMountains = require('../../../images/greenMountains');\nvar westLakeLantern = require('../../../images/westLakeLantern');\nvar westLakeHydrant = require('../../../images/westLakeHydrant');\nvar groupBuildings = require('../../../images/groupBuildings');\nvar smokeShop = require('../../../images/smokeShop');\nvar platformChair = require('../../../images/platformChair');\nvar westLakeBridgeWave = require('../../../images/westLakeBridgeWave');\nvar westLakeBridgeApproache = require('../../../images/westLakeBridgeApproache');\nvar westLakeBridge = require('../../../images/westLakeBridge');\nvar westLakeMansion = require('../../../images/westLakeMansion');\n\nvar roadFn = require('../../../images/road');\n\nvar tree = require('../../../images/tree');\n\nvar bush = require('../../../images/bush');\nvar building5 = require('../../../images/building5');\nvar building6 = require('../../../images/building6');\n\nvar maxY = 640 - roadFn.roadHeight;\n\n\nfunction treesFn() {\n  var argArr = [\n    {\n      'scale.x':0.2,\n      'scale.y':0.2,\n      x:600,\n    },\n  ];\n\n  return [argArr,tree];\n}\n\nfunction bushesFn() {\n\n  var argArr = [\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 170,\n    },\n    {\n      \"scale.x\": 0.08,\n      \"scale.y\": 0.08,\n      x: 420,\n    },\n  ]\n\n  return [argArr, bush]\n}\n\nfunction platformChairFn() {\n\n  var argArr = [\n    {\n      'scale.x':0.07,\n      'scale.y':0.07,\n      x:250\n    },\n    // {\n    //   'scale.x':0.07,\n    //   'scale.y':0.07,\n    //   x:800\n    // }\n  ]\n\n  return [argArr,platformChair];\n}\n\nfunction building6Fn() {\n  var arg = [\n    {\n      'scale.x':0.2,\n      'scale.y':0.2,\n      x:75\n    }\n  ]\n  return [arg,building6];\n}\n\nfunction greenHillFn() {\n  var args = [\n    {\n      'scale.x':0.35,\n      'scale.y':0.35,\n      x:350\n    }\n  ]\n\n  return [args,greenHill]\n}\n\nfunction descrorateFn() {\n  var arg = [\n    {\n      'scale.x':0.10,\n      'scale.y':0.1,\n      x:500\n    },\n    {\n      'scale.x':0.08,\n      'scale.y':0.08,\n      x:555\n    }\n  ]\n  return [arg,[\n    building5,\n    westLakeHydrant,\n  ]]\n}\nfunction smokeShopFn() {\n  var arg=[\n    {\n      'scale.x':0.45,\n      'scale.y':0.45,\n      x:685,\n    }\n  ]\n  return [arg,smokeShop]\n}\n\n\nfunction maxYAddChildren(stage,arrFnWrapper) {\n  return addChildren(stage,arrFn(arrFnWrapper),maxY);\n}\n\nmodule.exports = function () {\n  var stage = new PIXI.Container();\n\n  maxYAddChildren(stage,greenHillFn)\n  maxYAddChildren(stage,building6Fn)\n  maxYAddChildren(stage,platformChairFn)\n  maxYAddChildren(stage,bushesFn)\n  maxYAddChildren(stage,descrorateFn)\n  maxYAddChildren(stage,treesFn)\n\n  addChildren(stage,arrFn(smokeShopFn),maxY + 45)\n\n  return stage;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/background/group5.js\n ** module id = 100\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/game_background/index.js\n ** module id = 101\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('game_background'),\n\n  \n\n    \n\n    \"spriteName\" :  \"game_background\" ,\n\n    \n\n  \n\n    \n\n    \"anchor.x\" :  0.5 ,\n\n    \n\n  \n\n    \n\n    \"anchor.y\" :  0.5 ,\n\n    \n\n  \n\n    \n\n    \"scale.x\" :  1 ,\n\n    \n\n  \n\n    \n\n    \"scale.y\" :  1 ,\n\n    \n\n  \n\n    \n\n    \"x\" :  502 ,\n\n    \n\n  \n\n    \n\n    \"y\" :  320 ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/game_background/sprite.js\n ** module id = 102\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nfunction scoreTextFn() {\n\n  var t = new PIXI.Text('0 ',{\n    font: 'bold 60px Arvo',\n    fill: '#ffffff',\n    align: 'center',\n  })\n\n  t.x = 95;\n  t.y = 30;\n\n  return {\n    el:function () {\n      return t;\n    },\n    setText:function (v) {\n      v = parseInt(v)\n      if(isNaN(v)){\n        v = 0\n      }\n      t.text = v + ' ';\n    }\n  }\n}\n\nmodule.exports = function (arg) {\n\n  var stage = new PIXI.Container();\n  var score = 0;\n\n  var scoreObj = scoreTextFn();\n\n  var sp = mySpriteFn(arg)\n\n  sp.render = function () {\n\n  };\n\n\n  stage.addChild(scoreObj.el())\n  stage.addChild(sp);\n\n\n  stage.upScore = function () {\n    scoreObj.setText(++score)\n  }\n\n  stage.getScore = function () {\n    return score;\n  }\n  \n  return stage;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/goldCoin/index.js\n ** module id = 103\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('goldCoin'),\n\n  \n\n    \n\n    \"spriteName\" :  \"goldCoin\" ,\n\n    \n\n  \n\n    \n\n    \"scale.x\" :  0.25 ,\n\n    \n\n  \n\n    \n\n    \"scale.y\" :  0.25 ,\n\n    \n\n  \n\n    \n\n    \"anchor.x\" :  0 ,\n\n    \n\n  \n\n    \n\n    \"x\" :  20 ,\n\n    \n\n  \n\n    \n\n    \"y\" :  20 ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/goldCoin/sprite.js\n ** module id = 104\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib')\nvar world = require('../world')\nvar Player = require('../physics/player')\n\nvar dogFn = require('../../../images/cat');\nvar roadFn = require('../../../images/road')\n\nvar sprite = dogFn({\n  \"anchor.x\": 0.5,\n  \"anchor.y\": 0.5,\n  x: 320,\n  y: 0,\n})\nsprite.alive = true\nsprite.finish = false\n/**\n *  --> physics\n **/\n\nvar player = new Player({\n  width: sprite.width,\n  height: sprite.height,\n  position: {x: 320, y: 0}\n})\n\n/**\n *  --> public method\n **/\nvar flyoutSpeed = {x: 2, y: 8}\nvar position = {x: 0, y: 0}\nvar g = 0.1 \n\n//水平移动数值\nsprite.moveSpeed = 0;\nsprite.moveX = 0;\n\n//狗到达终点的x值.\nvar endX = 650;\n\nsprite.render = function() {\n  if (!sprite.finish) {\n\n    if (sprite.alive) {\n      sprite.moveX += sprite.moveSpeed;\n\n      sprite.x = player.position.x + sprite.moveX;\n      sprite.y = world.getY(player.position.y);\n\n      if(sprite.x > endX + 250){\n        sprite.finish = true\n        container.finishCb();\n      }\n\n    } else {\n      sprite.rotation += 0.2\n      position.x += flyoutSpeed.x\n      position.y += flyoutSpeed.y\n      flyoutSpeed.y -= g\n      sprite.x = position.x\n      sprite.y = world.getY(position.y)\n      if (position.y < -150) {\n        sprite.finish = true\n        if (container.finishCb) {\n          container.finishCb()\n        }\n      }\n    }\n  }\n}\n\nsprite.gogogo = function(){\n  sprite.moveSpeed = 1;\n}\n\nsprite.play();\n\nvar upY = -55;\nvar downY = 55;\nvar distance = 55;\n\nvar container = new PIXI.Container();\ncontainer.y = 0;\n\nvar g = new PIXI.Graphics();\n\ng.beginFill(0x000000);\ng.drawRect(0,0,640,700);\ng.endFill();\n\ncontainer.mask = g;\n\ncontainer.jump = function () {\n  if (player.inland){\n    player.v.y = 1500\n  }\n};\n\ncontainer.end = function() {\n  if (sprite.alive) {\n    sprite.alive = false\n    sprite.stop()\n    position = player.position\n  }\n}\n\ncontainer.up = function () {\n  if(this.y > upY){\n    this.y -= distance;\n  }\n}\ncontainer.down = function () {\n  if(this.y <  downY){\n    this.y += distance\n  }\n}\n\ncontainer.addChild(sprite)\n\ncontainer.reset = function() {\n  player = new Player({\n    width: sprite.width,\n    height: sprite.height,\n    position: {x: 320, y: 0}\n  })\n  world.world.addPlayer(player)\n  sprite.alive = true;\n  sprite.finish = false;\n  sprite.rotation = 0\n  sprite.play()\n  flyoutSpeed = {x: 2, y: 8}\n  position = {x: 0, y: 0}\n  g = 0.1 \n}\n\ncontainer.render = sprite.render.bind(sprite);\ncontainer.gogogo = sprite.gogogo;\n\n\n\n\nmodule.exports = container\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/dog/index.js\n ** module id = 105\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/cat/index.js\n ** module id = 106\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('cat'),\n\n  \n  \"scale.x\" : 0.5,\n  \n  \"scale.y\": 0.5,\n    \n\n    \"spriteName\" :  \"cat\" ,\n\n    \n\n  \n\n    \n\n    \"animationSpeed\" :  0.4 ,\n\n    \n\n  \n\n    \n\n    \"play\" :  1 ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getMc.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/cat/sprite.js\n ** module id = 107\n ** module chunks = 0\n **/","var png = ['game_over_background', 'play_again_button']\nvar stage = new PIXI.Container()\nvar loader = require('../loader')\n\nvar textForScore = function(score, finish) {\n  if (finish) {\n    return '你获得了' + score + '的好成绩'\n  } else {\n    return '太差了，居然就这么被撞飞了'\n  }\n};\n\nvar ajax = require('../lib/ajax');\n\n/**\n *  --> Public Method\n **/\nvar render = function (renderer, score, finish) {\n  score = score || 0\n  if (!finish) {\n    var user = 'owuWAwWD7-YBp4Dl77zZcXmdQBnw'\n\n    ajax('/api/game/57d64d81300869c24a825bfd/user/' + user + '/score')\n      .post({\n      score: score\n    }).then(function(response) {\n      console.log(response)\n    });\n\n  }\n  loader.add(png, 'png').load(function () {\n    var background = require('../../images/game_over_background')()\n    var button = require('../../images/play_again_button')({\"scale.y\": 0.8})\n    var text = new PIXI.Text(\n      textForScore(score, finish),\n      {font: '30px Helvetica-Light', \n        fill: 'white'})\n    text.anchor.x = text.anchor.y = 0.5\n    text.x = 320\n    text.y = 600\n    stage.addChild(background)\n    stage.addChild(button)\n    stage.addChild(text)\n    button.interactive = true\n    button.on('touchstart', function() {\n      var game = require('../game')\n      game(renderer)\n    })\n    renderer(stage)\n  })\n}\n\n\nmodule.exports = render\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/end/index.js\n ** module id = 108\n ** module chunks = 0\n **/",";\n(function (root, factory) {\n  'use strict';\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define('Ajax', factory);\n  }\n  else if (typeof exports === 'object') {\n    exports = module.exports = factory();\n  }\n  else {\n    root.Ajax = factory();\n  }\n})(this, function () {\n  'use strict';\n  var $private = {};\n\n  var createMethods = function createMethods() {\n    return {\n      then: function () {\n      },\n      done: function () {\n      },\n      error: function () {\n      },\n      always: function () {\n      }\n    }\n  }\n  $private.XHRConnection = function XHRConnection(type, url, data) {\n    var methods = createMethods();\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(type, url || '', true);\n\n    if(!(data instanceof FormData)){\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.addEventListener('readystatechange', $private.ready(methods), false);\n    xhr.send($private.objectToQueryString(data));\n\n    return $private.promises(methods);\n  };\n  $private.ready = function ready(methods) {\n\n    return function () {\n      var xhr = this;\n      var DONE = 4;\n      if (xhr.readyState === DONE) {\n        methods.always\n          .apply(methods, $private.parseResponse(xhr));\n        if (xhr.status >= 200 && xhr.status < 300) {\n          methods.done.apply(methods, $private.parseResponse(xhr));\n          methods.then.apply(methods, $private.parseResponse(xhr));\n        }\n        methods.error.apply(methods, $private.parseResponse(xhr));\n      }\n    }\n  };\n  $private.parseResponse = function parseResponse(xhr) {\n    var result;\n    try {\n      result = JSON.parse(xhr.responseText);\n    }\n    catch (e) {\n      result = xhr.responseText;\n    }\n    return [result, xhr];\n  };\n\n  $private.promises = function promises(methods) {\n    var allPromises = {};\n    Object.keys(methods).forEach(function (promise) {\n      allPromises[promise] = function (callback) {\n        return methods[promise] = callback\n      }\n    }, this);\n    return allPromises;\n  };\n\n  $private.objectToQueryString = function objectToQueryString(data) {\n    //console.log(data,typeof data,$private.isObject(data),data instanceof FormData);\n    return (data instanceof FormData) ? data:\n      $private.isObject(data) ? $private.getQueryString(data):data;\n  };\n\n  $private.getQueryString = function getQueryString(object) {\n    return Object.keys(object).filter(function (key) {\n      return object[key] !== undefined || object[key] !== null;\n    }).map(function (item) {\n      var value = object[item];\n      if($private.isObject(value)){\n        value = JSON.stringify(value);\n      }\n\n      return encodeURIComponent(item)\n        + '=' + encodeURIComponent(value);\n    }).join('&');\n  };\n\n  $private.isObject = function isObject(data) {\n    return '[object Object]' === Object.prototype.toString.call(data);\n  };\n\n\n  function Ajax(url) {\n    var $public = {};\n\n    $public.get = function get(data) {\n\n      return $private.XHRConnection('GET', url + '?' + $private.objectToQueryString(data));\n    };\n\n    $public.post = function post(data) {\n      return $private.XHRConnection('POST', url, data);\n    };\n\n    $public.put = function put(data) {\n      return $private.XHRConnection('PUT', url, data);\n    };\n\n    $public.delete = function del(data) {\n      return $private.XHRConnection('DELETE', url, data);\n    };\n\n    return $public;\n  }\n\n  window.ajax = Ajax;\n\n  return Ajax;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/ajax.js\n ** module id = 109\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/game_over_background/index.js\n ** module id = 110\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('game_over_background'),\n\n  \n\n    \n\n    \"spriteName\" :  \"game_over_background\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/game_over_background/sprite.js\n ** module id = 111\n ** module chunks = 0\n **/","var mySpriteFn = require('./sprite.js');\nvar pixiLib = require('pixi-lib')\n\n\nmodule.exports = function (arg) {\n\n   var sp = mySpriteFn(arg)\n\n    sp.render = function(){\n\n    }\n\n   return sp;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/play_again_button/index.js\n ** module id = 112\n ** module chunks = 0\n **/","var pixiLib = require('pixi-lib');\n\nvar args = [{\n\n  textures:pixiLib.getTextures('play_again_button'),\n\n  \n\n    \n\n    \"anchor.x\" :  0.5 ,\n\n    \n\n  \n\n    \n\n    \"anchor.y\" :  0.5 ,\n\n    \n\n  \n\n    \n\n    \"x\" :  320 ,\n\n    \n\n  \n\n    \n\n    \"y\" :  800 ,\n\n    \n\n  \n\n    \n\n    \"spriteName\" :  \"play_again_button\" ,\n\n    \n\n  \n}]\n\n\n\n  args.push([\n\n    \n  ]);\n\n\n\nmodule.exports = function spriteFn(arg){\n\n  if(!arg){\n     arg = {}\n  }\n\n  for(var k in arg){\n   args[0][k] = arg[k]\n  }\n\n  var mySprite = pixiLib.getIm.apply(pixiLib,args);\n\n  return mySprite;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./images/play_again_button/sprite.js\n ** module id = 113\n ** module chunks = 0\n **/"],"sourceRoot":""}